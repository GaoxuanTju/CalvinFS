// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: metadata.proto

#include "metadata.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_metadata_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FilePart_metadata_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_metadata_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Permissions_metadata_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_metadata_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_MetadataEntry_metadata_2eproto;
class PermissionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Permissions> _instance;
} _Permissions_default_instance_;
class FilePartDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FilePart> _instance;
} _FilePart_default_instance_;
class MetadataEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MetadataEntry> _instance;
} _MetadataEntry_default_instance_;
class MetadataAction_CreateFileInputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MetadataAction_CreateFileInput> _instance;
} _MetadataAction_CreateFileInput_default_instance_;
class MetadataAction_CreateFileOutputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MetadataAction_CreateFileOutput> _instance;
} _MetadataAction_CreateFileOutput_default_instance_;
class MetadataAction_EraseInputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MetadataAction_EraseInput> _instance;
} _MetadataAction_EraseInput_default_instance_;
class MetadataAction_EraseOutputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MetadataAction_EraseOutput> _instance;
} _MetadataAction_EraseOutput_default_instance_;
class MetadataAction_CopyInputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MetadataAction_CopyInput> _instance;
} _MetadataAction_CopyInput_default_instance_;
class MetadataAction_CopyOutputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MetadataAction_CopyOutput> _instance;
} _MetadataAction_CopyOutput_default_instance_;
class MetadataAction_RenameInputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MetadataAction_RenameInput> _instance;
} _MetadataAction_RenameInput_default_instance_;
class MetadataAction_RenameOutputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MetadataAction_RenameOutput> _instance;
} _MetadataAction_RenameOutput_default_instance_;
class MetadataAction_LookupInputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MetadataAction_LookupInput> _instance;
} _MetadataAction_LookupInput_default_instance_;
class MetadataAction_LookupOutputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MetadataAction_LookupOutput> _instance;
} _MetadataAction_LookupOutput_default_instance_;
class MetadataAction_Tree_LookupInputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MetadataAction_Tree_LookupInput> _instance;
} _MetadataAction_Tree_LookupInput_default_instance_;
class MetadataAction_Tree_LookupOutputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MetadataAction_Tree_LookupOutput> _instance;
} _MetadataAction_Tree_LookupOutput_default_instance_;
class MetadataAction_ResizeInputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MetadataAction_ResizeInput> _instance;
} _MetadataAction_ResizeInput_default_instance_;
class MetadataAction_ResizeOutputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MetadataAction_ResizeOutput> _instance;
} _MetadataAction_ResizeOutput_default_instance_;
class MetadataAction_WriteInputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MetadataAction_WriteInput> _instance;
} _MetadataAction_WriteInput_default_instance_;
class MetadataAction_WriteOutputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MetadataAction_WriteOutput> _instance;
} _MetadataAction_WriteOutput_default_instance_;
class MetadataAction_AppendInputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MetadataAction_AppendInput> _instance;
} _MetadataAction_AppendInput_default_instance_;
class MetadataAction_AppendOutputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MetadataAction_AppendOutput> _instance;
} _MetadataAction_AppendOutput_default_instance_;
class MetadataAction_ChangePermissionsInputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MetadataAction_ChangePermissionsInput> _instance;
} _MetadataAction_ChangePermissionsInput_default_instance_;
class MetadataAction_ChangePermissionsOutputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MetadataAction_ChangePermissionsOutput> _instance;
} _MetadataAction_ChangePermissionsOutput_default_instance_;
class MetadataActionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MetadataAction> _instance;
} _MetadataAction_default_instance_;
static void InitDefaultsPermissions_metadata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::Permissions::_i_give_permission_to_break_this_code_default_mode_.DefaultConstruct();
  *::Permissions::_i_give_permission_to_break_this_code_default_mode_.get_mutable() = ::std::string("777", 3);
  ::google::protobuf::internal::OnShutdownDestroyString(
      ::Permissions::_i_give_permission_to_break_this_code_default_mode_.get_mutable());
  {
    void* ptr = &::_Permissions_default_instance_;
    new (ptr) ::Permissions();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Permissions::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Permissions_metadata_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPermissions_metadata_2eproto}, {}};

static void InitDefaultsFilePart_metadata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_FilePart_default_instance_;
    new (ptr) ::FilePart();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FilePart::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FilePart_metadata_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFilePart_metadata_2eproto}, {}};

static void InitDefaultsMetadataEntry_metadata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MetadataEntry_default_instance_;
    new (ptr) ::MetadataEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MetadataEntry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_MetadataEntry_metadata_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsMetadataEntry_metadata_2eproto}, {
      &scc_info_Permissions_metadata_2eproto.base,
      &scc_info_FilePart_metadata_2eproto.base,}};

static void InitDefaultsMetadataAction_CreateFileInput_metadata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MetadataAction_CreateFileInput_default_instance_;
    new (ptr) ::MetadataAction_CreateFileInput();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MetadataAction_CreateFileInput::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MetadataAction_CreateFileInput_metadata_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMetadataAction_CreateFileInput_metadata_2eproto}, {
      &scc_info_Permissions_metadata_2eproto.base,}};

static void InitDefaultsMetadataAction_CreateFileOutput_metadata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MetadataAction_CreateFileOutput_default_instance_;
    new (ptr) ::MetadataAction_CreateFileOutput();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MetadataAction_CreateFileOutput::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MetadataAction_CreateFileOutput_metadata_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMetadataAction_CreateFileOutput_metadata_2eproto}, {}};

static void InitDefaultsMetadataAction_EraseInput_metadata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MetadataAction_EraseInput_default_instance_;
    new (ptr) ::MetadataAction_EraseInput();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MetadataAction_EraseInput::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MetadataAction_EraseInput_metadata_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMetadataAction_EraseInput_metadata_2eproto}, {
      &scc_info_Permissions_metadata_2eproto.base,}};

static void InitDefaultsMetadataAction_EraseOutput_metadata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MetadataAction_EraseOutput_default_instance_;
    new (ptr) ::MetadataAction_EraseOutput();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MetadataAction_EraseOutput::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MetadataAction_EraseOutput_metadata_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMetadataAction_EraseOutput_metadata_2eproto}, {}};

static void InitDefaultsMetadataAction_CopyInput_metadata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MetadataAction_CopyInput_default_instance_;
    new (ptr) ::MetadataAction_CopyInput();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MetadataAction_CopyInput::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MetadataAction_CopyInput_metadata_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMetadataAction_CopyInput_metadata_2eproto}, {
      &scc_info_Permissions_metadata_2eproto.base,}};

static void InitDefaultsMetadataAction_CopyOutput_metadata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MetadataAction_CopyOutput_default_instance_;
    new (ptr) ::MetadataAction_CopyOutput();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MetadataAction_CopyOutput::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MetadataAction_CopyOutput_metadata_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMetadataAction_CopyOutput_metadata_2eproto}, {}};

static void InitDefaultsMetadataAction_RenameInput_metadata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MetadataAction_RenameInput_default_instance_;
    new (ptr) ::MetadataAction_RenameInput();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MetadataAction_RenameInput::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MetadataAction_RenameInput_metadata_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMetadataAction_RenameInput_metadata_2eproto}, {
      &scc_info_Permissions_metadata_2eproto.base,}};

static void InitDefaultsMetadataAction_RenameOutput_metadata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MetadataAction_RenameOutput_default_instance_;
    new (ptr) ::MetadataAction_RenameOutput();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MetadataAction_RenameOutput::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MetadataAction_RenameOutput_metadata_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMetadataAction_RenameOutput_metadata_2eproto}, {}};

static void InitDefaultsMetadataAction_LookupInput_metadata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MetadataAction_LookupInput_default_instance_;
    new (ptr) ::MetadataAction_LookupInput();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MetadataAction_LookupInput::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MetadataAction_LookupInput_metadata_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMetadataAction_LookupInput_metadata_2eproto}, {
      &scc_info_Permissions_metadata_2eproto.base,}};

static void InitDefaultsMetadataAction_LookupOutput_metadata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MetadataAction_LookupOutput_default_instance_;
    new (ptr) ::MetadataAction_LookupOutput();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MetadataAction_LookupOutput::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MetadataAction_LookupOutput_metadata_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMetadataAction_LookupOutput_metadata_2eproto}, {
      &scc_info_MetadataEntry_metadata_2eproto.base,}};

static void InitDefaultsMetadataAction_Tree_LookupInput_metadata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MetadataAction_Tree_LookupInput_default_instance_;
    new (ptr) ::MetadataAction_Tree_LookupInput();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MetadataAction_Tree_LookupInput::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MetadataAction_Tree_LookupInput_metadata_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMetadataAction_Tree_LookupInput_metadata_2eproto}, {
      &scc_info_Permissions_metadata_2eproto.base,}};

static void InitDefaultsMetadataAction_Tree_LookupOutput_metadata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MetadataAction_Tree_LookupOutput_default_instance_;
    new (ptr) ::MetadataAction_Tree_LookupOutput();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MetadataAction_Tree_LookupOutput::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MetadataAction_Tree_LookupOutput_metadata_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMetadataAction_Tree_LookupOutput_metadata_2eproto}, {
      &scc_info_MetadataEntry_metadata_2eproto.base,}};

static void InitDefaultsMetadataAction_ResizeInput_metadata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MetadataAction_ResizeInput_default_instance_;
    new (ptr) ::MetadataAction_ResizeInput();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MetadataAction_ResizeInput::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MetadataAction_ResizeInput_metadata_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMetadataAction_ResizeInput_metadata_2eproto}, {
      &scc_info_Permissions_metadata_2eproto.base,}};

static void InitDefaultsMetadataAction_ResizeOutput_metadata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MetadataAction_ResizeOutput_default_instance_;
    new (ptr) ::MetadataAction_ResizeOutput();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MetadataAction_ResizeOutput::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MetadataAction_ResizeOutput_metadata_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMetadataAction_ResizeOutput_metadata_2eproto}, {}};

static void InitDefaultsMetadataAction_WriteInput_metadata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MetadataAction_WriteInput_default_instance_;
    new (ptr) ::MetadataAction_WriteInput();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MetadataAction_WriteInput::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_MetadataAction_WriteInput_metadata_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsMetadataAction_WriteInput_metadata_2eproto}, {
      &scc_info_Permissions_metadata_2eproto.base,
      &scc_info_FilePart_metadata_2eproto.base,}};

static void InitDefaultsMetadataAction_WriteOutput_metadata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MetadataAction_WriteOutput_default_instance_;
    new (ptr) ::MetadataAction_WriteOutput();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MetadataAction_WriteOutput::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MetadataAction_WriteOutput_metadata_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMetadataAction_WriteOutput_metadata_2eproto}, {}};

static void InitDefaultsMetadataAction_AppendInput_metadata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MetadataAction_AppendInput_default_instance_;
    new (ptr) ::MetadataAction_AppendInput();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MetadataAction_AppendInput::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_MetadataAction_AppendInput_metadata_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsMetadataAction_AppendInput_metadata_2eproto}, {
      &scc_info_Permissions_metadata_2eproto.base,
      &scc_info_FilePart_metadata_2eproto.base,}};

static void InitDefaultsMetadataAction_AppendOutput_metadata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MetadataAction_AppendOutput_default_instance_;
    new (ptr) ::MetadataAction_AppendOutput();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MetadataAction_AppendOutput::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MetadataAction_AppendOutput_metadata_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMetadataAction_AppendOutput_metadata_2eproto}, {}};

static void InitDefaultsMetadataAction_ChangePermissionsInput_metadata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MetadataAction_ChangePermissionsInput_default_instance_;
    new (ptr) ::MetadataAction_ChangePermissionsInput();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MetadataAction_ChangePermissionsInput::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MetadataAction_ChangePermissionsInput_metadata_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMetadataAction_ChangePermissionsInput_metadata_2eproto}, {
      &scc_info_Permissions_metadata_2eproto.base,}};

static void InitDefaultsMetadataAction_ChangePermissionsOutput_metadata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MetadataAction_ChangePermissionsOutput_default_instance_;
    new (ptr) ::MetadataAction_ChangePermissionsOutput();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MetadataAction_ChangePermissionsOutput::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MetadataAction_ChangePermissionsOutput_metadata_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMetadataAction_ChangePermissionsOutput_metadata_2eproto}, {}};

static void InitDefaultsMetadataAction_metadata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MetadataAction_default_instance_;
    new (ptr) ::MetadataAction();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MetadataAction::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MetadataAction_metadata_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMetadataAction_metadata_2eproto}, {}};

void InitDefaults_metadata_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_Permissions_metadata_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FilePart_metadata_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MetadataEntry_metadata_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MetadataAction_CreateFileInput_metadata_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MetadataAction_CreateFileOutput_metadata_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MetadataAction_EraseInput_metadata_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MetadataAction_EraseOutput_metadata_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MetadataAction_CopyInput_metadata_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MetadataAction_CopyOutput_metadata_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MetadataAction_RenameInput_metadata_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MetadataAction_RenameOutput_metadata_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MetadataAction_LookupInput_metadata_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MetadataAction_LookupOutput_metadata_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MetadataAction_Tree_LookupInput_metadata_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MetadataAction_Tree_LookupOutput_metadata_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MetadataAction_ResizeInput_metadata_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MetadataAction_ResizeOutput_metadata_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MetadataAction_WriteInput_metadata_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MetadataAction_WriteOutput_metadata_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MetadataAction_AppendInput_metadata_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MetadataAction_AppendOutput_metadata_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MetadataAction_ChangePermissionsInput_metadata_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MetadataAction_ChangePermissionsOutput_metadata_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MetadataAction_metadata_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_metadata_2eproto[24];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_metadata_2eproto[3];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_metadata_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_metadata_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::Permissions, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::Permissions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Permissions, owner_),
  PROTOBUF_FIELD_OFFSET(::Permissions, group_),
  PROTOBUF_FIELD_OFFSET(::Permissions, mode_),
  1,
  2,
  0,
  PROTOBUF_FIELD_OFFSET(::FilePart, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::FilePart, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::FilePart, length_),
  PROTOBUF_FIELD_OFFSET(::FilePart, block_id_),
  PROTOBUF_FIELD_OFFSET(::FilePart, block_offset_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::MetadataEntry, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::MetadataEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MetadataEntry, locked_),
  PROTOBUF_FIELD_OFFSET(::MetadataEntry, permissions_),
  PROTOBUF_FIELD_OFFSET(::MetadataEntry, type_),
  PROTOBUF_FIELD_OFFSET(::MetadataEntry, file_parts_),
  PROTOBUF_FIELD_OFFSET(::MetadataEntry, dir_contents_),
  1,
  0,
  2,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::MetadataAction_CreateFileInput, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::MetadataAction_CreateFileInput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MetadataAction_CreateFileInput, path_),
  PROTOBUF_FIELD_OFFSET(::MetadataAction_CreateFileInput, permissions_),
  PROTOBUF_FIELD_OFFSET(::MetadataAction_CreateFileInput, type_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::MetadataAction_CreateFileOutput, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::MetadataAction_CreateFileOutput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MetadataAction_CreateFileOutput, success_),
  PROTOBUF_FIELD_OFFSET(::MetadataAction_CreateFileOutput, errors_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::MetadataAction_EraseInput, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::MetadataAction_EraseInput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MetadataAction_EraseInput, path_),
  PROTOBUF_FIELD_OFFSET(::MetadataAction_EraseInput, permissions_),
  PROTOBUF_FIELD_OFFSET(::MetadataAction_EraseInput, type_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::MetadataAction_EraseOutput, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::MetadataAction_EraseOutput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MetadataAction_EraseOutput, success_),
  PROTOBUF_FIELD_OFFSET(::MetadataAction_EraseOutput, errors_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::MetadataAction_CopyInput, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::MetadataAction_CopyInput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MetadataAction_CopyInput, from_path_),
  PROTOBUF_FIELD_OFFSET(::MetadataAction_CopyInput, to_path_),
  PROTOBUF_FIELD_OFFSET(::MetadataAction_CopyInput, permissions_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::MetadataAction_CopyOutput, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::MetadataAction_CopyOutput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MetadataAction_CopyOutput, success_),
  PROTOBUF_FIELD_OFFSET(::MetadataAction_CopyOutput, errors_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::MetadataAction_RenameInput, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::MetadataAction_RenameInput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MetadataAction_RenameInput, from_path_),
  PROTOBUF_FIELD_OFFSET(::MetadataAction_RenameInput, to_path_),
  PROTOBUF_FIELD_OFFSET(::MetadataAction_RenameInput, permissions_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::MetadataAction_RenameOutput, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::MetadataAction_RenameOutput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MetadataAction_RenameOutput, success_),
  PROTOBUF_FIELD_OFFSET(::MetadataAction_RenameOutput, errors_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::MetadataAction_LookupInput, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::MetadataAction_LookupInput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MetadataAction_LookupInput, path_),
  PROTOBUF_FIELD_OFFSET(::MetadataAction_LookupInput, permissions_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::MetadataAction_LookupOutput, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::MetadataAction_LookupOutput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MetadataAction_LookupOutput, success_),
  PROTOBUF_FIELD_OFFSET(::MetadataAction_LookupOutput, errors_),
  PROTOBUF_FIELD_OFFSET(::MetadataAction_LookupOutput, entry_),
  PROTOBUF_FIELD_OFFSET(::MetadataAction_LookupOutput, path_),
  2,
  ~0u,
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::MetadataAction_Tree_LookupInput, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::MetadataAction_Tree_LookupInput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MetadataAction_Tree_LookupInput, path_),
  PROTOBUF_FIELD_OFFSET(::MetadataAction_Tree_LookupInput, permissions_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::MetadataAction_Tree_LookupOutput, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::MetadataAction_Tree_LookupOutput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MetadataAction_Tree_LookupOutput, success_),
  PROTOBUF_FIELD_OFFSET(::MetadataAction_Tree_LookupOutput, errors_),
  PROTOBUF_FIELD_OFFSET(::MetadataAction_Tree_LookupOutput, entry_),
  1,
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::MetadataAction_ResizeInput, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::MetadataAction_ResizeInput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MetadataAction_ResizeInput, path_),
  PROTOBUF_FIELD_OFFSET(::MetadataAction_ResizeInput, permissions_),
  PROTOBUF_FIELD_OFFSET(::MetadataAction_ResizeInput, size_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::MetadataAction_ResizeOutput, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::MetadataAction_ResizeOutput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MetadataAction_ResizeOutput, success_),
  PROTOBUF_FIELD_OFFSET(::MetadataAction_ResizeOutput, errors_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::MetadataAction_WriteInput, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::MetadataAction_WriteInput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MetadataAction_WriteInput, path_),
  PROTOBUF_FIELD_OFFSET(::MetadataAction_WriteInput, permissions_),
  PROTOBUF_FIELD_OFFSET(::MetadataAction_WriteInput, offset_),
  PROTOBUF_FIELD_OFFSET(::MetadataAction_WriteInput, data_),
  0,
  1,
  2,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::MetadataAction_WriteOutput, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::MetadataAction_WriteOutput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MetadataAction_WriteOutput, success_),
  PROTOBUF_FIELD_OFFSET(::MetadataAction_WriteOutput, errors_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::MetadataAction_AppendInput, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::MetadataAction_AppendInput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MetadataAction_AppendInput, path_),
  PROTOBUF_FIELD_OFFSET(::MetadataAction_AppendInput, permissions_),
  PROTOBUF_FIELD_OFFSET(::MetadataAction_AppendInput, data_),
  0,
  1,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::MetadataAction_AppendOutput, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::MetadataAction_AppendOutput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MetadataAction_AppendOutput, success_),
  PROTOBUF_FIELD_OFFSET(::MetadataAction_AppendOutput, errors_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::MetadataAction_ChangePermissionsInput, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::MetadataAction_ChangePermissionsInput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MetadataAction_ChangePermissionsInput, path_),
  PROTOBUF_FIELD_OFFSET(::MetadataAction_ChangePermissionsInput, permissions_),
  PROTOBUF_FIELD_OFFSET(::MetadataAction_ChangePermissionsInput, new_permissions_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::MetadataAction_ChangePermissionsOutput, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::MetadataAction_ChangePermissionsOutput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MetadataAction_ChangePermissionsOutput, success_),
  PROTOBUF_FIELD_OFFSET(::MetadataAction_ChangePermissionsOutput, errors_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::MetadataAction, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::MetadataAction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::Permissions)},
  { 11, 19, sizeof(::FilePart)},
  { 22, 32, sizeof(::MetadataEntry)},
  { 37, 45, sizeof(::MetadataAction_CreateFileInput)},
  { 48, 55, sizeof(::MetadataAction_CreateFileOutput)},
  { 57, 65, sizeof(::MetadataAction_EraseInput)},
  { 68, 75, sizeof(::MetadataAction_EraseOutput)},
  { 77, 85, sizeof(::MetadataAction_CopyInput)},
  { 88, 95, sizeof(::MetadataAction_CopyOutput)},
  { 97, 105, sizeof(::MetadataAction_RenameInput)},
  { 108, 115, sizeof(::MetadataAction_RenameOutput)},
  { 117, 124, sizeof(::MetadataAction_LookupInput)},
  { 126, 135, sizeof(::MetadataAction_LookupOutput)},
  { 139, 146, sizeof(::MetadataAction_Tree_LookupInput)},
  { 148, 156, sizeof(::MetadataAction_Tree_LookupOutput)},
  { 159, 167, sizeof(::MetadataAction_ResizeInput)},
  { 170, 177, sizeof(::MetadataAction_ResizeOutput)},
  { 179, 188, sizeof(::MetadataAction_WriteInput)},
  { 192, 199, sizeof(::MetadataAction_WriteOutput)},
  { 201, 209, sizeof(::MetadataAction_AppendInput)},
  { 212, 219, sizeof(::MetadataAction_AppendOutput)},
  { 221, 229, sizeof(::MetadataAction_ChangePermissionsInput)},
  { 232, 239, sizeof(::MetadataAction_ChangePermissionsOutput)},
  { 241, 246, sizeof(::MetadataAction)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Permissions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_FilePart_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MetadataEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MetadataAction_CreateFileInput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MetadataAction_CreateFileOutput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MetadataAction_EraseInput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MetadataAction_EraseOutput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MetadataAction_CopyInput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MetadataAction_CopyOutput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MetadataAction_RenameInput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MetadataAction_RenameOutput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MetadataAction_LookupInput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MetadataAction_LookupOutput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MetadataAction_Tree_LookupInput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MetadataAction_Tree_LookupOutput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MetadataAction_ResizeInput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MetadataAction_ResizeOutput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MetadataAction_WriteInput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MetadataAction_WriteOutput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MetadataAction_AppendInput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MetadataAction_AppendOutput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MetadataAction_ChangePermissionsInput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MetadataAction_ChangePermissionsOutput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MetadataAction_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_metadata_2eproto = {
  {}, AddDescriptors_metadata_2eproto, "metadata.proto", schemas,
  file_default_instances, TableStruct_metadata_2eproto::offsets,
  file_level_metadata_metadata_2eproto, 24, file_level_enum_descriptors_metadata_2eproto, file_level_service_descriptors_metadata_2eproto,
};

const char descriptor_table_protodef_metadata_2eproto[] =
  "\n\016metadata.proto\"D\n\013Permissions\022\020\n\005owner"
  "\030\002 \001(\004:\0010\022\020\n\005group\030\003 \001(\004:\0010\022\021\n\004mode\030\004 \001("
  "\t:\003777\"H\n\010FilePart\022\016\n\006length\030\001 \002(\004\022\023\n\010bl"
  "ock_id\030\002 \001(\004:\0010\022\027\n\014block_offset\030\003 \001(\004:\0010"
  "\"\235\001\n\rMetadataEntry\022\025\n\006locked\030\001 \001(\010:\005fals"
  "e\022!\n\013permissions\030\002 \001(\0132\014.Permissions\022\035\n\004"
  "type\030\005 \002(\0162\t.FileType:\004DATA\022\035\n\nfile_part"
  "s\030\006 \003(\0132\t.FilePart\022\024\n\014dir_contents\030\007 \003(\t"
  "\"\362\017\n\016MetadataAction\032a\n\017CreateFileInput\022\014"
  "\n\004path\030\001 \002(\t\022!\n\013permissions\030\002 \001(\0132\014.Perm"
  "issions\022\035\n\004type\030\003 \002(\0162\t.FileType:\004DATA\032P"
  "\n\020CreateFileOutput\022\025\n\007success\030\001 \001(\010:\004tru"
  "e\022%\n\006errors\030\002 \003(\0162\025.MetadataAction.Error"
  "\032\\\n\nEraseInput\022\014\n\004path\030\001 \002(\t\022!\n\013permissi"
  "ons\030\002 \001(\0132\014.Permissions\022\035\n\004type\030\003 \002(\0162\t."
  "FileType:\004DATA\032K\n\013EraseOutput\022\025\n\007success"
  "\030\001 \001(\010:\004true\022%\n\006errors\030\002 \003(\0162\025.MetadataA"
  "ction.Error\032R\n\tCopyInput\022\021\n\tfrom_path\030\001 "
  "\002(\t\022\017\n\007to_path\030\002 \002(\t\022!\n\013permissions\030\003 \001("
  "\0132\014.Permissions\032J\n\nCopyOutput\022\025\n\007success"
  "\030\001 \001(\010:\004true\022%\n\006errors\030\002 \003(\0162\025.MetadataA"
  "ction.Error\032T\n\013RenameInput\022\021\n\tfrom_path\030"
  "\001 \002(\t\022\017\n\007to_path\030\002 \002(\t\022!\n\013permissions\030\003 "
  "\001(\0132\014.Permissions\032L\n\014RenameOutput\022\025\n\007suc"
  "cess\030\001 \001(\010:\004true\022%\n\006errors\030\002 \003(\0162\025.Metad"
  "ataAction.Error\032>\n\013LookupInput\022\014\n\004path\030\001"
  " \002(\t\022!\n\013permissions\030\002 \001(\0132\014.Permissions\032"
  "y\n\014LookupOutput\022\025\n\007success\030\001 \001(\010:\004true\022%"
  "\n\006errors\030\002 \003(\0162\025.MetadataAction.Error\022\035\n"
  "\005entry\030\003 \001(\0132\016.MetadataEntry\022\014\n\004path\030\004 \001"
  "(\t\032C\n\020Tree_LookupInput\022\014\n\004path\030\001 \002(\t\022!\n\013"
  "permissions\030\002 \001(\0132\014.Permissions\032p\n\021Tree_"
  "LookupOutput\022\025\n\007success\030\001 \001(\010:\004true\022%\n\006e"
  "rrors\030\002 \003(\0162\025.MetadataAction.Error\022\035\n\005en"
  "try\030\003 \001(\0132\016.MetadataEntry\032L\n\013ResizeInput"
  "\022\014\n\004path\030\001 \002(\t\022!\n\013permissions\030\002 \001(\0132\014.Pe"
  "rmissions\022\014\n\004size\030\003 \002(\004\032L\n\014ResizeOutput\022"
  "\025\n\007success\030\001 \001(\010:\004true\022%\n\006errors\030\002 \003(\0162\025"
  ".MetadataAction.Error\032f\n\nWriteInput\022\014\n\004p"
  "ath\030\001 \002(\t\022!\n\013permissions\030\002 \001(\0132\014.Permiss"
  "ions\022\016\n\006offset\030\003 \002(\004\022\027\n\004data\030\004 \003(\0132\t.Fil"
  "ePart\032K\n\013WriteOutput\022\025\n\007success\030\001 \001(\010:\004t"
  "rue\022%\n\006errors\030\002 \003(\0162\025.MetadataAction.Err"
  "or\032W\n\013AppendInput\022\014\n\004path\030\001 \002(\t\022!\n\013permi"
  "ssions\030\002 \001(\0132\014.Permissions\022\027\n\004data\030\003 \003(\013"
  "2\t.FilePart\032L\n\014AppendOutput\022\025\n\007success\030\001"
  " \001(\010:\004true\022%\n\006errors\030\002 \003(\0162\025.MetadataAct"
  "ion.Error\032p\n\026ChangePermissionsInput\022\014\n\004p"
  "ath\030\001 \002(\t\022!\n\013permissions\030\002 \001(\0132\014.Permiss"
  "ions\022%\n\017new_permissions\030\003 \002(\0132\014.Permissi"
  "ons\032W\n\027ChangePermissionsOutput\022\025\n\007succes"
  "s\030\001 \001(\010:\004true\022%\n\006errors\030\002 \003(\0162\025.Metadata"
  "Action.Error\"\220\001\n\004Type\022\017\n\013CREATE_FILE\020\000\022\t"
  "\n\005ERASE\020\001\022\010\n\004COPY\020\002\022\n\n\006RENAME\020\003\022\n\n\006LOOKU"
  "P\020\004\022\n\n\006RESIZE\020\005\022\t\n\005WRITE\020\006\022\n\n\006APPEND\020\007\022\026"
  "\n\022CHANGE_PERMISSIONS\020\010\022\017\n\013TREE_LOOKUP\020\t\""
  "t\n\005Error\022\024\n\020FileDoesNotExist\020\000\022\025\n\021FileAl"
  "readyExists\020\001\022\021\n\rWrongFileType\020\002\022\025\n\021Dire"
  "ctoryNotEmpty\020\003\022\024\n\020PermissionDenied\020\004*\035\n"
  "\010FileType\022\010\n\004DATA\020\000\022\007\n\003DIR\020\001"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_metadata_2eproto = {
  false, InitDefaults_metadata_2eproto, 
  descriptor_table_protodef_metadata_2eproto,
  "metadata.proto", &assign_descriptors_table_metadata_2eproto, 2388,
};

void AddDescriptors_metadata_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_metadata_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_metadata_2eproto = []() { AddDescriptors_metadata_2eproto(); return true; }();
const ::google::protobuf::EnumDescriptor* MetadataAction_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_metadata_2eproto);
  return file_level_enum_descriptors_metadata_2eproto[0];
}
bool MetadataAction_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MetadataAction_Type MetadataAction::CREATE_FILE;
const MetadataAction_Type MetadataAction::ERASE;
const MetadataAction_Type MetadataAction::COPY;
const MetadataAction_Type MetadataAction::RENAME;
const MetadataAction_Type MetadataAction::LOOKUP;
const MetadataAction_Type MetadataAction::RESIZE;
const MetadataAction_Type MetadataAction::WRITE;
const MetadataAction_Type MetadataAction::APPEND;
const MetadataAction_Type MetadataAction::CHANGE_PERMISSIONS;
const MetadataAction_Type MetadataAction::TREE_LOOKUP;
const MetadataAction_Type MetadataAction::Type_MIN;
const MetadataAction_Type MetadataAction::Type_MAX;
const int MetadataAction::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* MetadataAction_Error_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_metadata_2eproto);
  return file_level_enum_descriptors_metadata_2eproto[1];
}
bool MetadataAction_Error_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MetadataAction_Error MetadataAction::FileDoesNotExist;
const MetadataAction_Error MetadataAction::FileAlreadyExists;
const MetadataAction_Error MetadataAction::WrongFileType;
const MetadataAction_Error MetadataAction::DirectoryNotEmpty;
const MetadataAction_Error MetadataAction::PermissionDenied;
const MetadataAction_Error MetadataAction::Error_MIN;
const MetadataAction_Error MetadataAction::Error_MAX;
const int MetadataAction::Error_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* FileType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_metadata_2eproto);
  return file_level_enum_descriptors_metadata_2eproto[2];
}
bool FileType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Permissions::InitAsDefaultInstance() {
}
class Permissions::HasBitSetters {
 public:
  static void set_has_owner(Permissions* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_group(Permissions* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_mode(Permissions* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

::google::protobuf::internal::ExplicitlyConstructed<::std::string> Permissions::_i_give_permission_to_break_this_code_default_mode_;
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Permissions::kOwnerFieldNumber;
const int Permissions::kGroupFieldNumber;
const int Permissions::kModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Permissions::Permissions()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Permissions)
}
Permissions::Permissions(const Permissions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mode_.UnsafeSetDefault(&::Permissions::_i_give_permission_to_break_this_code_default_mode_.get());
  if (from.has_mode()) {
    mode_.AssignWithDefault(&::Permissions::_i_give_permission_to_break_this_code_default_mode_.get(), from.mode_);
  }
  ::memcpy(&owner_, &from.owner_,
    static_cast<size_t>(reinterpret_cast<char*>(&group_) -
    reinterpret_cast<char*>(&owner_)) + sizeof(group_));
  // @@protoc_insertion_point(copy_constructor:Permissions)
}

void Permissions::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Permissions_metadata_2eproto.base);
  mode_.UnsafeSetDefault(&::Permissions::_i_give_permission_to_break_this_code_default_mode_.get());
  ::memset(&owner_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&group_) -
      reinterpret_cast<char*>(&owner_)) + sizeof(group_));
}

Permissions::~Permissions() {
  // @@protoc_insertion_point(destructor:Permissions)
  SharedDtor();
}

void Permissions::SharedDtor() {
  mode_.DestroyNoArena(&::Permissions::_i_give_permission_to_break_this_code_default_mode_.get());
}

void Permissions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Permissions& Permissions::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Permissions_metadata_2eproto.base);
  return *internal_default_instance();
}


void Permissions::Clear() {
// @@protoc_insertion_point(message_clear_start:Permissions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    mode_.UnsafeMutablePointer()->assign(*&::Permissions::_i_give_permission_to_break_this_code_default_mode_.get());
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&owner_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&group_) -
        reinterpret_cast<char*>(&owner_)) + sizeof(group_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Permissions::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Permissions*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint64 owner = 2 [default = 0];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_owner(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 group = 3 [default = 0];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_group(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string mode = 4 [default = "777"];
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("Permissions.mode");
        object = msg->mutable_mode();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Permissions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Permissions)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 owner = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_owner(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &owner_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 group = 3 [default = 0];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_group(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &group_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string mode = 4 [default = "777"];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mode().data(), static_cast<int>(this->mode().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Permissions.mode");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Permissions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Permissions)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Permissions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Permissions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 owner = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->owner(), output);
  }

  // optional uint64 group = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->group(), output);
  }

  // optional string mode = 4 [default = "777"];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mode().data(), static_cast<int>(this->mode().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Permissions.mode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->mode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Permissions)
}

::google::protobuf::uint8* Permissions::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Permissions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 owner = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->owner(), target);
  }

  // optional uint64 group = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->group(), target);
  }

  // optional string mode = 4 [default = "777"];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mode().data(), static_cast<int>(this->mode().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Permissions.mode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->mode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Permissions)
  return target;
}

size_t Permissions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Permissions)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string mode = 4 [default = "777"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mode());
    }

    // optional uint64 owner = 2 [default = 0];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->owner());
    }

    // optional uint64 group = 3 [default = 0];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->group());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Permissions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Permissions)
  GOOGLE_DCHECK_NE(&from, this);
  const Permissions* source =
      ::google::protobuf::DynamicCastToGenerated<Permissions>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Permissions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Permissions)
    MergeFrom(*source);
  }
}

void Permissions::MergeFrom(const Permissions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Permissions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      mode_.AssignWithDefault(&::Permissions::_i_give_permission_to_break_this_code_default_mode_.get(), from.mode_);
    }
    if (cached_has_bits & 0x00000002u) {
      owner_ = from.owner_;
    }
    if (cached_has_bits & 0x00000004u) {
      group_ = from.group_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Permissions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Permissions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Permissions::CopyFrom(const Permissions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Permissions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Permissions::IsInitialized() const {
  return true;
}

void Permissions::Swap(Permissions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Permissions::InternalSwap(Permissions* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  mode_.Swap(&other->mode_, &::Permissions::_i_give_permission_to_break_this_code_default_mode_.get(),
    GetArenaNoVirtual());
  swap(owner_, other->owner_);
  swap(group_, other->group_);
}

::google::protobuf::Metadata Permissions::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_metadata_2eproto);
  return ::file_level_metadata_metadata_2eproto[kIndexInFileMessages];
}


// ===================================================================

void FilePart::InitAsDefaultInstance() {
}
class FilePart::HasBitSetters {
 public:
  static void set_has_length(FilePart* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_block_id(FilePart* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_block_offset(FilePart* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FilePart::kLengthFieldNumber;
const int FilePart::kBlockIdFieldNumber;
const int FilePart::kBlockOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FilePart::FilePart()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FilePart)
}
FilePart::FilePart(const FilePart& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&length_, &from.length_,
    static_cast<size_t>(reinterpret_cast<char*>(&block_offset_) -
    reinterpret_cast<char*>(&length_)) + sizeof(block_offset_));
  // @@protoc_insertion_point(copy_constructor:FilePart)
}

void FilePart::SharedCtor() {
  ::memset(&length_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&block_offset_) -
      reinterpret_cast<char*>(&length_)) + sizeof(block_offset_));
}

FilePart::~FilePart() {
  // @@protoc_insertion_point(destructor:FilePart)
  SharedDtor();
}

void FilePart::SharedDtor() {
}

void FilePart::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FilePart& FilePart::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_FilePart_metadata_2eproto.base);
  return *internal_default_instance();
}


void FilePart::Clear() {
// @@protoc_insertion_point(message_clear_start:FilePart)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&length_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&block_offset_) -
        reinterpret_cast<char*>(&length_)) + sizeof(block_offset_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* FilePart::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<FilePart*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint64 length = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_length(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 block_id = 2 [default = 0];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_block_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 block_offset = 3 [default = 0];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_block_offset(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool FilePart::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FilePart)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 length = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_length(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 block_id = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_block_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &block_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 block_offset = 3 [default = 0];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_block_offset(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &block_offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FilePart)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FilePart)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void FilePart::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FilePart)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 length = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->length(), output);
  }

  // optional uint64 block_id = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->block_id(), output);
  }

  // optional uint64 block_offset = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->block_offset(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FilePart)
}

::google::protobuf::uint8* FilePart::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FilePart)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 length = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->length(), target);
  }

  // optional uint64 block_id = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->block_id(), target);
  }

  // optional uint64 block_offset = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->block_offset(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FilePart)
  return target;
}

size_t FilePart::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FilePart)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint64 length = 1;
  if (has_length()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->length());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000006u) {
    // optional uint64 block_id = 2 [default = 0];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->block_id());
    }

    // optional uint64 block_offset = 3 [default = 0];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->block_offset());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FilePart::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FilePart)
  GOOGLE_DCHECK_NE(&from, this);
  const FilePart* source =
      ::google::protobuf::DynamicCastToGenerated<FilePart>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FilePart)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FilePart)
    MergeFrom(*source);
  }
}

void FilePart::MergeFrom(const FilePart& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FilePart)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      length_ = from.length_;
    }
    if (cached_has_bits & 0x00000002u) {
      block_id_ = from.block_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      block_offset_ = from.block_offset_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void FilePart::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FilePart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FilePart::CopyFrom(const FilePart& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FilePart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FilePart::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void FilePart::Swap(FilePart* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FilePart::InternalSwap(FilePart* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(length_, other->length_);
  swap(block_id_, other->block_id_);
  swap(block_offset_, other->block_offset_);
}

::google::protobuf::Metadata FilePart::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_metadata_2eproto);
  return ::file_level_metadata_metadata_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MetadataEntry::InitAsDefaultInstance() {
  ::_MetadataEntry_default_instance_._instance.get_mutable()->permissions_ = const_cast< ::Permissions*>(
      ::Permissions::internal_default_instance());
}
class MetadataEntry::HasBitSetters {
 public:
  static void set_has_locked(MetadataEntry* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static const ::Permissions& permissions(const MetadataEntry* msg);
  static void set_has_permissions(MetadataEntry* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_type(MetadataEntry* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

const ::Permissions&
MetadataEntry::HasBitSetters::permissions(const MetadataEntry* msg) {
  return *msg->permissions_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MetadataEntry::kLockedFieldNumber;
const int MetadataEntry::kPermissionsFieldNumber;
const int MetadataEntry::kTypeFieldNumber;
const int MetadataEntry::kFilePartsFieldNumber;
const int MetadataEntry::kDirContentsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetadataEntry::MetadataEntry()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MetadataEntry)
}
MetadataEntry::MetadataEntry(const MetadataEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      file_parts_(from.file_parts_),
      dir_contents_(from.dir_contents_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_permissions()) {
    permissions_ = new ::Permissions(*from.permissions_);
  } else {
    permissions_ = nullptr;
  }
  ::memcpy(&locked_, &from.locked_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&locked_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:MetadataEntry)
}

void MetadataEntry::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MetadataEntry_metadata_2eproto.base);
  ::memset(&permissions_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&permissions_)) + sizeof(type_));
}

MetadataEntry::~MetadataEntry() {
  // @@protoc_insertion_point(destructor:MetadataEntry)
  SharedDtor();
}

void MetadataEntry::SharedDtor() {
  if (this != internal_default_instance()) delete permissions_;
}

void MetadataEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MetadataEntry& MetadataEntry::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MetadataEntry_metadata_2eproto.base);
  return *internal_default_instance();
}


void MetadataEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:MetadataEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  file_parts_.Clear();
  dir_contents_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(permissions_ != nullptr);
    permissions_->Clear();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&locked_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&type_) -
        reinterpret_cast<char*>(&locked_)) + sizeof(type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MetadataEntry::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MetadataEntry*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bool locked = 1 [default = false];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_locked(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional .Permissions permissions = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::Permissions::_InternalParse;
        object = msg->mutable_permissions();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // required .FileType type = 5 [default = DATA];
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        if (!::FileType_IsValid(val)) {
          ::google::protobuf::internal::WriteVarint(5, val, msg->mutable_unknown_fields());
          break;
        }
        msg->set_type(static_cast<::FileType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .FilePart file_parts = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::FilePart::_InternalParse;
          object = msg->add_file_parts();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 50 && (ptr += 1));
        break;
      }
      // repeated string dir_contents = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("MetadataEntry.dir_contents");
          object = msg->add_dir_contents();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 58 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MetadataEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MetadataEntry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool locked = 1 [default = false];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_locked(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &locked_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .Permissions permissions = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_permissions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .FileType type = 5 [default = DATA];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::FileType_IsValid(value)) {
            set_type(static_cast< ::FileType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                5, static_cast<::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .FilePart file_parts = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_file_parts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string dir_contents = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_dir_contents()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->dir_contents(this->dir_contents_size() - 1).data(),
            static_cast<int>(this->dir_contents(this->dir_contents_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MetadataEntry.dir_contents");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MetadataEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MetadataEntry)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MetadataEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MetadataEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool locked = 1 [default = false];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->locked(), output);
  }

  // optional .Permissions permissions = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::permissions(this), output);
  }

  // required .FileType type = 5 [default = DATA];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->type(), output);
  }

  // repeated .FilePart file_parts = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->file_parts_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->file_parts(static_cast<int>(i)),
      output);
  }

  // repeated string dir_contents = 7;
  for (int i = 0, n = this->dir_contents_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dir_contents(i).data(), static_cast<int>(this->dir_contents(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MetadataEntry.dir_contents");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->dir_contents(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MetadataEntry)
}

::google::protobuf::uint8* MetadataEntry::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MetadataEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool locked = 1 [default = false];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->locked(), target);
  }

  // optional .Permissions permissions = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::permissions(this), target);
  }

  // required .FileType type = 5 [default = DATA];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->type(), target);
  }

  // repeated .FilePart file_parts = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->file_parts_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->file_parts(static_cast<int>(i)), target);
  }

  // repeated string dir_contents = 7;
  for (int i = 0, n = this->dir_contents_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dir_contents(i).data(), static_cast<int>(this->dir_contents(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MetadataEntry.dir_contents");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(7, this->dir_contents(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MetadataEntry)
  return target;
}

size_t MetadataEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MetadataEntry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .FileType type = 5 [default = DATA];
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .FilePart file_parts = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->file_parts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->file_parts(static_cast<int>(i)));
    }
  }

  // repeated string dir_contents = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->dir_contents_size());
  for (int i = 0, n = this->dir_contents_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->dir_contents(i));
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .Permissions permissions = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *permissions_);
    }

    // optional bool locked = 1 [default = false];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MetadataEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MetadataEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const MetadataEntry* source =
      ::google::protobuf::DynamicCastToGenerated<MetadataEntry>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MetadataEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MetadataEntry)
    MergeFrom(*source);
  }
}

void MetadataEntry::MergeFrom(const MetadataEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MetadataEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  file_parts_.MergeFrom(from.file_parts_);
  dir_contents_.MergeFrom(from.dir_contents_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_permissions()->::Permissions::MergeFrom(from.permissions());
    }
    if (cached_has_bits & 0x00000002u) {
      locked_ = from.locked_;
    }
    if (cached_has_bits & 0x00000004u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MetadataEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MetadataEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetadataEntry::CopyFrom(const MetadataEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MetadataEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetadataEntry::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->file_parts())) return false;
  return true;
}

void MetadataEntry::Swap(MetadataEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetadataEntry::InternalSwap(MetadataEntry* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&file_parts_)->InternalSwap(CastToBase(&other->file_parts_));
  dir_contents_.InternalSwap(CastToBase(&other->dir_contents_));
  swap(permissions_, other->permissions_);
  swap(locked_, other->locked_);
  swap(type_, other->type_);
}

::google::protobuf::Metadata MetadataEntry::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_metadata_2eproto);
  return ::file_level_metadata_metadata_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MetadataAction_CreateFileInput::InitAsDefaultInstance() {
  ::_MetadataAction_CreateFileInput_default_instance_._instance.get_mutable()->permissions_ = const_cast< ::Permissions*>(
      ::Permissions::internal_default_instance());
}
class MetadataAction_CreateFileInput::HasBitSetters {
 public:
  static void set_has_path(MetadataAction_CreateFileInput* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static const ::Permissions& permissions(const MetadataAction_CreateFileInput* msg);
  static void set_has_permissions(MetadataAction_CreateFileInput* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_type(MetadataAction_CreateFileInput* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

const ::Permissions&
MetadataAction_CreateFileInput::HasBitSetters::permissions(const MetadataAction_CreateFileInput* msg) {
  return *msg->permissions_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MetadataAction_CreateFileInput::kPathFieldNumber;
const int MetadataAction_CreateFileInput::kPermissionsFieldNumber;
const int MetadataAction_CreateFileInput::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetadataAction_CreateFileInput::MetadataAction_CreateFileInput()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MetadataAction.CreateFileInput)
}
MetadataAction_CreateFileInput::MetadataAction_CreateFileInput(const MetadataAction_CreateFileInput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_path()) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.has_permissions()) {
    permissions_ = new ::Permissions(*from.permissions_);
  } else {
    permissions_ = nullptr;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:MetadataAction.CreateFileInput)
}

void MetadataAction_CreateFileInput::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MetadataAction_CreateFileInput_metadata_2eproto.base);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&permissions_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&permissions_)) + sizeof(type_));
}

MetadataAction_CreateFileInput::~MetadataAction_CreateFileInput() {
  // @@protoc_insertion_point(destructor:MetadataAction.CreateFileInput)
  SharedDtor();
}

void MetadataAction_CreateFileInput::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete permissions_;
}

void MetadataAction_CreateFileInput::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MetadataAction_CreateFileInput& MetadataAction_CreateFileInput::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MetadataAction_CreateFileInput_metadata_2eproto.base);
  return *internal_default_instance();
}


void MetadataAction_CreateFileInput::Clear() {
// @@protoc_insertion_point(message_clear_start:MetadataAction.CreateFileInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      path_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(permissions_ != nullptr);
      permissions_->Clear();
    }
  }
  type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MetadataAction_CreateFileInput::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MetadataAction_CreateFileInput*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required string path = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("MetadataAction.CreateFileInput.path");
        object = msg->mutable_path();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional .Permissions permissions = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::Permissions::_InternalParse;
        object = msg->mutable_permissions();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // required .FileType type = 3 [default = DATA];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        if (!::FileType_IsValid(val)) {
          ::google::protobuf::internal::WriteVarint(3, val, msg->mutable_unknown_fields());
          break;
        }
        msg->set_type(static_cast<::FileType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MetadataAction_CreateFileInput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MetadataAction.CreateFileInput)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MetadataAction.CreateFileInput.path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .Permissions permissions = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_permissions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .FileType type = 3 [default = DATA];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::FileType_IsValid(value)) {
            set_type(static_cast< ::FileType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast<::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MetadataAction.CreateFileInput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MetadataAction.CreateFileInput)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MetadataAction_CreateFileInput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MetadataAction.CreateFileInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MetadataAction.CreateFileInput.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // optional .Permissions permissions = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::permissions(this), output);
  }

  // required .FileType type = 3 [default = DATA];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MetadataAction.CreateFileInput)
}

::google::protobuf::uint8* MetadataAction_CreateFileInput::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MetadataAction.CreateFileInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MetadataAction.CreateFileInput.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // optional .Permissions permissions = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::permissions(this), target);
  }

  // required .FileType type = 3 [default = DATA];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MetadataAction.CreateFileInput)
  return target;
}

size_t MetadataAction_CreateFileInput::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MetadataAction.CreateFileInput)
  size_t total_size = 0;

  if (has_path()) {
    // required string path = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  if (has_type()) {
    // required .FileType type = 3 [default = DATA];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  return total_size;
}
size_t MetadataAction_CreateFileInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MetadataAction.CreateFileInput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000005) ^ 0x00000005) == 0) {  // All required fields are present.
    // required string path = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());

    // required .FileType type = 3 [default = DATA];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .Permissions permissions = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *permissions_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MetadataAction_CreateFileInput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MetadataAction.CreateFileInput)
  GOOGLE_DCHECK_NE(&from, this);
  const MetadataAction_CreateFileInput* source =
      ::google::protobuf::DynamicCastToGenerated<MetadataAction_CreateFileInput>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MetadataAction.CreateFileInput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MetadataAction.CreateFileInput)
    MergeFrom(*source);
  }
}

void MetadataAction_CreateFileInput::MergeFrom(const MetadataAction_CreateFileInput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MetadataAction.CreateFileInput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_permissions()->::Permissions::MergeFrom(from.permissions());
    }
    if (cached_has_bits & 0x00000004u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MetadataAction_CreateFileInput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MetadataAction.CreateFileInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetadataAction_CreateFileInput::CopyFrom(const MetadataAction_CreateFileInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MetadataAction.CreateFileInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetadataAction_CreateFileInput::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;
  return true;
}

void MetadataAction_CreateFileInput::Swap(MetadataAction_CreateFileInput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetadataAction_CreateFileInput::InternalSwap(MetadataAction_CreateFileInput* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(permissions_, other->permissions_);
  swap(type_, other->type_);
}

::google::protobuf::Metadata MetadataAction_CreateFileInput::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_metadata_2eproto);
  return ::file_level_metadata_metadata_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MetadataAction_CreateFileOutput::InitAsDefaultInstance() {
}
class MetadataAction_CreateFileOutput::HasBitSetters {
 public:
  static void set_has_success(MetadataAction_CreateFileOutput* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MetadataAction_CreateFileOutput::kSuccessFieldNumber;
const int MetadataAction_CreateFileOutput::kErrorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetadataAction_CreateFileOutput::MetadataAction_CreateFileOutput()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MetadataAction.CreateFileOutput)
}
MetadataAction_CreateFileOutput::MetadataAction_CreateFileOutput(const MetadataAction_CreateFileOutput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      errors_(from.errors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:MetadataAction.CreateFileOutput)
}

void MetadataAction_CreateFileOutput::SharedCtor() {
  success_ = true;
}

MetadataAction_CreateFileOutput::~MetadataAction_CreateFileOutput() {
  // @@protoc_insertion_point(destructor:MetadataAction.CreateFileOutput)
  SharedDtor();
}

void MetadataAction_CreateFileOutput::SharedDtor() {
}

void MetadataAction_CreateFileOutput::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MetadataAction_CreateFileOutput& MetadataAction_CreateFileOutput::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MetadataAction_CreateFileOutput_metadata_2eproto.base);
  return *internal_default_instance();
}


void MetadataAction_CreateFileOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:MetadataAction.CreateFileOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errors_.Clear();
  success_ = true;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MetadataAction_CreateFileOutput::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MetadataAction_CreateFileOutput*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bool success = 1 [default = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_success(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .MetadataAction.Error errors = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) == 16) {
          do {
            ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
            if (!::MetadataAction_Error_IsValid(val)) {
              ::google::protobuf::internal::WriteVarint(2, val, msg->mutable_unknown_fields());
              break;
            }
            msg->add_errors(static_cast<::MetadataAction_Error>(val));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 16 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetEnumValidator(::MetadataAction_Error_IsValid, msg->mutable_unknown_fields(), 2);
        parser_till_end = ::google::protobuf::internal::PackedValidEnumParser;
        object = msg->mutable_errors();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MetadataAction_CreateFileOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MetadataAction.CreateFileOutput)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool success = 1 [default = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_success(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .MetadataAction.Error errors = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MetadataAction_Error_IsValid(value)) {
            add_errors(static_cast< ::MetadataAction_Error >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast<::google::protobuf::uint64>(value));
          }
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 2,
                 ::MetadataAction_Error_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_errors())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MetadataAction.CreateFileOutput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MetadataAction.CreateFileOutput)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MetadataAction_CreateFileOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MetadataAction.CreateFileOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1 [default = true];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // repeated .MetadataAction.Error errors = 2;
  for (int i = 0, n = this->errors_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->errors(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MetadataAction.CreateFileOutput)
}

::google::protobuf::uint8* MetadataAction_CreateFileOutput::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MetadataAction.CreateFileOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1 [default = true];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // repeated .MetadataAction.Error errors = 2;
  target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
    2, this->errors_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MetadataAction.CreateFileOutput)
  return target;
}

size_t MetadataAction_CreateFileOutput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MetadataAction.CreateFileOutput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .MetadataAction.Error errors = 2;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->errors_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->errors(static_cast<int>(i)));
    }
    total_size += (1UL * count) + data_size;
  }

  // optional bool success = 1 [default = true];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MetadataAction_CreateFileOutput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MetadataAction.CreateFileOutput)
  GOOGLE_DCHECK_NE(&from, this);
  const MetadataAction_CreateFileOutput* source =
      ::google::protobuf::DynamicCastToGenerated<MetadataAction_CreateFileOutput>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MetadataAction.CreateFileOutput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MetadataAction.CreateFileOutput)
    MergeFrom(*source);
  }
}

void MetadataAction_CreateFileOutput::MergeFrom(const MetadataAction_CreateFileOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MetadataAction.CreateFileOutput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  errors_.MergeFrom(from.errors_);
  if (from.has_success()) {
    set_success(from.success());
  }
}

void MetadataAction_CreateFileOutput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MetadataAction.CreateFileOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetadataAction_CreateFileOutput::CopyFrom(const MetadataAction_CreateFileOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MetadataAction.CreateFileOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetadataAction_CreateFileOutput::IsInitialized() const {
  return true;
}

void MetadataAction_CreateFileOutput::Swap(MetadataAction_CreateFileOutput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetadataAction_CreateFileOutput::InternalSwap(MetadataAction_CreateFileOutput* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  errors_.InternalSwap(&other->errors_);
  swap(success_, other->success_);
}

::google::protobuf::Metadata MetadataAction_CreateFileOutput::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_metadata_2eproto);
  return ::file_level_metadata_metadata_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MetadataAction_EraseInput::InitAsDefaultInstance() {
  ::_MetadataAction_EraseInput_default_instance_._instance.get_mutable()->permissions_ = const_cast< ::Permissions*>(
      ::Permissions::internal_default_instance());
}
class MetadataAction_EraseInput::HasBitSetters {
 public:
  static void set_has_path(MetadataAction_EraseInput* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static const ::Permissions& permissions(const MetadataAction_EraseInput* msg);
  static void set_has_permissions(MetadataAction_EraseInput* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_type(MetadataAction_EraseInput* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

const ::Permissions&
MetadataAction_EraseInput::HasBitSetters::permissions(const MetadataAction_EraseInput* msg) {
  return *msg->permissions_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MetadataAction_EraseInput::kPathFieldNumber;
const int MetadataAction_EraseInput::kPermissionsFieldNumber;
const int MetadataAction_EraseInput::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetadataAction_EraseInput::MetadataAction_EraseInput()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MetadataAction.EraseInput)
}
MetadataAction_EraseInput::MetadataAction_EraseInput(const MetadataAction_EraseInput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_path()) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.has_permissions()) {
    permissions_ = new ::Permissions(*from.permissions_);
  } else {
    permissions_ = nullptr;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:MetadataAction.EraseInput)
}

void MetadataAction_EraseInput::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MetadataAction_EraseInput_metadata_2eproto.base);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&permissions_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&permissions_)) + sizeof(type_));
}

MetadataAction_EraseInput::~MetadataAction_EraseInput() {
  // @@protoc_insertion_point(destructor:MetadataAction.EraseInput)
  SharedDtor();
}

void MetadataAction_EraseInput::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete permissions_;
}

void MetadataAction_EraseInput::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MetadataAction_EraseInput& MetadataAction_EraseInput::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MetadataAction_EraseInput_metadata_2eproto.base);
  return *internal_default_instance();
}


void MetadataAction_EraseInput::Clear() {
// @@protoc_insertion_point(message_clear_start:MetadataAction.EraseInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      path_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(permissions_ != nullptr);
      permissions_->Clear();
    }
  }
  type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MetadataAction_EraseInput::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MetadataAction_EraseInput*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required string path = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("MetadataAction.EraseInput.path");
        object = msg->mutable_path();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional .Permissions permissions = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::Permissions::_InternalParse;
        object = msg->mutable_permissions();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // required .FileType type = 3 [default = DATA];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        if (!::FileType_IsValid(val)) {
          ::google::protobuf::internal::WriteVarint(3, val, msg->mutable_unknown_fields());
          break;
        }
        msg->set_type(static_cast<::FileType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MetadataAction_EraseInput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MetadataAction.EraseInput)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MetadataAction.EraseInput.path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .Permissions permissions = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_permissions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .FileType type = 3 [default = DATA];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::FileType_IsValid(value)) {
            set_type(static_cast< ::FileType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast<::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MetadataAction.EraseInput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MetadataAction.EraseInput)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MetadataAction_EraseInput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MetadataAction.EraseInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MetadataAction.EraseInput.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // optional .Permissions permissions = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::permissions(this), output);
  }

  // required .FileType type = 3 [default = DATA];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MetadataAction.EraseInput)
}

::google::protobuf::uint8* MetadataAction_EraseInput::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MetadataAction.EraseInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MetadataAction.EraseInput.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // optional .Permissions permissions = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::permissions(this), target);
  }

  // required .FileType type = 3 [default = DATA];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MetadataAction.EraseInput)
  return target;
}

size_t MetadataAction_EraseInput::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MetadataAction.EraseInput)
  size_t total_size = 0;

  if (has_path()) {
    // required string path = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  if (has_type()) {
    // required .FileType type = 3 [default = DATA];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  return total_size;
}
size_t MetadataAction_EraseInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MetadataAction.EraseInput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000005) ^ 0x00000005) == 0) {  // All required fields are present.
    // required string path = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());

    // required .FileType type = 3 [default = DATA];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .Permissions permissions = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *permissions_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MetadataAction_EraseInput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MetadataAction.EraseInput)
  GOOGLE_DCHECK_NE(&from, this);
  const MetadataAction_EraseInput* source =
      ::google::protobuf::DynamicCastToGenerated<MetadataAction_EraseInput>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MetadataAction.EraseInput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MetadataAction.EraseInput)
    MergeFrom(*source);
  }
}

void MetadataAction_EraseInput::MergeFrom(const MetadataAction_EraseInput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MetadataAction.EraseInput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_permissions()->::Permissions::MergeFrom(from.permissions());
    }
    if (cached_has_bits & 0x00000004u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MetadataAction_EraseInput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MetadataAction.EraseInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetadataAction_EraseInput::CopyFrom(const MetadataAction_EraseInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MetadataAction.EraseInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetadataAction_EraseInput::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;
  return true;
}

void MetadataAction_EraseInput::Swap(MetadataAction_EraseInput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetadataAction_EraseInput::InternalSwap(MetadataAction_EraseInput* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(permissions_, other->permissions_);
  swap(type_, other->type_);
}

::google::protobuf::Metadata MetadataAction_EraseInput::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_metadata_2eproto);
  return ::file_level_metadata_metadata_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MetadataAction_EraseOutput::InitAsDefaultInstance() {
}
class MetadataAction_EraseOutput::HasBitSetters {
 public:
  static void set_has_success(MetadataAction_EraseOutput* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MetadataAction_EraseOutput::kSuccessFieldNumber;
const int MetadataAction_EraseOutput::kErrorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetadataAction_EraseOutput::MetadataAction_EraseOutput()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MetadataAction.EraseOutput)
}
MetadataAction_EraseOutput::MetadataAction_EraseOutput(const MetadataAction_EraseOutput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      errors_(from.errors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:MetadataAction.EraseOutput)
}

void MetadataAction_EraseOutput::SharedCtor() {
  success_ = true;
}

MetadataAction_EraseOutput::~MetadataAction_EraseOutput() {
  // @@protoc_insertion_point(destructor:MetadataAction.EraseOutput)
  SharedDtor();
}

void MetadataAction_EraseOutput::SharedDtor() {
}

void MetadataAction_EraseOutput::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MetadataAction_EraseOutput& MetadataAction_EraseOutput::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MetadataAction_EraseOutput_metadata_2eproto.base);
  return *internal_default_instance();
}


void MetadataAction_EraseOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:MetadataAction.EraseOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errors_.Clear();
  success_ = true;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MetadataAction_EraseOutput::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MetadataAction_EraseOutput*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bool success = 1 [default = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_success(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .MetadataAction.Error errors = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) == 16) {
          do {
            ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
            if (!::MetadataAction_Error_IsValid(val)) {
              ::google::protobuf::internal::WriteVarint(2, val, msg->mutable_unknown_fields());
              break;
            }
            msg->add_errors(static_cast<::MetadataAction_Error>(val));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 16 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetEnumValidator(::MetadataAction_Error_IsValid, msg->mutable_unknown_fields(), 2);
        parser_till_end = ::google::protobuf::internal::PackedValidEnumParser;
        object = msg->mutable_errors();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MetadataAction_EraseOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MetadataAction.EraseOutput)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool success = 1 [default = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_success(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .MetadataAction.Error errors = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MetadataAction_Error_IsValid(value)) {
            add_errors(static_cast< ::MetadataAction_Error >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast<::google::protobuf::uint64>(value));
          }
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 2,
                 ::MetadataAction_Error_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_errors())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MetadataAction.EraseOutput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MetadataAction.EraseOutput)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MetadataAction_EraseOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MetadataAction.EraseOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1 [default = true];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // repeated .MetadataAction.Error errors = 2;
  for (int i = 0, n = this->errors_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->errors(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MetadataAction.EraseOutput)
}

::google::protobuf::uint8* MetadataAction_EraseOutput::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MetadataAction.EraseOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1 [default = true];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // repeated .MetadataAction.Error errors = 2;
  target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
    2, this->errors_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MetadataAction.EraseOutput)
  return target;
}

size_t MetadataAction_EraseOutput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MetadataAction.EraseOutput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .MetadataAction.Error errors = 2;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->errors_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->errors(static_cast<int>(i)));
    }
    total_size += (1UL * count) + data_size;
  }

  // optional bool success = 1 [default = true];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MetadataAction_EraseOutput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MetadataAction.EraseOutput)
  GOOGLE_DCHECK_NE(&from, this);
  const MetadataAction_EraseOutput* source =
      ::google::protobuf::DynamicCastToGenerated<MetadataAction_EraseOutput>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MetadataAction.EraseOutput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MetadataAction.EraseOutput)
    MergeFrom(*source);
  }
}

void MetadataAction_EraseOutput::MergeFrom(const MetadataAction_EraseOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MetadataAction.EraseOutput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  errors_.MergeFrom(from.errors_);
  if (from.has_success()) {
    set_success(from.success());
  }
}

void MetadataAction_EraseOutput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MetadataAction.EraseOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetadataAction_EraseOutput::CopyFrom(const MetadataAction_EraseOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MetadataAction.EraseOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetadataAction_EraseOutput::IsInitialized() const {
  return true;
}

void MetadataAction_EraseOutput::Swap(MetadataAction_EraseOutput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetadataAction_EraseOutput::InternalSwap(MetadataAction_EraseOutput* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  errors_.InternalSwap(&other->errors_);
  swap(success_, other->success_);
}

::google::protobuf::Metadata MetadataAction_EraseOutput::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_metadata_2eproto);
  return ::file_level_metadata_metadata_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MetadataAction_CopyInput::InitAsDefaultInstance() {
  ::_MetadataAction_CopyInput_default_instance_._instance.get_mutable()->permissions_ = const_cast< ::Permissions*>(
      ::Permissions::internal_default_instance());
}
class MetadataAction_CopyInput::HasBitSetters {
 public:
  static void set_has_from_path(MetadataAction_CopyInput* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_to_path(MetadataAction_CopyInput* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static const ::Permissions& permissions(const MetadataAction_CopyInput* msg);
  static void set_has_permissions(MetadataAction_CopyInput* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

const ::Permissions&
MetadataAction_CopyInput::HasBitSetters::permissions(const MetadataAction_CopyInput* msg) {
  return *msg->permissions_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MetadataAction_CopyInput::kFromPathFieldNumber;
const int MetadataAction_CopyInput::kToPathFieldNumber;
const int MetadataAction_CopyInput::kPermissionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetadataAction_CopyInput::MetadataAction_CopyInput()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MetadataAction.CopyInput)
}
MetadataAction_CopyInput::MetadataAction_CopyInput(const MetadataAction_CopyInput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  from_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_from_path()) {
    from_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_path_);
  }
  to_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_to_path()) {
    to_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_path_);
  }
  if (from.has_permissions()) {
    permissions_ = new ::Permissions(*from.permissions_);
  } else {
    permissions_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:MetadataAction.CopyInput)
}

void MetadataAction_CopyInput::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MetadataAction_CopyInput_metadata_2eproto.base);
  from_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  permissions_ = nullptr;
}

MetadataAction_CopyInput::~MetadataAction_CopyInput() {
  // @@protoc_insertion_point(destructor:MetadataAction.CopyInput)
  SharedDtor();
}

void MetadataAction_CopyInput::SharedDtor() {
  from_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete permissions_;
}

void MetadataAction_CopyInput::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MetadataAction_CopyInput& MetadataAction_CopyInput::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MetadataAction_CopyInput_metadata_2eproto.base);
  return *internal_default_instance();
}


void MetadataAction_CopyInput::Clear() {
// @@protoc_insertion_point(message_clear_start:MetadataAction.CopyInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      from_path_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      to_path_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(permissions_ != nullptr);
      permissions_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MetadataAction_CopyInput::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MetadataAction_CopyInput*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required string from_path = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("MetadataAction.CopyInput.from_path");
        object = msg->mutable_from_path();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required string to_path = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("MetadataAction.CopyInput.to_path");
        object = msg->mutable_to_path();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional .Permissions permissions = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::Permissions::_InternalParse;
        object = msg->mutable_permissions();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MetadataAction_CopyInput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MetadataAction.CopyInput)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string from_path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->from_path().data(), static_cast<int>(this->from_path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MetadataAction.CopyInput.from_path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string to_path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->to_path().data(), static_cast<int>(this->to_path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MetadataAction.CopyInput.to_path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .Permissions permissions = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_permissions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MetadataAction.CopyInput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MetadataAction.CopyInput)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MetadataAction_CopyInput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MetadataAction.CopyInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string from_path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->from_path().data(), static_cast<int>(this->from_path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MetadataAction.CopyInput.from_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->from_path(), output);
  }

  // required string to_path = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->to_path().data(), static_cast<int>(this->to_path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MetadataAction.CopyInput.to_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->to_path(), output);
  }

  // optional .Permissions permissions = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::permissions(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MetadataAction.CopyInput)
}

::google::protobuf::uint8* MetadataAction_CopyInput::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MetadataAction.CopyInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string from_path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->from_path().data(), static_cast<int>(this->from_path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MetadataAction.CopyInput.from_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->from_path(), target);
  }

  // required string to_path = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->to_path().data(), static_cast<int>(this->to_path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MetadataAction.CopyInput.to_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->to_path(), target);
  }

  // optional .Permissions permissions = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::permissions(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MetadataAction.CopyInput)
  return target;
}

size_t MetadataAction_CopyInput::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MetadataAction.CopyInput)
  size_t total_size = 0;

  if (has_from_path()) {
    // required string from_path = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_path());
  }

  if (has_to_path()) {
    // required string to_path = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to_path());
  }

  return total_size;
}
size_t MetadataAction_CopyInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MetadataAction.CopyInput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string from_path = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_path());

    // required string to_path = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to_path());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .Permissions permissions = 3;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000004u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *permissions_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MetadataAction_CopyInput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MetadataAction.CopyInput)
  GOOGLE_DCHECK_NE(&from, this);
  const MetadataAction_CopyInput* source =
      ::google::protobuf::DynamicCastToGenerated<MetadataAction_CopyInput>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MetadataAction.CopyInput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MetadataAction.CopyInput)
    MergeFrom(*source);
  }
}

void MetadataAction_CopyInput::MergeFrom(const MetadataAction_CopyInput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MetadataAction.CopyInput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      from_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_path_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      to_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_path_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_permissions()->::Permissions::MergeFrom(from.permissions());
    }
  }
}

void MetadataAction_CopyInput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MetadataAction.CopyInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetadataAction_CopyInput::CopyFrom(const MetadataAction_CopyInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MetadataAction.CopyInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetadataAction_CopyInput::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void MetadataAction_CopyInput::Swap(MetadataAction_CopyInput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetadataAction_CopyInput::InternalSwap(MetadataAction_CopyInput* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  from_path_.Swap(&other->from_path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  to_path_.Swap(&other->to_path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(permissions_, other->permissions_);
}

::google::protobuf::Metadata MetadataAction_CopyInput::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_metadata_2eproto);
  return ::file_level_metadata_metadata_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MetadataAction_CopyOutput::InitAsDefaultInstance() {
}
class MetadataAction_CopyOutput::HasBitSetters {
 public:
  static void set_has_success(MetadataAction_CopyOutput* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MetadataAction_CopyOutput::kSuccessFieldNumber;
const int MetadataAction_CopyOutput::kErrorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetadataAction_CopyOutput::MetadataAction_CopyOutput()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MetadataAction.CopyOutput)
}
MetadataAction_CopyOutput::MetadataAction_CopyOutput(const MetadataAction_CopyOutput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      errors_(from.errors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:MetadataAction.CopyOutput)
}

void MetadataAction_CopyOutput::SharedCtor() {
  success_ = true;
}

MetadataAction_CopyOutput::~MetadataAction_CopyOutput() {
  // @@protoc_insertion_point(destructor:MetadataAction.CopyOutput)
  SharedDtor();
}

void MetadataAction_CopyOutput::SharedDtor() {
}

void MetadataAction_CopyOutput::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MetadataAction_CopyOutput& MetadataAction_CopyOutput::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MetadataAction_CopyOutput_metadata_2eproto.base);
  return *internal_default_instance();
}


void MetadataAction_CopyOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:MetadataAction.CopyOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errors_.Clear();
  success_ = true;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MetadataAction_CopyOutput::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MetadataAction_CopyOutput*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bool success = 1 [default = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_success(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .MetadataAction.Error errors = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) == 16) {
          do {
            ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
            if (!::MetadataAction_Error_IsValid(val)) {
              ::google::protobuf::internal::WriteVarint(2, val, msg->mutable_unknown_fields());
              break;
            }
            msg->add_errors(static_cast<::MetadataAction_Error>(val));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 16 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetEnumValidator(::MetadataAction_Error_IsValid, msg->mutable_unknown_fields(), 2);
        parser_till_end = ::google::protobuf::internal::PackedValidEnumParser;
        object = msg->mutable_errors();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MetadataAction_CopyOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MetadataAction.CopyOutput)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool success = 1 [default = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_success(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .MetadataAction.Error errors = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MetadataAction_Error_IsValid(value)) {
            add_errors(static_cast< ::MetadataAction_Error >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast<::google::protobuf::uint64>(value));
          }
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 2,
                 ::MetadataAction_Error_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_errors())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MetadataAction.CopyOutput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MetadataAction.CopyOutput)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MetadataAction_CopyOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MetadataAction.CopyOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1 [default = true];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // repeated .MetadataAction.Error errors = 2;
  for (int i = 0, n = this->errors_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->errors(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MetadataAction.CopyOutput)
}

::google::protobuf::uint8* MetadataAction_CopyOutput::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MetadataAction.CopyOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1 [default = true];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // repeated .MetadataAction.Error errors = 2;
  target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
    2, this->errors_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MetadataAction.CopyOutput)
  return target;
}

size_t MetadataAction_CopyOutput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MetadataAction.CopyOutput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .MetadataAction.Error errors = 2;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->errors_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->errors(static_cast<int>(i)));
    }
    total_size += (1UL * count) + data_size;
  }

  // optional bool success = 1 [default = true];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MetadataAction_CopyOutput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MetadataAction.CopyOutput)
  GOOGLE_DCHECK_NE(&from, this);
  const MetadataAction_CopyOutput* source =
      ::google::protobuf::DynamicCastToGenerated<MetadataAction_CopyOutput>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MetadataAction.CopyOutput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MetadataAction.CopyOutput)
    MergeFrom(*source);
  }
}

void MetadataAction_CopyOutput::MergeFrom(const MetadataAction_CopyOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MetadataAction.CopyOutput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  errors_.MergeFrom(from.errors_);
  if (from.has_success()) {
    set_success(from.success());
  }
}

void MetadataAction_CopyOutput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MetadataAction.CopyOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetadataAction_CopyOutput::CopyFrom(const MetadataAction_CopyOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MetadataAction.CopyOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetadataAction_CopyOutput::IsInitialized() const {
  return true;
}

void MetadataAction_CopyOutput::Swap(MetadataAction_CopyOutput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetadataAction_CopyOutput::InternalSwap(MetadataAction_CopyOutput* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  errors_.InternalSwap(&other->errors_);
  swap(success_, other->success_);
}

::google::protobuf::Metadata MetadataAction_CopyOutput::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_metadata_2eproto);
  return ::file_level_metadata_metadata_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MetadataAction_RenameInput::InitAsDefaultInstance() {
  ::_MetadataAction_RenameInput_default_instance_._instance.get_mutable()->permissions_ = const_cast< ::Permissions*>(
      ::Permissions::internal_default_instance());
}
class MetadataAction_RenameInput::HasBitSetters {
 public:
  static void set_has_from_path(MetadataAction_RenameInput* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_to_path(MetadataAction_RenameInput* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static const ::Permissions& permissions(const MetadataAction_RenameInput* msg);
  static void set_has_permissions(MetadataAction_RenameInput* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

const ::Permissions&
MetadataAction_RenameInput::HasBitSetters::permissions(const MetadataAction_RenameInput* msg) {
  return *msg->permissions_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MetadataAction_RenameInput::kFromPathFieldNumber;
const int MetadataAction_RenameInput::kToPathFieldNumber;
const int MetadataAction_RenameInput::kPermissionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetadataAction_RenameInput::MetadataAction_RenameInput()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MetadataAction.RenameInput)
}
MetadataAction_RenameInput::MetadataAction_RenameInput(const MetadataAction_RenameInput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  from_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_from_path()) {
    from_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_path_);
  }
  to_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_to_path()) {
    to_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_path_);
  }
  if (from.has_permissions()) {
    permissions_ = new ::Permissions(*from.permissions_);
  } else {
    permissions_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:MetadataAction.RenameInput)
}

void MetadataAction_RenameInput::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MetadataAction_RenameInput_metadata_2eproto.base);
  from_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  permissions_ = nullptr;
}

MetadataAction_RenameInput::~MetadataAction_RenameInput() {
  // @@protoc_insertion_point(destructor:MetadataAction.RenameInput)
  SharedDtor();
}

void MetadataAction_RenameInput::SharedDtor() {
  from_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete permissions_;
}

void MetadataAction_RenameInput::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MetadataAction_RenameInput& MetadataAction_RenameInput::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MetadataAction_RenameInput_metadata_2eproto.base);
  return *internal_default_instance();
}


void MetadataAction_RenameInput::Clear() {
// @@protoc_insertion_point(message_clear_start:MetadataAction.RenameInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      from_path_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      to_path_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(permissions_ != nullptr);
      permissions_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MetadataAction_RenameInput::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MetadataAction_RenameInput*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required string from_path = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("MetadataAction.RenameInput.from_path");
        object = msg->mutable_from_path();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required string to_path = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("MetadataAction.RenameInput.to_path");
        object = msg->mutable_to_path();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional .Permissions permissions = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::Permissions::_InternalParse;
        object = msg->mutable_permissions();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MetadataAction_RenameInput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MetadataAction.RenameInput)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string from_path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->from_path().data(), static_cast<int>(this->from_path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MetadataAction.RenameInput.from_path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string to_path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->to_path().data(), static_cast<int>(this->to_path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MetadataAction.RenameInput.to_path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .Permissions permissions = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_permissions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MetadataAction.RenameInput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MetadataAction.RenameInput)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MetadataAction_RenameInput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MetadataAction.RenameInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string from_path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->from_path().data(), static_cast<int>(this->from_path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MetadataAction.RenameInput.from_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->from_path(), output);
  }

  // required string to_path = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->to_path().data(), static_cast<int>(this->to_path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MetadataAction.RenameInput.to_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->to_path(), output);
  }

  // optional .Permissions permissions = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::permissions(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MetadataAction.RenameInput)
}

::google::protobuf::uint8* MetadataAction_RenameInput::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MetadataAction.RenameInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string from_path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->from_path().data(), static_cast<int>(this->from_path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MetadataAction.RenameInput.from_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->from_path(), target);
  }

  // required string to_path = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->to_path().data(), static_cast<int>(this->to_path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MetadataAction.RenameInput.to_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->to_path(), target);
  }

  // optional .Permissions permissions = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::permissions(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MetadataAction.RenameInput)
  return target;
}

size_t MetadataAction_RenameInput::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MetadataAction.RenameInput)
  size_t total_size = 0;

  if (has_from_path()) {
    // required string from_path = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_path());
  }

  if (has_to_path()) {
    // required string to_path = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to_path());
  }

  return total_size;
}
size_t MetadataAction_RenameInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MetadataAction.RenameInput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string from_path = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_path());

    // required string to_path = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to_path());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .Permissions permissions = 3;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000004u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *permissions_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MetadataAction_RenameInput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MetadataAction.RenameInput)
  GOOGLE_DCHECK_NE(&from, this);
  const MetadataAction_RenameInput* source =
      ::google::protobuf::DynamicCastToGenerated<MetadataAction_RenameInput>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MetadataAction.RenameInput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MetadataAction.RenameInput)
    MergeFrom(*source);
  }
}

void MetadataAction_RenameInput::MergeFrom(const MetadataAction_RenameInput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MetadataAction.RenameInput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      from_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_path_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      to_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_path_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_permissions()->::Permissions::MergeFrom(from.permissions());
    }
  }
}

void MetadataAction_RenameInput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MetadataAction.RenameInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetadataAction_RenameInput::CopyFrom(const MetadataAction_RenameInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MetadataAction.RenameInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetadataAction_RenameInput::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void MetadataAction_RenameInput::Swap(MetadataAction_RenameInput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetadataAction_RenameInput::InternalSwap(MetadataAction_RenameInput* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  from_path_.Swap(&other->from_path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  to_path_.Swap(&other->to_path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(permissions_, other->permissions_);
}

::google::protobuf::Metadata MetadataAction_RenameInput::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_metadata_2eproto);
  return ::file_level_metadata_metadata_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MetadataAction_RenameOutput::InitAsDefaultInstance() {
}
class MetadataAction_RenameOutput::HasBitSetters {
 public:
  static void set_has_success(MetadataAction_RenameOutput* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MetadataAction_RenameOutput::kSuccessFieldNumber;
const int MetadataAction_RenameOutput::kErrorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetadataAction_RenameOutput::MetadataAction_RenameOutput()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MetadataAction.RenameOutput)
}
MetadataAction_RenameOutput::MetadataAction_RenameOutput(const MetadataAction_RenameOutput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      errors_(from.errors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:MetadataAction.RenameOutput)
}

void MetadataAction_RenameOutput::SharedCtor() {
  success_ = true;
}

MetadataAction_RenameOutput::~MetadataAction_RenameOutput() {
  // @@protoc_insertion_point(destructor:MetadataAction.RenameOutput)
  SharedDtor();
}

void MetadataAction_RenameOutput::SharedDtor() {
}

void MetadataAction_RenameOutput::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MetadataAction_RenameOutput& MetadataAction_RenameOutput::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MetadataAction_RenameOutput_metadata_2eproto.base);
  return *internal_default_instance();
}


void MetadataAction_RenameOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:MetadataAction.RenameOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errors_.Clear();
  success_ = true;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MetadataAction_RenameOutput::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MetadataAction_RenameOutput*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bool success = 1 [default = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_success(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .MetadataAction.Error errors = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) == 16) {
          do {
            ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
            if (!::MetadataAction_Error_IsValid(val)) {
              ::google::protobuf::internal::WriteVarint(2, val, msg->mutable_unknown_fields());
              break;
            }
            msg->add_errors(static_cast<::MetadataAction_Error>(val));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 16 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetEnumValidator(::MetadataAction_Error_IsValid, msg->mutable_unknown_fields(), 2);
        parser_till_end = ::google::protobuf::internal::PackedValidEnumParser;
        object = msg->mutable_errors();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MetadataAction_RenameOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MetadataAction.RenameOutput)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool success = 1 [default = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_success(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .MetadataAction.Error errors = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MetadataAction_Error_IsValid(value)) {
            add_errors(static_cast< ::MetadataAction_Error >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast<::google::protobuf::uint64>(value));
          }
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 2,
                 ::MetadataAction_Error_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_errors())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MetadataAction.RenameOutput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MetadataAction.RenameOutput)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MetadataAction_RenameOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MetadataAction.RenameOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1 [default = true];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // repeated .MetadataAction.Error errors = 2;
  for (int i = 0, n = this->errors_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->errors(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MetadataAction.RenameOutput)
}

::google::protobuf::uint8* MetadataAction_RenameOutput::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MetadataAction.RenameOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1 [default = true];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // repeated .MetadataAction.Error errors = 2;
  target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
    2, this->errors_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MetadataAction.RenameOutput)
  return target;
}

size_t MetadataAction_RenameOutput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MetadataAction.RenameOutput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .MetadataAction.Error errors = 2;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->errors_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->errors(static_cast<int>(i)));
    }
    total_size += (1UL * count) + data_size;
  }

  // optional bool success = 1 [default = true];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MetadataAction_RenameOutput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MetadataAction.RenameOutput)
  GOOGLE_DCHECK_NE(&from, this);
  const MetadataAction_RenameOutput* source =
      ::google::protobuf::DynamicCastToGenerated<MetadataAction_RenameOutput>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MetadataAction.RenameOutput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MetadataAction.RenameOutput)
    MergeFrom(*source);
  }
}

void MetadataAction_RenameOutput::MergeFrom(const MetadataAction_RenameOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MetadataAction.RenameOutput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  errors_.MergeFrom(from.errors_);
  if (from.has_success()) {
    set_success(from.success());
  }
}

void MetadataAction_RenameOutput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MetadataAction.RenameOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetadataAction_RenameOutput::CopyFrom(const MetadataAction_RenameOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MetadataAction.RenameOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetadataAction_RenameOutput::IsInitialized() const {
  return true;
}

void MetadataAction_RenameOutput::Swap(MetadataAction_RenameOutput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetadataAction_RenameOutput::InternalSwap(MetadataAction_RenameOutput* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  errors_.InternalSwap(&other->errors_);
  swap(success_, other->success_);
}

::google::protobuf::Metadata MetadataAction_RenameOutput::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_metadata_2eproto);
  return ::file_level_metadata_metadata_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MetadataAction_LookupInput::InitAsDefaultInstance() {
  ::_MetadataAction_LookupInput_default_instance_._instance.get_mutable()->permissions_ = const_cast< ::Permissions*>(
      ::Permissions::internal_default_instance());
}
class MetadataAction_LookupInput::HasBitSetters {
 public:
  static void set_has_path(MetadataAction_LookupInput* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static const ::Permissions& permissions(const MetadataAction_LookupInput* msg);
  static void set_has_permissions(MetadataAction_LookupInput* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

const ::Permissions&
MetadataAction_LookupInput::HasBitSetters::permissions(const MetadataAction_LookupInput* msg) {
  return *msg->permissions_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MetadataAction_LookupInput::kPathFieldNumber;
const int MetadataAction_LookupInput::kPermissionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetadataAction_LookupInput::MetadataAction_LookupInput()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MetadataAction.LookupInput)
}
MetadataAction_LookupInput::MetadataAction_LookupInput(const MetadataAction_LookupInput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_path()) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.has_permissions()) {
    permissions_ = new ::Permissions(*from.permissions_);
  } else {
    permissions_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:MetadataAction.LookupInput)
}

void MetadataAction_LookupInput::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MetadataAction_LookupInput_metadata_2eproto.base);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  permissions_ = nullptr;
}

MetadataAction_LookupInput::~MetadataAction_LookupInput() {
  // @@protoc_insertion_point(destructor:MetadataAction.LookupInput)
  SharedDtor();
}

void MetadataAction_LookupInput::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete permissions_;
}

void MetadataAction_LookupInput::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MetadataAction_LookupInput& MetadataAction_LookupInput::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MetadataAction_LookupInput_metadata_2eproto.base);
  return *internal_default_instance();
}


void MetadataAction_LookupInput::Clear() {
// @@protoc_insertion_point(message_clear_start:MetadataAction.LookupInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      path_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(permissions_ != nullptr);
      permissions_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MetadataAction_LookupInput::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MetadataAction_LookupInput*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required string path = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("MetadataAction.LookupInput.path");
        object = msg->mutable_path();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional .Permissions permissions = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::Permissions::_InternalParse;
        object = msg->mutable_permissions();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MetadataAction_LookupInput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MetadataAction.LookupInput)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MetadataAction.LookupInput.path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .Permissions permissions = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_permissions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MetadataAction.LookupInput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MetadataAction.LookupInput)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MetadataAction_LookupInput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MetadataAction.LookupInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MetadataAction.LookupInput.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // optional .Permissions permissions = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::permissions(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MetadataAction.LookupInput)
}

::google::protobuf::uint8* MetadataAction_LookupInput::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MetadataAction.LookupInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MetadataAction.LookupInput.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // optional .Permissions permissions = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::permissions(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MetadataAction.LookupInput)
  return target;
}

size_t MetadataAction_LookupInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MetadataAction.LookupInput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string path = 1;
  if (has_path()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .Permissions permissions = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *permissions_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MetadataAction_LookupInput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MetadataAction.LookupInput)
  GOOGLE_DCHECK_NE(&from, this);
  const MetadataAction_LookupInput* source =
      ::google::protobuf::DynamicCastToGenerated<MetadataAction_LookupInput>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MetadataAction.LookupInput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MetadataAction.LookupInput)
    MergeFrom(*source);
  }
}

void MetadataAction_LookupInput::MergeFrom(const MetadataAction_LookupInput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MetadataAction.LookupInput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_permissions()->::Permissions::MergeFrom(from.permissions());
    }
  }
}

void MetadataAction_LookupInput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MetadataAction.LookupInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetadataAction_LookupInput::CopyFrom(const MetadataAction_LookupInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MetadataAction.LookupInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetadataAction_LookupInput::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void MetadataAction_LookupInput::Swap(MetadataAction_LookupInput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetadataAction_LookupInput::InternalSwap(MetadataAction_LookupInput* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(permissions_, other->permissions_);
}

::google::protobuf::Metadata MetadataAction_LookupInput::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_metadata_2eproto);
  return ::file_level_metadata_metadata_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MetadataAction_LookupOutput::InitAsDefaultInstance() {
  ::_MetadataAction_LookupOutput_default_instance_._instance.get_mutable()->entry_ = const_cast< ::MetadataEntry*>(
      ::MetadataEntry::internal_default_instance());
}
class MetadataAction_LookupOutput::HasBitSetters {
 public:
  static void set_has_success(MetadataAction_LookupOutput* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static const ::MetadataEntry& entry(const MetadataAction_LookupOutput* msg);
  static void set_has_entry(MetadataAction_LookupOutput* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_path(MetadataAction_LookupOutput* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

const ::MetadataEntry&
MetadataAction_LookupOutput::HasBitSetters::entry(const MetadataAction_LookupOutput* msg) {
  return *msg->entry_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MetadataAction_LookupOutput::kSuccessFieldNumber;
const int MetadataAction_LookupOutput::kErrorsFieldNumber;
const int MetadataAction_LookupOutput::kEntryFieldNumber;
const int MetadataAction_LookupOutput::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetadataAction_LookupOutput::MetadataAction_LookupOutput()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MetadataAction.LookupOutput)
}
MetadataAction_LookupOutput::MetadataAction_LookupOutput(const MetadataAction_LookupOutput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      errors_(from.errors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_path()) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.has_entry()) {
    entry_ = new ::MetadataEntry(*from.entry_);
  } else {
    entry_ = nullptr;
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:MetadataAction.LookupOutput)
}

void MetadataAction_LookupOutput::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MetadataAction_LookupOutput_metadata_2eproto.base);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  entry_ = nullptr;
  success_ = true;
}

MetadataAction_LookupOutput::~MetadataAction_LookupOutput() {
  // @@protoc_insertion_point(destructor:MetadataAction.LookupOutput)
  SharedDtor();
}

void MetadataAction_LookupOutput::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete entry_;
}

void MetadataAction_LookupOutput::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MetadataAction_LookupOutput& MetadataAction_LookupOutput::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MetadataAction_LookupOutput_metadata_2eproto.base);
  return *internal_default_instance();
}


void MetadataAction_LookupOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:MetadataAction.LookupOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errors_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      path_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(entry_ != nullptr);
      entry_->Clear();
    }
    success_ = true;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MetadataAction_LookupOutput::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MetadataAction_LookupOutput*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bool success = 1 [default = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_success(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .MetadataAction.Error errors = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) == 16) {
          do {
            ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
            if (!::MetadataAction_Error_IsValid(val)) {
              ::google::protobuf::internal::WriteVarint(2, val, msg->mutable_unknown_fields());
              break;
            }
            msg->add_errors(static_cast<::MetadataAction_Error>(val));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 16 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetEnumValidator(::MetadataAction_Error_IsValid, msg->mutable_unknown_fields(), 2);
        parser_till_end = ::google::protobuf::internal::PackedValidEnumParser;
        object = msg->mutable_errors();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      // optional .MetadataEntry entry = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::MetadataEntry::_InternalParse;
        object = msg->mutable_entry();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // optional string path = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("MetadataAction.LookupOutput.path");
        object = msg->mutable_path();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MetadataAction_LookupOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MetadataAction.LookupOutput)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool success = 1 [default = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_success(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .MetadataAction.Error errors = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MetadataAction_Error_IsValid(value)) {
            add_errors(static_cast< ::MetadataAction_Error >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast<::google::protobuf::uint64>(value));
          }
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 2,
                 ::MetadataAction_Error_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_errors())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .MetadataEntry entry = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_entry()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string path = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MetadataAction.LookupOutput.path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MetadataAction.LookupOutput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MetadataAction.LookupOutput)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MetadataAction_LookupOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MetadataAction.LookupOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1 [default = true];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // repeated .MetadataAction.Error errors = 2;
  for (int i = 0, n = this->errors_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->errors(i), output);
  }

  // optional .MetadataEntry entry = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::entry(this), output);
  }

  // optional string path = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MetadataAction.LookupOutput.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->path(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MetadataAction.LookupOutput)
}

::google::protobuf::uint8* MetadataAction_LookupOutput::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MetadataAction.LookupOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1 [default = true];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // repeated .MetadataAction.Error errors = 2;
  target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
    2, this->errors_, target);

  // optional .MetadataEntry entry = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::entry(this), target);
  }

  // optional string path = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MetadataAction.LookupOutput.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->path(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MetadataAction.LookupOutput)
  return target;
}

size_t MetadataAction_LookupOutput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MetadataAction.LookupOutput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .MetadataAction.Error errors = 2;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->errors_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->errors(static_cast<int>(i)));
    }
    total_size += (1UL * count) + data_size;
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string path = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->path());
    }

    // optional .MetadataEntry entry = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *entry_);
    }

    // optional bool success = 1 [default = true];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MetadataAction_LookupOutput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MetadataAction.LookupOutput)
  GOOGLE_DCHECK_NE(&from, this);
  const MetadataAction_LookupOutput* source =
      ::google::protobuf::DynamicCastToGenerated<MetadataAction_LookupOutput>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MetadataAction.LookupOutput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MetadataAction.LookupOutput)
    MergeFrom(*source);
  }
}

void MetadataAction_LookupOutput::MergeFrom(const MetadataAction_LookupOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MetadataAction.LookupOutput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  errors_.MergeFrom(from.errors_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_entry()->::MetadataEntry::MergeFrom(from.entry());
    }
    if (cached_has_bits & 0x00000004u) {
      success_ = from.success_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MetadataAction_LookupOutput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MetadataAction.LookupOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetadataAction_LookupOutput::CopyFrom(const MetadataAction_LookupOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MetadataAction.LookupOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetadataAction_LookupOutput::IsInitialized() const {
  if (has_entry()) {
    if (!this->entry_->IsInitialized()) return false;
  }
  return true;
}

void MetadataAction_LookupOutput::Swap(MetadataAction_LookupOutput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetadataAction_LookupOutput::InternalSwap(MetadataAction_LookupOutput* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  errors_.InternalSwap(&other->errors_);
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(entry_, other->entry_);
  swap(success_, other->success_);
}

::google::protobuf::Metadata MetadataAction_LookupOutput::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_metadata_2eproto);
  return ::file_level_metadata_metadata_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MetadataAction_Tree_LookupInput::InitAsDefaultInstance() {
  ::_MetadataAction_Tree_LookupInput_default_instance_._instance.get_mutable()->permissions_ = const_cast< ::Permissions*>(
      ::Permissions::internal_default_instance());
}
class MetadataAction_Tree_LookupInput::HasBitSetters {
 public:
  static void set_has_path(MetadataAction_Tree_LookupInput* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static const ::Permissions& permissions(const MetadataAction_Tree_LookupInput* msg);
  static void set_has_permissions(MetadataAction_Tree_LookupInput* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

const ::Permissions&
MetadataAction_Tree_LookupInput::HasBitSetters::permissions(const MetadataAction_Tree_LookupInput* msg) {
  return *msg->permissions_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MetadataAction_Tree_LookupInput::kPathFieldNumber;
const int MetadataAction_Tree_LookupInput::kPermissionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetadataAction_Tree_LookupInput::MetadataAction_Tree_LookupInput()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MetadataAction.Tree_LookupInput)
}
MetadataAction_Tree_LookupInput::MetadataAction_Tree_LookupInput(const MetadataAction_Tree_LookupInput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_path()) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.has_permissions()) {
    permissions_ = new ::Permissions(*from.permissions_);
  } else {
    permissions_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:MetadataAction.Tree_LookupInput)
}

void MetadataAction_Tree_LookupInput::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MetadataAction_Tree_LookupInput_metadata_2eproto.base);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  permissions_ = nullptr;
}

MetadataAction_Tree_LookupInput::~MetadataAction_Tree_LookupInput() {
  // @@protoc_insertion_point(destructor:MetadataAction.Tree_LookupInput)
  SharedDtor();
}

void MetadataAction_Tree_LookupInput::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete permissions_;
}

void MetadataAction_Tree_LookupInput::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MetadataAction_Tree_LookupInput& MetadataAction_Tree_LookupInput::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MetadataAction_Tree_LookupInput_metadata_2eproto.base);
  return *internal_default_instance();
}


void MetadataAction_Tree_LookupInput::Clear() {
// @@protoc_insertion_point(message_clear_start:MetadataAction.Tree_LookupInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      path_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(permissions_ != nullptr);
      permissions_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MetadataAction_Tree_LookupInput::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MetadataAction_Tree_LookupInput*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required string path = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("MetadataAction.Tree_LookupInput.path");
        object = msg->mutable_path();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional .Permissions permissions = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::Permissions::_InternalParse;
        object = msg->mutable_permissions();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MetadataAction_Tree_LookupInput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MetadataAction.Tree_LookupInput)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MetadataAction.Tree_LookupInput.path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .Permissions permissions = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_permissions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MetadataAction.Tree_LookupInput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MetadataAction.Tree_LookupInput)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MetadataAction_Tree_LookupInput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MetadataAction.Tree_LookupInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MetadataAction.Tree_LookupInput.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // optional .Permissions permissions = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::permissions(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MetadataAction.Tree_LookupInput)
}

::google::protobuf::uint8* MetadataAction_Tree_LookupInput::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MetadataAction.Tree_LookupInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MetadataAction.Tree_LookupInput.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // optional .Permissions permissions = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::permissions(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MetadataAction.Tree_LookupInput)
  return target;
}

size_t MetadataAction_Tree_LookupInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MetadataAction.Tree_LookupInput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string path = 1;
  if (has_path()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .Permissions permissions = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *permissions_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MetadataAction_Tree_LookupInput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MetadataAction.Tree_LookupInput)
  GOOGLE_DCHECK_NE(&from, this);
  const MetadataAction_Tree_LookupInput* source =
      ::google::protobuf::DynamicCastToGenerated<MetadataAction_Tree_LookupInput>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MetadataAction.Tree_LookupInput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MetadataAction.Tree_LookupInput)
    MergeFrom(*source);
  }
}

void MetadataAction_Tree_LookupInput::MergeFrom(const MetadataAction_Tree_LookupInput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MetadataAction.Tree_LookupInput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_permissions()->::Permissions::MergeFrom(from.permissions());
    }
  }
}

void MetadataAction_Tree_LookupInput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MetadataAction.Tree_LookupInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetadataAction_Tree_LookupInput::CopyFrom(const MetadataAction_Tree_LookupInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MetadataAction.Tree_LookupInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetadataAction_Tree_LookupInput::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void MetadataAction_Tree_LookupInput::Swap(MetadataAction_Tree_LookupInput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetadataAction_Tree_LookupInput::InternalSwap(MetadataAction_Tree_LookupInput* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(permissions_, other->permissions_);
}

::google::protobuf::Metadata MetadataAction_Tree_LookupInput::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_metadata_2eproto);
  return ::file_level_metadata_metadata_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MetadataAction_Tree_LookupOutput::InitAsDefaultInstance() {
  ::_MetadataAction_Tree_LookupOutput_default_instance_._instance.get_mutable()->entry_ = const_cast< ::MetadataEntry*>(
      ::MetadataEntry::internal_default_instance());
}
class MetadataAction_Tree_LookupOutput::HasBitSetters {
 public:
  static void set_has_success(MetadataAction_Tree_LookupOutput* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static const ::MetadataEntry& entry(const MetadataAction_Tree_LookupOutput* msg);
  static void set_has_entry(MetadataAction_Tree_LookupOutput* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

const ::MetadataEntry&
MetadataAction_Tree_LookupOutput::HasBitSetters::entry(const MetadataAction_Tree_LookupOutput* msg) {
  return *msg->entry_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MetadataAction_Tree_LookupOutput::kSuccessFieldNumber;
const int MetadataAction_Tree_LookupOutput::kErrorsFieldNumber;
const int MetadataAction_Tree_LookupOutput::kEntryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetadataAction_Tree_LookupOutput::MetadataAction_Tree_LookupOutput()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MetadataAction.Tree_LookupOutput)
}
MetadataAction_Tree_LookupOutput::MetadataAction_Tree_LookupOutput(const MetadataAction_Tree_LookupOutput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      errors_(from.errors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_entry()) {
    entry_ = new ::MetadataEntry(*from.entry_);
  } else {
    entry_ = nullptr;
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:MetadataAction.Tree_LookupOutput)
}

void MetadataAction_Tree_LookupOutput::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MetadataAction_Tree_LookupOutput_metadata_2eproto.base);
  entry_ = nullptr;
  success_ = true;
}

MetadataAction_Tree_LookupOutput::~MetadataAction_Tree_LookupOutput() {
  // @@protoc_insertion_point(destructor:MetadataAction.Tree_LookupOutput)
  SharedDtor();
}

void MetadataAction_Tree_LookupOutput::SharedDtor() {
  if (this != internal_default_instance()) delete entry_;
}

void MetadataAction_Tree_LookupOutput::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MetadataAction_Tree_LookupOutput& MetadataAction_Tree_LookupOutput::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MetadataAction_Tree_LookupOutput_metadata_2eproto.base);
  return *internal_default_instance();
}


void MetadataAction_Tree_LookupOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:MetadataAction.Tree_LookupOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errors_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(entry_ != nullptr);
      entry_->Clear();
    }
    success_ = true;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MetadataAction_Tree_LookupOutput::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MetadataAction_Tree_LookupOutput*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bool success = 1 [default = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_success(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .MetadataAction.Error errors = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) == 16) {
          do {
            ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
            if (!::MetadataAction_Error_IsValid(val)) {
              ::google::protobuf::internal::WriteVarint(2, val, msg->mutable_unknown_fields());
              break;
            }
            msg->add_errors(static_cast<::MetadataAction_Error>(val));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 16 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetEnumValidator(::MetadataAction_Error_IsValid, msg->mutable_unknown_fields(), 2);
        parser_till_end = ::google::protobuf::internal::PackedValidEnumParser;
        object = msg->mutable_errors();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      // optional .MetadataEntry entry = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::MetadataEntry::_InternalParse;
        object = msg->mutable_entry();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MetadataAction_Tree_LookupOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MetadataAction.Tree_LookupOutput)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool success = 1 [default = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_success(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .MetadataAction.Error errors = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MetadataAction_Error_IsValid(value)) {
            add_errors(static_cast< ::MetadataAction_Error >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast<::google::protobuf::uint64>(value));
          }
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 2,
                 ::MetadataAction_Error_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_errors())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .MetadataEntry entry = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_entry()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MetadataAction.Tree_LookupOutput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MetadataAction.Tree_LookupOutput)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MetadataAction_Tree_LookupOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MetadataAction.Tree_LookupOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1 [default = true];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // repeated .MetadataAction.Error errors = 2;
  for (int i = 0, n = this->errors_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->errors(i), output);
  }

  // optional .MetadataEntry entry = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::entry(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MetadataAction.Tree_LookupOutput)
}

::google::protobuf::uint8* MetadataAction_Tree_LookupOutput::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MetadataAction.Tree_LookupOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1 [default = true];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // repeated .MetadataAction.Error errors = 2;
  target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
    2, this->errors_, target);

  // optional .MetadataEntry entry = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::entry(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MetadataAction.Tree_LookupOutput)
  return target;
}

size_t MetadataAction_Tree_LookupOutput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MetadataAction.Tree_LookupOutput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .MetadataAction.Error errors = 2;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->errors_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->errors(static_cast<int>(i)));
    }
    total_size += (1UL * count) + data_size;
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .MetadataEntry entry = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *entry_);
    }

    // optional bool success = 1 [default = true];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MetadataAction_Tree_LookupOutput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MetadataAction.Tree_LookupOutput)
  GOOGLE_DCHECK_NE(&from, this);
  const MetadataAction_Tree_LookupOutput* source =
      ::google::protobuf::DynamicCastToGenerated<MetadataAction_Tree_LookupOutput>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MetadataAction.Tree_LookupOutput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MetadataAction.Tree_LookupOutput)
    MergeFrom(*source);
  }
}

void MetadataAction_Tree_LookupOutput::MergeFrom(const MetadataAction_Tree_LookupOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MetadataAction.Tree_LookupOutput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  errors_.MergeFrom(from.errors_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_entry()->::MetadataEntry::MergeFrom(from.entry());
    }
    if (cached_has_bits & 0x00000002u) {
      success_ = from.success_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MetadataAction_Tree_LookupOutput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MetadataAction.Tree_LookupOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetadataAction_Tree_LookupOutput::CopyFrom(const MetadataAction_Tree_LookupOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MetadataAction.Tree_LookupOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetadataAction_Tree_LookupOutput::IsInitialized() const {
  if (has_entry()) {
    if (!this->entry_->IsInitialized()) return false;
  }
  return true;
}

void MetadataAction_Tree_LookupOutput::Swap(MetadataAction_Tree_LookupOutput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetadataAction_Tree_LookupOutput::InternalSwap(MetadataAction_Tree_LookupOutput* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  errors_.InternalSwap(&other->errors_);
  swap(entry_, other->entry_);
  swap(success_, other->success_);
}

::google::protobuf::Metadata MetadataAction_Tree_LookupOutput::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_metadata_2eproto);
  return ::file_level_metadata_metadata_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MetadataAction_ResizeInput::InitAsDefaultInstance() {
  ::_MetadataAction_ResizeInput_default_instance_._instance.get_mutable()->permissions_ = const_cast< ::Permissions*>(
      ::Permissions::internal_default_instance());
}
class MetadataAction_ResizeInput::HasBitSetters {
 public:
  static void set_has_path(MetadataAction_ResizeInput* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static const ::Permissions& permissions(const MetadataAction_ResizeInput* msg);
  static void set_has_permissions(MetadataAction_ResizeInput* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_size(MetadataAction_ResizeInput* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

const ::Permissions&
MetadataAction_ResizeInput::HasBitSetters::permissions(const MetadataAction_ResizeInput* msg) {
  return *msg->permissions_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MetadataAction_ResizeInput::kPathFieldNumber;
const int MetadataAction_ResizeInput::kPermissionsFieldNumber;
const int MetadataAction_ResizeInput::kSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetadataAction_ResizeInput::MetadataAction_ResizeInput()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MetadataAction.ResizeInput)
}
MetadataAction_ResizeInput::MetadataAction_ResizeInput(const MetadataAction_ResizeInput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_path()) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.has_permissions()) {
    permissions_ = new ::Permissions(*from.permissions_);
  } else {
    permissions_ = nullptr;
  }
  size_ = from.size_;
  // @@protoc_insertion_point(copy_constructor:MetadataAction.ResizeInput)
}

void MetadataAction_ResizeInput::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MetadataAction_ResizeInput_metadata_2eproto.base);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&permissions_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&size_) -
      reinterpret_cast<char*>(&permissions_)) + sizeof(size_));
}

MetadataAction_ResizeInput::~MetadataAction_ResizeInput() {
  // @@protoc_insertion_point(destructor:MetadataAction.ResizeInput)
  SharedDtor();
}

void MetadataAction_ResizeInput::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete permissions_;
}

void MetadataAction_ResizeInput::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MetadataAction_ResizeInput& MetadataAction_ResizeInput::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MetadataAction_ResizeInput_metadata_2eproto.base);
  return *internal_default_instance();
}


void MetadataAction_ResizeInput::Clear() {
// @@protoc_insertion_point(message_clear_start:MetadataAction.ResizeInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      path_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(permissions_ != nullptr);
      permissions_->Clear();
    }
  }
  size_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MetadataAction_ResizeInput::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MetadataAction_ResizeInput*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required string path = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("MetadataAction.ResizeInput.path");
        object = msg->mutable_path();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional .Permissions permissions = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::Permissions::_InternalParse;
        object = msg->mutable_permissions();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // required uint64 size = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_size(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MetadataAction_ResizeInput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MetadataAction.ResizeInput)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MetadataAction.ResizeInput.path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .Permissions permissions = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_permissions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_size(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MetadataAction.ResizeInput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MetadataAction.ResizeInput)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MetadataAction_ResizeInput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MetadataAction.ResizeInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MetadataAction.ResizeInput.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // optional .Permissions permissions = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::permissions(this), output);
  }

  // required uint64 size = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MetadataAction.ResizeInput)
}

::google::protobuf::uint8* MetadataAction_ResizeInput::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MetadataAction.ResizeInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MetadataAction.ResizeInput.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // optional .Permissions permissions = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::permissions(this), target);
  }

  // required uint64 size = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->size(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MetadataAction.ResizeInput)
  return target;
}

size_t MetadataAction_ResizeInput::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MetadataAction.ResizeInput)
  size_t total_size = 0;

  if (has_path()) {
    // required string path = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  if (has_size()) {
    // required uint64 size = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->size());
  }

  return total_size;
}
size_t MetadataAction_ResizeInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MetadataAction.ResizeInput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000005) ^ 0x00000005) == 0) {  // All required fields are present.
    // required string path = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());

    // required uint64 size = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->size());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .Permissions permissions = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *permissions_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MetadataAction_ResizeInput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MetadataAction.ResizeInput)
  GOOGLE_DCHECK_NE(&from, this);
  const MetadataAction_ResizeInput* source =
      ::google::protobuf::DynamicCastToGenerated<MetadataAction_ResizeInput>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MetadataAction.ResizeInput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MetadataAction.ResizeInput)
    MergeFrom(*source);
  }
}

void MetadataAction_ResizeInput::MergeFrom(const MetadataAction_ResizeInput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MetadataAction.ResizeInput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_permissions()->::Permissions::MergeFrom(from.permissions());
    }
    if (cached_has_bits & 0x00000004u) {
      size_ = from.size_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MetadataAction_ResizeInput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MetadataAction.ResizeInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetadataAction_ResizeInput::CopyFrom(const MetadataAction_ResizeInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MetadataAction.ResizeInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetadataAction_ResizeInput::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;
  return true;
}

void MetadataAction_ResizeInput::Swap(MetadataAction_ResizeInput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetadataAction_ResizeInput::InternalSwap(MetadataAction_ResizeInput* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(permissions_, other->permissions_);
  swap(size_, other->size_);
}

::google::protobuf::Metadata MetadataAction_ResizeInput::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_metadata_2eproto);
  return ::file_level_metadata_metadata_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MetadataAction_ResizeOutput::InitAsDefaultInstance() {
}
class MetadataAction_ResizeOutput::HasBitSetters {
 public:
  static void set_has_success(MetadataAction_ResizeOutput* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MetadataAction_ResizeOutput::kSuccessFieldNumber;
const int MetadataAction_ResizeOutput::kErrorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetadataAction_ResizeOutput::MetadataAction_ResizeOutput()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MetadataAction.ResizeOutput)
}
MetadataAction_ResizeOutput::MetadataAction_ResizeOutput(const MetadataAction_ResizeOutput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      errors_(from.errors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:MetadataAction.ResizeOutput)
}

void MetadataAction_ResizeOutput::SharedCtor() {
  success_ = true;
}

MetadataAction_ResizeOutput::~MetadataAction_ResizeOutput() {
  // @@protoc_insertion_point(destructor:MetadataAction.ResizeOutput)
  SharedDtor();
}

void MetadataAction_ResizeOutput::SharedDtor() {
}

void MetadataAction_ResizeOutput::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MetadataAction_ResizeOutput& MetadataAction_ResizeOutput::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MetadataAction_ResizeOutput_metadata_2eproto.base);
  return *internal_default_instance();
}


void MetadataAction_ResizeOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:MetadataAction.ResizeOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errors_.Clear();
  success_ = true;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MetadataAction_ResizeOutput::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MetadataAction_ResizeOutput*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bool success = 1 [default = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_success(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .MetadataAction.Error errors = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) == 16) {
          do {
            ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
            if (!::MetadataAction_Error_IsValid(val)) {
              ::google::protobuf::internal::WriteVarint(2, val, msg->mutable_unknown_fields());
              break;
            }
            msg->add_errors(static_cast<::MetadataAction_Error>(val));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 16 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetEnumValidator(::MetadataAction_Error_IsValid, msg->mutable_unknown_fields(), 2);
        parser_till_end = ::google::protobuf::internal::PackedValidEnumParser;
        object = msg->mutable_errors();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MetadataAction_ResizeOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MetadataAction.ResizeOutput)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool success = 1 [default = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_success(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .MetadataAction.Error errors = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MetadataAction_Error_IsValid(value)) {
            add_errors(static_cast< ::MetadataAction_Error >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast<::google::protobuf::uint64>(value));
          }
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 2,
                 ::MetadataAction_Error_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_errors())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MetadataAction.ResizeOutput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MetadataAction.ResizeOutput)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MetadataAction_ResizeOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MetadataAction.ResizeOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1 [default = true];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // repeated .MetadataAction.Error errors = 2;
  for (int i = 0, n = this->errors_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->errors(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MetadataAction.ResizeOutput)
}

::google::protobuf::uint8* MetadataAction_ResizeOutput::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MetadataAction.ResizeOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1 [default = true];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // repeated .MetadataAction.Error errors = 2;
  target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
    2, this->errors_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MetadataAction.ResizeOutput)
  return target;
}

size_t MetadataAction_ResizeOutput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MetadataAction.ResizeOutput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .MetadataAction.Error errors = 2;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->errors_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->errors(static_cast<int>(i)));
    }
    total_size += (1UL * count) + data_size;
  }

  // optional bool success = 1 [default = true];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MetadataAction_ResizeOutput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MetadataAction.ResizeOutput)
  GOOGLE_DCHECK_NE(&from, this);
  const MetadataAction_ResizeOutput* source =
      ::google::protobuf::DynamicCastToGenerated<MetadataAction_ResizeOutput>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MetadataAction.ResizeOutput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MetadataAction.ResizeOutput)
    MergeFrom(*source);
  }
}

void MetadataAction_ResizeOutput::MergeFrom(const MetadataAction_ResizeOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MetadataAction.ResizeOutput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  errors_.MergeFrom(from.errors_);
  if (from.has_success()) {
    set_success(from.success());
  }
}

void MetadataAction_ResizeOutput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MetadataAction.ResizeOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetadataAction_ResizeOutput::CopyFrom(const MetadataAction_ResizeOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MetadataAction.ResizeOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetadataAction_ResizeOutput::IsInitialized() const {
  return true;
}

void MetadataAction_ResizeOutput::Swap(MetadataAction_ResizeOutput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetadataAction_ResizeOutput::InternalSwap(MetadataAction_ResizeOutput* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  errors_.InternalSwap(&other->errors_);
  swap(success_, other->success_);
}

::google::protobuf::Metadata MetadataAction_ResizeOutput::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_metadata_2eproto);
  return ::file_level_metadata_metadata_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MetadataAction_WriteInput::InitAsDefaultInstance() {
  ::_MetadataAction_WriteInput_default_instance_._instance.get_mutable()->permissions_ = const_cast< ::Permissions*>(
      ::Permissions::internal_default_instance());
}
class MetadataAction_WriteInput::HasBitSetters {
 public:
  static void set_has_path(MetadataAction_WriteInput* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static const ::Permissions& permissions(const MetadataAction_WriteInput* msg);
  static void set_has_permissions(MetadataAction_WriteInput* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_offset(MetadataAction_WriteInput* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

const ::Permissions&
MetadataAction_WriteInput::HasBitSetters::permissions(const MetadataAction_WriteInput* msg) {
  return *msg->permissions_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MetadataAction_WriteInput::kPathFieldNumber;
const int MetadataAction_WriteInput::kPermissionsFieldNumber;
const int MetadataAction_WriteInput::kOffsetFieldNumber;
const int MetadataAction_WriteInput::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetadataAction_WriteInput::MetadataAction_WriteInput()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MetadataAction.WriteInput)
}
MetadataAction_WriteInput::MetadataAction_WriteInput(const MetadataAction_WriteInput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_path()) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.has_permissions()) {
    permissions_ = new ::Permissions(*from.permissions_);
  } else {
    permissions_ = nullptr;
  }
  offset_ = from.offset_;
  // @@protoc_insertion_point(copy_constructor:MetadataAction.WriteInput)
}

void MetadataAction_WriteInput::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MetadataAction_WriteInput_metadata_2eproto.base);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&permissions_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&offset_) -
      reinterpret_cast<char*>(&permissions_)) + sizeof(offset_));
}

MetadataAction_WriteInput::~MetadataAction_WriteInput() {
  // @@protoc_insertion_point(destructor:MetadataAction.WriteInput)
  SharedDtor();
}

void MetadataAction_WriteInput::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete permissions_;
}

void MetadataAction_WriteInput::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MetadataAction_WriteInput& MetadataAction_WriteInput::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MetadataAction_WriteInput_metadata_2eproto.base);
  return *internal_default_instance();
}


void MetadataAction_WriteInput::Clear() {
// @@protoc_insertion_point(message_clear_start:MetadataAction.WriteInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      path_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(permissions_ != nullptr);
      permissions_->Clear();
    }
  }
  offset_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MetadataAction_WriteInput::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MetadataAction_WriteInput*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required string path = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("MetadataAction.WriteInput.path");
        object = msg->mutable_path();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional .Permissions permissions = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::Permissions::_InternalParse;
        object = msg->mutable_permissions();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // required uint64 offset = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_offset(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .FilePart data = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::FilePart::_InternalParse;
          object = msg->add_data();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MetadataAction_WriteInput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MetadataAction.WriteInput)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MetadataAction.WriteInput.path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .Permissions permissions = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_permissions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 offset = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_offset(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .FilePart data = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MetadataAction.WriteInput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MetadataAction.WriteInput)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MetadataAction_WriteInput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MetadataAction.WriteInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MetadataAction.WriteInput.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // optional .Permissions permissions = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::permissions(this), output);
  }

  // required uint64 offset = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->offset(), output);
  }

  // repeated .FilePart data = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->data(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MetadataAction.WriteInput)
}

::google::protobuf::uint8* MetadataAction_WriteInput::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MetadataAction.WriteInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MetadataAction.WriteInput.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // optional .Permissions permissions = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::permissions(this), target);
  }

  // required uint64 offset = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->offset(), target);
  }

  // repeated .FilePart data = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->data(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MetadataAction.WriteInput)
  return target;
}

size_t MetadataAction_WriteInput::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MetadataAction.WriteInput)
  size_t total_size = 0;

  if (has_path()) {
    // required string path = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  if (has_offset()) {
    // required uint64 offset = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->offset());
  }

  return total_size;
}
size_t MetadataAction_WriteInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MetadataAction.WriteInput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000005) ^ 0x00000005) == 0) {  // All required fields are present.
    // required string path = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());

    // required uint64 offset = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->offset());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .FilePart data = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->data_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->data(static_cast<int>(i)));
    }
  }

  // optional .Permissions permissions = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *permissions_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MetadataAction_WriteInput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MetadataAction.WriteInput)
  GOOGLE_DCHECK_NE(&from, this);
  const MetadataAction_WriteInput* source =
      ::google::protobuf::DynamicCastToGenerated<MetadataAction_WriteInput>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MetadataAction.WriteInput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MetadataAction.WriteInput)
    MergeFrom(*source);
  }
}

void MetadataAction_WriteInput::MergeFrom(const MetadataAction_WriteInput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MetadataAction.WriteInput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_permissions()->::Permissions::MergeFrom(from.permissions());
    }
    if (cached_has_bits & 0x00000004u) {
      offset_ = from.offset_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MetadataAction_WriteInput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MetadataAction.WriteInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetadataAction_WriteInput::CopyFrom(const MetadataAction_WriteInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MetadataAction.WriteInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetadataAction_WriteInput::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->data())) return false;
  return true;
}

void MetadataAction_WriteInput::Swap(MetadataAction_WriteInput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetadataAction_WriteInput::InternalSwap(MetadataAction_WriteInput* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&data_)->InternalSwap(CastToBase(&other->data_));
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(permissions_, other->permissions_);
  swap(offset_, other->offset_);
}

::google::protobuf::Metadata MetadataAction_WriteInput::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_metadata_2eproto);
  return ::file_level_metadata_metadata_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MetadataAction_WriteOutput::InitAsDefaultInstance() {
}
class MetadataAction_WriteOutput::HasBitSetters {
 public:
  static void set_has_success(MetadataAction_WriteOutput* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MetadataAction_WriteOutput::kSuccessFieldNumber;
const int MetadataAction_WriteOutput::kErrorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetadataAction_WriteOutput::MetadataAction_WriteOutput()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MetadataAction.WriteOutput)
}
MetadataAction_WriteOutput::MetadataAction_WriteOutput(const MetadataAction_WriteOutput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      errors_(from.errors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:MetadataAction.WriteOutput)
}

void MetadataAction_WriteOutput::SharedCtor() {
  success_ = true;
}

MetadataAction_WriteOutput::~MetadataAction_WriteOutput() {
  // @@protoc_insertion_point(destructor:MetadataAction.WriteOutput)
  SharedDtor();
}

void MetadataAction_WriteOutput::SharedDtor() {
}

void MetadataAction_WriteOutput::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MetadataAction_WriteOutput& MetadataAction_WriteOutput::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MetadataAction_WriteOutput_metadata_2eproto.base);
  return *internal_default_instance();
}


void MetadataAction_WriteOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:MetadataAction.WriteOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errors_.Clear();
  success_ = true;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MetadataAction_WriteOutput::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MetadataAction_WriteOutput*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bool success = 1 [default = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_success(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .MetadataAction.Error errors = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) == 16) {
          do {
            ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
            if (!::MetadataAction_Error_IsValid(val)) {
              ::google::protobuf::internal::WriteVarint(2, val, msg->mutable_unknown_fields());
              break;
            }
            msg->add_errors(static_cast<::MetadataAction_Error>(val));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 16 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetEnumValidator(::MetadataAction_Error_IsValid, msg->mutable_unknown_fields(), 2);
        parser_till_end = ::google::protobuf::internal::PackedValidEnumParser;
        object = msg->mutable_errors();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MetadataAction_WriteOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MetadataAction.WriteOutput)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool success = 1 [default = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_success(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .MetadataAction.Error errors = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MetadataAction_Error_IsValid(value)) {
            add_errors(static_cast< ::MetadataAction_Error >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast<::google::protobuf::uint64>(value));
          }
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 2,
                 ::MetadataAction_Error_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_errors())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MetadataAction.WriteOutput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MetadataAction.WriteOutput)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MetadataAction_WriteOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MetadataAction.WriteOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1 [default = true];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // repeated .MetadataAction.Error errors = 2;
  for (int i = 0, n = this->errors_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->errors(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MetadataAction.WriteOutput)
}

::google::protobuf::uint8* MetadataAction_WriteOutput::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MetadataAction.WriteOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1 [default = true];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // repeated .MetadataAction.Error errors = 2;
  target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
    2, this->errors_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MetadataAction.WriteOutput)
  return target;
}

size_t MetadataAction_WriteOutput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MetadataAction.WriteOutput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .MetadataAction.Error errors = 2;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->errors_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->errors(static_cast<int>(i)));
    }
    total_size += (1UL * count) + data_size;
  }

  // optional bool success = 1 [default = true];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MetadataAction_WriteOutput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MetadataAction.WriteOutput)
  GOOGLE_DCHECK_NE(&from, this);
  const MetadataAction_WriteOutput* source =
      ::google::protobuf::DynamicCastToGenerated<MetadataAction_WriteOutput>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MetadataAction.WriteOutput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MetadataAction.WriteOutput)
    MergeFrom(*source);
  }
}

void MetadataAction_WriteOutput::MergeFrom(const MetadataAction_WriteOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MetadataAction.WriteOutput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  errors_.MergeFrom(from.errors_);
  if (from.has_success()) {
    set_success(from.success());
  }
}

void MetadataAction_WriteOutput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MetadataAction.WriteOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetadataAction_WriteOutput::CopyFrom(const MetadataAction_WriteOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MetadataAction.WriteOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetadataAction_WriteOutput::IsInitialized() const {
  return true;
}

void MetadataAction_WriteOutput::Swap(MetadataAction_WriteOutput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetadataAction_WriteOutput::InternalSwap(MetadataAction_WriteOutput* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  errors_.InternalSwap(&other->errors_);
  swap(success_, other->success_);
}

::google::protobuf::Metadata MetadataAction_WriteOutput::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_metadata_2eproto);
  return ::file_level_metadata_metadata_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MetadataAction_AppendInput::InitAsDefaultInstance() {
  ::_MetadataAction_AppendInput_default_instance_._instance.get_mutable()->permissions_ = const_cast< ::Permissions*>(
      ::Permissions::internal_default_instance());
}
class MetadataAction_AppendInput::HasBitSetters {
 public:
  static void set_has_path(MetadataAction_AppendInput* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static const ::Permissions& permissions(const MetadataAction_AppendInput* msg);
  static void set_has_permissions(MetadataAction_AppendInput* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

const ::Permissions&
MetadataAction_AppendInput::HasBitSetters::permissions(const MetadataAction_AppendInput* msg) {
  return *msg->permissions_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MetadataAction_AppendInput::kPathFieldNumber;
const int MetadataAction_AppendInput::kPermissionsFieldNumber;
const int MetadataAction_AppendInput::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetadataAction_AppendInput::MetadataAction_AppendInput()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MetadataAction.AppendInput)
}
MetadataAction_AppendInput::MetadataAction_AppendInput(const MetadataAction_AppendInput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_path()) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.has_permissions()) {
    permissions_ = new ::Permissions(*from.permissions_);
  } else {
    permissions_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:MetadataAction.AppendInput)
}

void MetadataAction_AppendInput::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MetadataAction_AppendInput_metadata_2eproto.base);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  permissions_ = nullptr;
}

MetadataAction_AppendInput::~MetadataAction_AppendInput() {
  // @@protoc_insertion_point(destructor:MetadataAction.AppendInput)
  SharedDtor();
}

void MetadataAction_AppendInput::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete permissions_;
}

void MetadataAction_AppendInput::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MetadataAction_AppendInput& MetadataAction_AppendInput::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MetadataAction_AppendInput_metadata_2eproto.base);
  return *internal_default_instance();
}


void MetadataAction_AppendInput::Clear() {
// @@protoc_insertion_point(message_clear_start:MetadataAction.AppendInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      path_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(permissions_ != nullptr);
      permissions_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MetadataAction_AppendInput::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MetadataAction_AppendInput*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required string path = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("MetadataAction.AppendInput.path");
        object = msg->mutable_path();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional .Permissions permissions = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::Permissions::_InternalParse;
        object = msg->mutable_permissions();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // repeated .FilePart data = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::FilePart::_InternalParse;
          object = msg->add_data();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MetadataAction_AppendInput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MetadataAction.AppendInput)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MetadataAction.AppendInput.path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .Permissions permissions = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_permissions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .FilePart data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MetadataAction.AppendInput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MetadataAction.AppendInput)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MetadataAction_AppendInput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MetadataAction.AppendInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MetadataAction.AppendInput.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // optional .Permissions permissions = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::permissions(this), output);
  }

  // repeated .FilePart data = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->data(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MetadataAction.AppendInput)
}

::google::protobuf::uint8* MetadataAction_AppendInput::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MetadataAction.AppendInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MetadataAction.AppendInput.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // optional .Permissions permissions = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::permissions(this), target);
  }

  // repeated .FilePart data = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->data(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MetadataAction.AppendInput)
  return target;
}

size_t MetadataAction_AppendInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MetadataAction.AppendInput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string path = 1;
  if (has_path()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .FilePart data = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->data_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->data(static_cast<int>(i)));
    }
  }

  // optional .Permissions permissions = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *permissions_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MetadataAction_AppendInput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MetadataAction.AppendInput)
  GOOGLE_DCHECK_NE(&from, this);
  const MetadataAction_AppendInput* source =
      ::google::protobuf::DynamicCastToGenerated<MetadataAction_AppendInput>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MetadataAction.AppendInput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MetadataAction.AppendInput)
    MergeFrom(*source);
  }
}

void MetadataAction_AppendInput::MergeFrom(const MetadataAction_AppendInput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MetadataAction.AppendInput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_permissions()->::Permissions::MergeFrom(from.permissions());
    }
  }
}

void MetadataAction_AppendInput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MetadataAction.AppendInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetadataAction_AppendInput::CopyFrom(const MetadataAction_AppendInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MetadataAction.AppendInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetadataAction_AppendInput::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->data())) return false;
  return true;
}

void MetadataAction_AppendInput::Swap(MetadataAction_AppendInput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetadataAction_AppendInput::InternalSwap(MetadataAction_AppendInput* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&data_)->InternalSwap(CastToBase(&other->data_));
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(permissions_, other->permissions_);
}

::google::protobuf::Metadata MetadataAction_AppendInput::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_metadata_2eproto);
  return ::file_level_metadata_metadata_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MetadataAction_AppendOutput::InitAsDefaultInstance() {
}
class MetadataAction_AppendOutput::HasBitSetters {
 public:
  static void set_has_success(MetadataAction_AppendOutput* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MetadataAction_AppendOutput::kSuccessFieldNumber;
const int MetadataAction_AppendOutput::kErrorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetadataAction_AppendOutput::MetadataAction_AppendOutput()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MetadataAction.AppendOutput)
}
MetadataAction_AppendOutput::MetadataAction_AppendOutput(const MetadataAction_AppendOutput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      errors_(from.errors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:MetadataAction.AppendOutput)
}

void MetadataAction_AppendOutput::SharedCtor() {
  success_ = true;
}

MetadataAction_AppendOutput::~MetadataAction_AppendOutput() {
  // @@protoc_insertion_point(destructor:MetadataAction.AppendOutput)
  SharedDtor();
}

void MetadataAction_AppendOutput::SharedDtor() {
}

void MetadataAction_AppendOutput::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MetadataAction_AppendOutput& MetadataAction_AppendOutput::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MetadataAction_AppendOutput_metadata_2eproto.base);
  return *internal_default_instance();
}


void MetadataAction_AppendOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:MetadataAction.AppendOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errors_.Clear();
  success_ = true;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MetadataAction_AppendOutput::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MetadataAction_AppendOutput*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bool success = 1 [default = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_success(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .MetadataAction.Error errors = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) == 16) {
          do {
            ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
            if (!::MetadataAction_Error_IsValid(val)) {
              ::google::protobuf::internal::WriteVarint(2, val, msg->mutable_unknown_fields());
              break;
            }
            msg->add_errors(static_cast<::MetadataAction_Error>(val));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 16 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetEnumValidator(::MetadataAction_Error_IsValid, msg->mutable_unknown_fields(), 2);
        parser_till_end = ::google::protobuf::internal::PackedValidEnumParser;
        object = msg->mutable_errors();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MetadataAction_AppendOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MetadataAction.AppendOutput)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool success = 1 [default = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_success(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .MetadataAction.Error errors = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MetadataAction_Error_IsValid(value)) {
            add_errors(static_cast< ::MetadataAction_Error >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast<::google::protobuf::uint64>(value));
          }
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 2,
                 ::MetadataAction_Error_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_errors())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MetadataAction.AppendOutput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MetadataAction.AppendOutput)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MetadataAction_AppendOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MetadataAction.AppendOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1 [default = true];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // repeated .MetadataAction.Error errors = 2;
  for (int i = 0, n = this->errors_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->errors(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MetadataAction.AppendOutput)
}

::google::protobuf::uint8* MetadataAction_AppendOutput::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MetadataAction.AppendOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1 [default = true];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // repeated .MetadataAction.Error errors = 2;
  target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
    2, this->errors_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MetadataAction.AppendOutput)
  return target;
}

size_t MetadataAction_AppendOutput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MetadataAction.AppendOutput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .MetadataAction.Error errors = 2;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->errors_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->errors(static_cast<int>(i)));
    }
    total_size += (1UL * count) + data_size;
  }

  // optional bool success = 1 [default = true];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MetadataAction_AppendOutput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MetadataAction.AppendOutput)
  GOOGLE_DCHECK_NE(&from, this);
  const MetadataAction_AppendOutput* source =
      ::google::protobuf::DynamicCastToGenerated<MetadataAction_AppendOutput>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MetadataAction.AppendOutput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MetadataAction.AppendOutput)
    MergeFrom(*source);
  }
}

void MetadataAction_AppendOutput::MergeFrom(const MetadataAction_AppendOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MetadataAction.AppendOutput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  errors_.MergeFrom(from.errors_);
  if (from.has_success()) {
    set_success(from.success());
  }
}

void MetadataAction_AppendOutput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MetadataAction.AppendOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetadataAction_AppendOutput::CopyFrom(const MetadataAction_AppendOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MetadataAction.AppendOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetadataAction_AppendOutput::IsInitialized() const {
  return true;
}

void MetadataAction_AppendOutput::Swap(MetadataAction_AppendOutput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetadataAction_AppendOutput::InternalSwap(MetadataAction_AppendOutput* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  errors_.InternalSwap(&other->errors_);
  swap(success_, other->success_);
}

::google::protobuf::Metadata MetadataAction_AppendOutput::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_metadata_2eproto);
  return ::file_level_metadata_metadata_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MetadataAction_ChangePermissionsInput::InitAsDefaultInstance() {
  ::_MetadataAction_ChangePermissionsInput_default_instance_._instance.get_mutable()->permissions_ = const_cast< ::Permissions*>(
      ::Permissions::internal_default_instance());
  ::_MetadataAction_ChangePermissionsInput_default_instance_._instance.get_mutable()->new_permissions_ = const_cast< ::Permissions*>(
      ::Permissions::internal_default_instance());
}
class MetadataAction_ChangePermissionsInput::HasBitSetters {
 public:
  static void set_has_path(MetadataAction_ChangePermissionsInput* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static const ::Permissions& permissions(const MetadataAction_ChangePermissionsInput* msg);
  static void set_has_permissions(MetadataAction_ChangePermissionsInput* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static const ::Permissions& new_permissions(const MetadataAction_ChangePermissionsInput* msg);
  static void set_has_new_permissions(MetadataAction_ChangePermissionsInput* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

const ::Permissions&
MetadataAction_ChangePermissionsInput::HasBitSetters::permissions(const MetadataAction_ChangePermissionsInput* msg) {
  return *msg->permissions_;
}
const ::Permissions&
MetadataAction_ChangePermissionsInput::HasBitSetters::new_permissions(const MetadataAction_ChangePermissionsInput* msg) {
  return *msg->new_permissions_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MetadataAction_ChangePermissionsInput::kPathFieldNumber;
const int MetadataAction_ChangePermissionsInput::kPermissionsFieldNumber;
const int MetadataAction_ChangePermissionsInput::kNewPermissionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetadataAction_ChangePermissionsInput::MetadataAction_ChangePermissionsInput()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MetadataAction.ChangePermissionsInput)
}
MetadataAction_ChangePermissionsInput::MetadataAction_ChangePermissionsInput(const MetadataAction_ChangePermissionsInput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_path()) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.has_permissions()) {
    permissions_ = new ::Permissions(*from.permissions_);
  } else {
    permissions_ = nullptr;
  }
  if (from.has_new_permissions()) {
    new_permissions_ = new ::Permissions(*from.new_permissions_);
  } else {
    new_permissions_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:MetadataAction.ChangePermissionsInput)
}

void MetadataAction_ChangePermissionsInput::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MetadataAction_ChangePermissionsInput_metadata_2eproto.base);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&permissions_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&new_permissions_) -
      reinterpret_cast<char*>(&permissions_)) + sizeof(new_permissions_));
}

MetadataAction_ChangePermissionsInput::~MetadataAction_ChangePermissionsInput() {
  // @@protoc_insertion_point(destructor:MetadataAction.ChangePermissionsInput)
  SharedDtor();
}

void MetadataAction_ChangePermissionsInput::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete permissions_;
  if (this != internal_default_instance()) delete new_permissions_;
}

void MetadataAction_ChangePermissionsInput::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MetadataAction_ChangePermissionsInput& MetadataAction_ChangePermissionsInput::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MetadataAction_ChangePermissionsInput_metadata_2eproto.base);
  return *internal_default_instance();
}


void MetadataAction_ChangePermissionsInput::Clear() {
// @@protoc_insertion_point(message_clear_start:MetadataAction.ChangePermissionsInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      path_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(permissions_ != nullptr);
      permissions_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(new_permissions_ != nullptr);
      new_permissions_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MetadataAction_ChangePermissionsInput::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MetadataAction_ChangePermissionsInput*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required string path = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("MetadataAction.ChangePermissionsInput.path");
        object = msg->mutable_path();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional .Permissions permissions = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::Permissions::_InternalParse;
        object = msg->mutable_permissions();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // required .Permissions new_permissions = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::Permissions::_InternalParse;
        object = msg->mutable_new_permissions();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MetadataAction_ChangePermissionsInput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MetadataAction.ChangePermissionsInput)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MetadataAction.ChangePermissionsInput.path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .Permissions permissions = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_permissions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .Permissions new_permissions = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_new_permissions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MetadataAction.ChangePermissionsInput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MetadataAction.ChangePermissionsInput)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MetadataAction_ChangePermissionsInput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MetadataAction.ChangePermissionsInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MetadataAction.ChangePermissionsInput.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // optional .Permissions permissions = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::permissions(this), output);
  }

  // required .Permissions new_permissions = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::new_permissions(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MetadataAction.ChangePermissionsInput)
}

::google::protobuf::uint8* MetadataAction_ChangePermissionsInput::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MetadataAction.ChangePermissionsInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MetadataAction.ChangePermissionsInput.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // optional .Permissions permissions = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::permissions(this), target);
  }

  // required .Permissions new_permissions = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::new_permissions(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MetadataAction.ChangePermissionsInput)
  return target;
}

size_t MetadataAction_ChangePermissionsInput::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MetadataAction.ChangePermissionsInput)
  size_t total_size = 0;

  if (has_path()) {
    // required string path = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  if (has_new_permissions()) {
    // required .Permissions new_permissions = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *new_permissions_);
  }

  return total_size;
}
size_t MetadataAction_ChangePermissionsInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MetadataAction.ChangePermissionsInput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000005) ^ 0x00000005) == 0) {  // All required fields are present.
    // required string path = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());

    // required .Permissions new_permissions = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *new_permissions_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .Permissions permissions = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *permissions_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MetadataAction_ChangePermissionsInput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MetadataAction.ChangePermissionsInput)
  GOOGLE_DCHECK_NE(&from, this);
  const MetadataAction_ChangePermissionsInput* source =
      ::google::protobuf::DynamicCastToGenerated<MetadataAction_ChangePermissionsInput>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MetadataAction.ChangePermissionsInput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MetadataAction.ChangePermissionsInput)
    MergeFrom(*source);
  }
}

void MetadataAction_ChangePermissionsInput::MergeFrom(const MetadataAction_ChangePermissionsInput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MetadataAction.ChangePermissionsInput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_permissions()->::Permissions::MergeFrom(from.permissions());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_new_permissions()->::Permissions::MergeFrom(from.new_permissions());
    }
  }
}

void MetadataAction_ChangePermissionsInput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MetadataAction.ChangePermissionsInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetadataAction_ChangePermissionsInput::CopyFrom(const MetadataAction_ChangePermissionsInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MetadataAction.ChangePermissionsInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetadataAction_ChangePermissionsInput::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;
  return true;
}

void MetadataAction_ChangePermissionsInput::Swap(MetadataAction_ChangePermissionsInput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetadataAction_ChangePermissionsInput::InternalSwap(MetadataAction_ChangePermissionsInput* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(permissions_, other->permissions_);
  swap(new_permissions_, other->new_permissions_);
}

::google::protobuf::Metadata MetadataAction_ChangePermissionsInput::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_metadata_2eproto);
  return ::file_level_metadata_metadata_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MetadataAction_ChangePermissionsOutput::InitAsDefaultInstance() {
}
class MetadataAction_ChangePermissionsOutput::HasBitSetters {
 public:
  static void set_has_success(MetadataAction_ChangePermissionsOutput* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MetadataAction_ChangePermissionsOutput::kSuccessFieldNumber;
const int MetadataAction_ChangePermissionsOutput::kErrorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetadataAction_ChangePermissionsOutput::MetadataAction_ChangePermissionsOutput()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MetadataAction.ChangePermissionsOutput)
}
MetadataAction_ChangePermissionsOutput::MetadataAction_ChangePermissionsOutput(const MetadataAction_ChangePermissionsOutput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      errors_(from.errors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:MetadataAction.ChangePermissionsOutput)
}

void MetadataAction_ChangePermissionsOutput::SharedCtor() {
  success_ = true;
}

MetadataAction_ChangePermissionsOutput::~MetadataAction_ChangePermissionsOutput() {
  // @@protoc_insertion_point(destructor:MetadataAction.ChangePermissionsOutput)
  SharedDtor();
}

void MetadataAction_ChangePermissionsOutput::SharedDtor() {
}

void MetadataAction_ChangePermissionsOutput::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MetadataAction_ChangePermissionsOutput& MetadataAction_ChangePermissionsOutput::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MetadataAction_ChangePermissionsOutput_metadata_2eproto.base);
  return *internal_default_instance();
}


void MetadataAction_ChangePermissionsOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:MetadataAction.ChangePermissionsOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errors_.Clear();
  success_ = true;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MetadataAction_ChangePermissionsOutput::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MetadataAction_ChangePermissionsOutput*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bool success = 1 [default = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_success(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .MetadataAction.Error errors = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) == 16) {
          do {
            ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
            if (!::MetadataAction_Error_IsValid(val)) {
              ::google::protobuf::internal::WriteVarint(2, val, msg->mutable_unknown_fields());
              break;
            }
            msg->add_errors(static_cast<::MetadataAction_Error>(val));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 16 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetEnumValidator(::MetadataAction_Error_IsValid, msg->mutable_unknown_fields(), 2);
        parser_till_end = ::google::protobuf::internal::PackedValidEnumParser;
        object = msg->mutable_errors();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MetadataAction_ChangePermissionsOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MetadataAction.ChangePermissionsOutput)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool success = 1 [default = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_success(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .MetadataAction.Error errors = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MetadataAction_Error_IsValid(value)) {
            add_errors(static_cast< ::MetadataAction_Error >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast<::google::protobuf::uint64>(value));
          }
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 2,
                 ::MetadataAction_Error_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_errors())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MetadataAction.ChangePermissionsOutput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MetadataAction.ChangePermissionsOutput)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MetadataAction_ChangePermissionsOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MetadataAction.ChangePermissionsOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1 [default = true];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // repeated .MetadataAction.Error errors = 2;
  for (int i = 0, n = this->errors_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->errors(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MetadataAction.ChangePermissionsOutput)
}

::google::protobuf::uint8* MetadataAction_ChangePermissionsOutput::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MetadataAction.ChangePermissionsOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1 [default = true];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // repeated .MetadataAction.Error errors = 2;
  target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
    2, this->errors_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MetadataAction.ChangePermissionsOutput)
  return target;
}

size_t MetadataAction_ChangePermissionsOutput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MetadataAction.ChangePermissionsOutput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .MetadataAction.Error errors = 2;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->errors_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->errors(static_cast<int>(i)));
    }
    total_size += (1UL * count) + data_size;
  }

  // optional bool success = 1 [default = true];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MetadataAction_ChangePermissionsOutput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MetadataAction.ChangePermissionsOutput)
  GOOGLE_DCHECK_NE(&from, this);
  const MetadataAction_ChangePermissionsOutput* source =
      ::google::protobuf::DynamicCastToGenerated<MetadataAction_ChangePermissionsOutput>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MetadataAction.ChangePermissionsOutput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MetadataAction.ChangePermissionsOutput)
    MergeFrom(*source);
  }
}

void MetadataAction_ChangePermissionsOutput::MergeFrom(const MetadataAction_ChangePermissionsOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MetadataAction.ChangePermissionsOutput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  errors_.MergeFrom(from.errors_);
  if (from.has_success()) {
    set_success(from.success());
  }
}

void MetadataAction_ChangePermissionsOutput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MetadataAction.ChangePermissionsOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetadataAction_ChangePermissionsOutput::CopyFrom(const MetadataAction_ChangePermissionsOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MetadataAction.ChangePermissionsOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetadataAction_ChangePermissionsOutput::IsInitialized() const {
  return true;
}

void MetadataAction_ChangePermissionsOutput::Swap(MetadataAction_ChangePermissionsOutput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetadataAction_ChangePermissionsOutput::InternalSwap(MetadataAction_ChangePermissionsOutput* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  errors_.InternalSwap(&other->errors_);
  swap(success_, other->success_);
}

::google::protobuf::Metadata MetadataAction_ChangePermissionsOutput::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_metadata_2eproto);
  return ::file_level_metadata_metadata_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MetadataAction::InitAsDefaultInstance() {
}
class MetadataAction::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetadataAction::MetadataAction()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MetadataAction)
}
MetadataAction::MetadataAction(const MetadataAction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:MetadataAction)
}

void MetadataAction::SharedCtor() {
}

MetadataAction::~MetadataAction() {
  // @@protoc_insertion_point(destructor:MetadataAction)
  SharedDtor();
}

void MetadataAction::SharedDtor() {
}

void MetadataAction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MetadataAction& MetadataAction::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MetadataAction_metadata_2eproto.base);
  return *internal_default_instance();
}


void MetadataAction::Clear() {
// @@protoc_insertion_point(message_clear_start:MetadataAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MetadataAction::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MetadataAction*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MetadataAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MetadataAction)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:MetadataAction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MetadataAction)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MetadataAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MetadataAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MetadataAction)
}

::google::protobuf::uint8* MetadataAction::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MetadataAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MetadataAction)
  return target;
}

size_t MetadataAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MetadataAction)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MetadataAction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MetadataAction)
  GOOGLE_DCHECK_NE(&from, this);
  const MetadataAction* source =
      ::google::protobuf::DynamicCastToGenerated<MetadataAction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MetadataAction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MetadataAction)
    MergeFrom(*source);
  }
}

void MetadataAction::MergeFrom(const MetadataAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MetadataAction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MetadataAction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MetadataAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetadataAction::CopyFrom(const MetadataAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MetadataAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetadataAction::IsInitialized() const {
  return true;
}

void MetadataAction::Swap(MetadataAction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetadataAction::InternalSwap(MetadataAction* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata MetadataAction::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_metadata_2eproto);
  return ::file_level_metadata_metadata_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::Permissions* Arena::CreateMaybeMessage< ::Permissions >(Arena* arena) {
  return Arena::CreateInternal< ::Permissions >(arena);
}
template<> PROTOBUF_NOINLINE ::FilePart* Arena::CreateMaybeMessage< ::FilePart >(Arena* arena) {
  return Arena::CreateInternal< ::FilePart >(arena);
}
template<> PROTOBUF_NOINLINE ::MetadataEntry* Arena::CreateMaybeMessage< ::MetadataEntry >(Arena* arena) {
  return Arena::CreateInternal< ::MetadataEntry >(arena);
}
template<> PROTOBUF_NOINLINE ::MetadataAction_CreateFileInput* Arena::CreateMaybeMessage< ::MetadataAction_CreateFileInput >(Arena* arena) {
  return Arena::CreateInternal< ::MetadataAction_CreateFileInput >(arena);
}
template<> PROTOBUF_NOINLINE ::MetadataAction_CreateFileOutput* Arena::CreateMaybeMessage< ::MetadataAction_CreateFileOutput >(Arena* arena) {
  return Arena::CreateInternal< ::MetadataAction_CreateFileOutput >(arena);
}
template<> PROTOBUF_NOINLINE ::MetadataAction_EraseInput* Arena::CreateMaybeMessage< ::MetadataAction_EraseInput >(Arena* arena) {
  return Arena::CreateInternal< ::MetadataAction_EraseInput >(arena);
}
template<> PROTOBUF_NOINLINE ::MetadataAction_EraseOutput* Arena::CreateMaybeMessage< ::MetadataAction_EraseOutput >(Arena* arena) {
  return Arena::CreateInternal< ::MetadataAction_EraseOutput >(arena);
}
template<> PROTOBUF_NOINLINE ::MetadataAction_CopyInput* Arena::CreateMaybeMessage< ::MetadataAction_CopyInput >(Arena* arena) {
  return Arena::CreateInternal< ::MetadataAction_CopyInput >(arena);
}
template<> PROTOBUF_NOINLINE ::MetadataAction_CopyOutput* Arena::CreateMaybeMessage< ::MetadataAction_CopyOutput >(Arena* arena) {
  return Arena::CreateInternal< ::MetadataAction_CopyOutput >(arena);
}
template<> PROTOBUF_NOINLINE ::MetadataAction_RenameInput* Arena::CreateMaybeMessage< ::MetadataAction_RenameInput >(Arena* arena) {
  return Arena::CreateInternal< ::MetadataAction_RenameInput >(arena);
}
template<> PROTOBUF_NOINLINE ::MetadataAction_RenameOutput* Arena::CreateMaybeMessage< ::MetadataAction_RenameOutput >(Arena* arena) {
  return Arena::CreateInternal< ::MetadataAction_RenameOutput >(arena);
}
template<> PROTOBUF_NOINLINE ::MetadataAction_LookupInput* Arena::CreateMaybeMessage< ::MetadataAction_LookupInput >(Arena* arena) {
  return Arena::CreateInternal< ::MetadataAction_LookupInput >(arena);
}
template<> PROTOBUF_NOINLINE ::MetadataAction_LookupOutput* Arena::CreateMaybeMessage< ::MetadataAction_LookupOutput >(Arena* arena) {
  return Arena::CreateInternal< ::MetadataAction_LookupOutput >(arena);
}
template<> PROTOBUF_NOINLINE ::MetadataAction_Tree_LookupInput* Arena::CreateMaybeMessage< ::MetadataAction_Tree_LookupInput >(Arena* arena) {
  return Arena::CreateInternal< ::MetadataAction_Tree_LookupInput >(arena);
}
template<> PROTOBUF_NOINLINE ::MetadataAction_Tree_LookupOutput* Arena::CreateMaybeMessage< ::MetadataAction_Tree_LookupOutput >(Arena* arena) {
  return Arena::CreateInternal< ::MetadataAction_Tree_LookupOutput >(arena);
}
template<> PROTOBUF_NOINLINE ::MetadataAction_ResizeInput* Arena::CreateMaybeMessage< ::MetadataAction_ResizeInput >(Arena* arena) {
  return Arena::CreateInternal< ::MetadataAction_ResizeInput >(arena);
}
template<> PROTOBUF_NOINLINE ::MetadataAction_ResizeOutput* Arena::CreateMaybeMessage< ::MetadataAction_ResizeOutput >(Arena* arena) {
  return Arena::CreateInternal< ::MetadataAction_ResizeOutput >(arena);
}
template<> PROTOBUF_NOINLINE ::MetadataAction_WriteInput* Arena::CreateMaybeMessage< ::MetadataAction_WriteInput >(Arena* arena) {
  return Arena::CreateInternal< ::MetadataAction_WriteInput >(arena);
}
template<> PROTOBUF_NOINLINE ::MetadataAction_WriteOutput* Arena::CreateMaybeMessage< ::MetadataAction_WriteOutput >(Arena* arena) {
  return Arena::CreateInternal< ::MetadataAction_WriteOutput >(arena);
}
template<> PROTOBUF_NOINLINE ::MetadataAction_AppendInput* Arena::CreateMaybeMessage< ::MetadataAction_AppendInput >(Arena* arena) {
  return Arena::CreateInternal< ::MetadataAction_AppendInput >(arena);
}
template<> PROTOBUF_NOINLINE ::MetadataAction_AppendOutput* Arena::CreateMaybeMessage< ::MetadataAction_AppendOutput >(Arena* arena) {
  return Arena::CreateInternal< ::MetadataAction_AppendOutput >(arena);
}
template<> PROTOBUF_NOINLINE ::MetadataAction_ChangePermissionsInput* Arena::CreateMaybeMessage< ::MetadataAction_ChangePermissionsInput >(Arena* arena) {
  return Arena::CreateInternal< ::MetadataAction_ChangePermissionsInput >(arena);
}
template<> PROTOBUF_NOINLINE ::MetadataAction_ChangePermissionsOutput* Arena::CreateMaybeMessage< ::MetadataAction_ChangePermissionsOutput >(Arena* arena) {
  return Arena::CreateInternal< ::MetadataAction_ChangePermissionsOutput >(arena);
}
template<> PROTOBUF_NOINLINE ::MetadataAction* Arena::CreateMaybeMessage< ::MetadataAction >(Arena* arena) {
  return Arena::CreateInternal< ::MetadataAction >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
