// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: calvinfs_config.proto

#include "calvinfs_config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_calvinfs_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CalvinFSConfig_MapEntry_calvinfs_5fconfig_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_calvinfs_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CalvinFSConfig_ReplicaParticipant_calvinfs_5fconfig_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_calvinfs_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MapProto_Entry_calvinfs_5fconfig_2eproto;
class CalvinFSConfig_ReplicaParticipantDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CalvinFSConfig_ReplicaParticipant> _instance;
} _CalvinFSConfig_ReplicaParticipant_default_instance_;
class CalvinFSConfig_MapEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CalvinFSConfig_MapEntry> _instance;
} _CalvinFSConfig_MapEntry_default_instance_;
class CalvinFSConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CalvinFSConfig> _instance;
} _CalvinFSConfig_default_instance_;
class MapProto_EntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MapProto_Entry> _instance;
} _MapProto_Entry_default_instance_;
class MapProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MapProto> _instance;
} _MapProto_default_instance_;
static void InitDefaultsCalvinFSConfig_ReplicaParticipant_calvinfs_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CalvinFSConfig_ReplicaParticipant_default_instance_;
    new (ptr) ::CalvinFSConfig_ReplicaParticipant();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CalvinFSConfig_ReplicaParticipant::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CalvinFSConfig_ReplicaParticipant_calvinfs_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCalvinFSConfig_ReplicaParticipant_calvinfs_5fconfig_2eproto}, {}};

static void InitDefaultsCalvinFSConfig_MapEntry_calvinfs_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CalvinFSConfig_MapEntry_default_instance_;
    new (ptr) ::CalvinFSConfig_MapEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CalvinFSConfig_MapEntry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CalvinFSConfig_MapEntry_calvinfs_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCalvinFSConfig_MapEntry_calvinfs_5fconfig_2eproto}, {}};

static void InitDefaultsCalvinFSConfig_calvinfs_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CalvinFSConfig_default_instance_;
    new (ptr) ::CalvinFSConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CalvinFSConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CalvinFSConfig_calvinfs_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCalvinFSConfig_calvinfs_5fconfig_2eproto}, {
      &scc_info_CalvinFSConfig_ReplicaParticipant_calvinfs_5fconfig_2eproto.base,
      &scc_info_CalvinFSConfig_MapEntry_calvinfs_5fconfig_2eproto.base,}};

static void InitDefaultsMapProto_Entry_calvinfs_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MapProto_Entry_default_instance_;
    new (ptr) ::MapProto_Entry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MapProto_Entry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MapProto_Entry_calvinfs_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMapProto_Entry_calvinfs_5fconfig_2eproto}, {}};

static void InitDefaultsMapProto_calvinfs_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MapProto_default_instance_;
    new (ptr) ::MapProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MapProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MapProto_calvinfs_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMapProto_calvinfs_5fconfig_2eproto}, {
      &scc_info_MapProto_Entry_calvinfs_5fconfig_2eproto.base,}};

void InitDefaults_calvinfs_5fconfig_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_CalvinFSConfig_ReplicaParticipant_calvinfs_5fconfig_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CalvinFSConfig_MapEntry_calvinfs_5fconfig_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CalvinFSConfig_calvinfs_5fconfig_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MapProto_Entry_calvinfs_5fconfig_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MapProto_calvinfs_5fconfig_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_calvinfs_5fconfig_2eproto[5];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_calvinfs_5fconfig_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_calvinfs_5fconfig_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_calvinfs_5fconfig_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::CalvinFSConfig_ReplicaParticipant, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CalvinFSConfig_ReplicaParticipant, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CalvinFSConfig_ReplicaParticipant, machine_),
  PROTOBUF_FIELD_OFFSET(::CalvinFSConfig_ReplicaParticipant, replica_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CalvinFSConfig_MapEntry, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CalvinFSConfig_MapEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CalvinFSConfig_MapEntry, id_),
  PROTOBUF_FIELD_OFFSET(::CalvinFSConfig_MapEntry, replica_),
  PROTOBUF_FIELD_OFFSET(::CalvinFSConfig_MapEntry, machine_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::CalvinFSConfig, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CalvinFSConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CalvinFSConfig, block_replication_factor_),
  PROTOBUF_FIELD_OFFSET(::CalvinFSConfig, metadata_replication_factor_),
  PROTOBUF_FIELD_OFFSET(::CalvinFSConfig, blucket_count_),
  PROTOBUF_FIELD_OFFSET(::CalvinFSConfig, metadata_shard_count_),
  PROTOBUF_FIELD_OFFSET(::CalvinFSConfig, replicas_),
  PROTOBUF_FIELD_OFFSET(::CalvinFSConfig, bluckets_),
  PROTOBUF_FIELD_OFFSET(::CalvinFSConfig, metadata_shards_),
  0,
  1,
  2,
  3,
  ~0u,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::MapProto_Entry, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::MapProto_Entry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MapProto_Entry, key_),
  PROTOBUF_FIELD_OFFSET(::MapProto_Entry, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::MapProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::MapProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MapProto, entries_),
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::CalvinFSConfig_ReplicaParticipant)},
  { 9, 17, sizeof(::CalvinFSConfig_MapEntry)},
  { 20, 32, sizeof(::CalvinFSConfig)},
  { 39, 46, sizeof(::MapProto_Entry)},
  { 48, 54, sizeof(::MapProto)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CalvinFSConfig_ReplicaParticipant_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CalvinFSConfig_MapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CalvinFSConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MapProto_Entry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MapProto_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_calvinfs_5fconfig_2eproto = {
  {}, AddDescriptors_calvinfs_5fconfig_2eproto, "calvinfs_config.proto", schemas,
  file_default_instances, TableStruct_calvinfs_5fconfig_2eproto::offsets,
  file_level_metadata_calvinfs_5fconfig_2eproto, 5, file_level_enum_descriptors_calvinfs_5fconfig_2eproto, file_level_service_descriptors_calvinfs_5fconfig_2eproto,
};

const char descriptor_table_protodef_calvinfs_5fconfig_2eproto[] =
  "\n\025calvinfs_config.proto\"\231\003\n\016CalvinFSConf"
  "ig\022 \n\030block_replication_factor\030\001 \001(\004\022#\n\033"
  "metadata_replication_factor\030\002 \001(\004\022\025\n\rblu"
  "cket_count\030\003 \001(\004\022\034\n\024metadata_shard_count"
  "\030\004 \001(\004\0224\n\010replicas\030\013 \003(\0132\".CalvinFSConfi"
  "g.ReplicaParticipant\022*\n\010bluckets\030\025 \003(\0132\030"
  ".CalvinFSConfig.MapEntry\0221\n\017metadata_sha"
  "rds\030\037 \003(\0132\030.CalvinFSConfig.MapEntry\0326\n\022R"
  "eplicaParticipant\022\017\n\007machine\030\001 \001(\004\022\017\n\007re"
  "plica\030\002 \001(\004\032>\n\010MapEntry\022\n\n\002id\030\001 \001(\004\022\022\n\007r"
  "eplica\030\002 \001(\004:\0010\022\022\n\007machine\030\003 \001(\004:\0010\"Q\n\010M"
  "apProto\022 \n\007entries\030\001 \003(\0132\017.MapProto.Entr"
  "y\032#\n\005Entry\022\013\n\003key\030\001 \001(\014\022\r\n\005value\030\002 \001(\014"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_calvinfs_5fconfig_2eproto = {
  false, InitDefaults_calvinfs_5fconfig_2eproto, 
  descriptor_table_protodef_calvinfs_5fconfig_2eproto,
  "calvinfs_config.proto", &assign_descriptors_table_calvinfs_5fconfig_2eproto, 518,
};

void AddDescriptors_calvinfs_5fconfig_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_calvinfs_5fconfig_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_calvinfs_5fconfig_2eproto = []() { AddDescriptors_calvinfs_5fconfig_2eproto(); return true; }();

// ===================================================================

void CalvinFSConfig_ReplicaParticipant::InitAsDefaultInstance() {
}
class CalvinFSConfig_ReplicaParticipant::HasBitSetters {
 public:
  static void set_has_machine(CalvinFSConfig_ReplicaParticipant* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_replica(CalvinFSConfig_ReplicaParticipant* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CalvinFSConfig_ReplicaParticipant::kMachineFieldNumber;
const int CalvinFSConfig_ReplicaParticipant::kReplicaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CalvinFSConfig_ReplicaParticipant::CalvinFSConfig_ReplicaParticipant()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CalvinFSConfig.ReplicaParticipant)
}
CalvinFSConfig_ReplicaParticipant::CalvinFSConfig_ReplicaParticipant(const CalvinFSConfig_ReplicaParticipant& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&machine_, &from.machine_,
    static_cast<size_t>(reinterpret_cast<char*>(&replica_) -
    reinterpret_cast<char*>(&machine_)) + sizeof(replica_));
  // @@protoc_insertion_point(copy_constructor:CalvinFSConfig.ReplicaParticipant)
}

void CalvinFSConfig_ReplicaParticipant::SharedCtor() {
  ::memset(&machine_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&replica_) -
      reinterpret_cast<char*>(&machine_)) + sizeof(replica_));
}

CalvinFSConfig_ReplicaParticipant::~CalvinFSConfig_ReplicaParticipant() {
  // @@protoc_insertion_point(destructor:CalvinFSConfig.ReplicaParticipant)
  SharedDtor();
}

void CalvinFSConfig_ReplicaParticipant::SharedDtor() {
}

void CalvinFSConfig_ReplicaParticipant::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CalvinFSConfig_ReplicaParticipant& CalvinFSConfig_ReplicaParticipant::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CalvinFSConfig_ReplicaParticipant_calvinfs_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void CalvinFSConfig_ReplicaParticipant::Clear() {
// @@protoc_insertion_point(message_clear_start:CalvinFSConfig.ReplicaParticipant)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&machine_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&replica_) -
        reinterpret_cast<char*>(&machine_)) + sizeof(replica_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CalvinFSConfig_ReplicaParticipant::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CalvinFSConfig_ReplicaParticipant*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint64 machine = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_machine(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 replica = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_replica(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CalvinFSConfig_ReplicaParticipant::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CalvinFSConfig.ReplicaParticipant)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 machine = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_machine(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &machine_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 replica = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_replica(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &replica_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CalvinFSConfig.ReplicaParticipant)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CalvinFSConfig.ReplicaParticipant)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CalvinFSConfig_ReplicaParticipant::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CalvinFSConfig.ReplicaParticipant)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 machine = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->machine(), output);
  }

  // optional uint64 replica = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->replica(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CalvinFSConfig.ReplicaParticipant)
}

::google::protobuf::uint8* CalvinFSConfig_ReplicaParticipant::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CalvinFSConfig.ReplicaParticipant)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 machine = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->machine(), target);
  }

  // optional uint64 replica = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->replica(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CalvinFSConfig.ReplicaParticipant)
  return target;
}

size_t CalvinFSConfig_ReplicaParticipant::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CalvinFSConfig.ReplicaParticipant)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint64 machine = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->machine());
    }

    // optional uint64 replica = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->replica());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CalvinFSConfig_ReplicaParticipant::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CalvinFSConfig.ReplicaParticipant)
  GOOGLE_DCHECK_NE(&from, this);
  const CalvinFSConfig_ReplicaParticipant* source =
      ::google::protobuf::DynamicCastToGenerated<CalvinFSConfig_ReplicaParticipant>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CalvinFSConfig.ReplicaParticipant)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CalvinFSConfig.ReplicaParticipant)
    MergeFrom(*source);
  }
}

void CalvinFSConfig_ReplicaParticipant::MergeFrom(const CalvinFSConfig_ReplicaParticipant& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CalvinFSConfig.ReplicaParticipant)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      machine_ = from.machine_;
    }
    if (cached_has_bits & 0x00000002u) {
      replica_ = from.replica_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CalvinFSConfig_ReplicaParticipant::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CalvinFSConfig.ReplicaParticipant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CalvinFSConfig_ReplicaParticipant::CopyFrom(const CalvinFSConfig_ReplicaParticipant& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CalvinFSConfig.ReplicaParticipant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalvinFSConfig_ReplicaParticipant::IsInitialized() const {
  return true;
}

void CalvinFSConfig_ReplicaParticipant::Swap(CalvinFSConfig_ReplicaParticipant* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CalvinFSConfig_ReplicaParticipant::InternalSwap(CalvinFSConfig_ReplicaParticipant* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(machine_, other->machine_);
  swap(replica_, other->replica_);
}

::google::protobuf::Metadata CalvinFSConfig_ReplicaParticipant::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_calvinfs_5fconfig_2eproto);
  return ::file_level_metadata_calvinfs_5fconfig_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CalvinFSConfig_MapEntry::InitAsDefaultInstance() {
}
class CalvinFSConfig_MapEntry::HasBitSetters {
 public:
  static void set_has_id(CalvinFSConfig_MapEntry* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_replica(CalvinFSConfig_MapEntry* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_machine(CalvinFSConfig_MapEntry* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CalvinFSConfig_MapEntry::kIdFieldNumber;
const int CalvinFSConfig_MapEntry::kReplicaFieldNumber;
const int CalvinFSConfig_MapEntry::kMachineFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CalvinFSConfig_MapEntry::CalvinFSConfig_MapEntry()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CalvinFSConfig.MapEntry)
}
CalvinFSConfig_MapEntry::CalvinFSConfig_MapEntry(const CalvinFSConfig_MapEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&machine_) -
    reinterpret_cast<char*>(&id_)) + sizeof(machine_));
  // @@protoc_insertion_point(copy_constructor:CalvinFSConfig.MapEntry)
}

void CalvinFSConfig_MapEntry::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&machine_) -
      reinterpret_cast<char*>(&id_)) + sizeof(machine_));
}

CalvinFSConfig_MapEntry::~CalvinFSConfig_MapEntry() {
  // @@protoc_insertion_point(destructor:CalvinFSConfig.MapEntry)
  SharedDtor();
}

void CalvinFSConfig_MapEntry::SharedDtor() {
}

void CalvinFSConfig_MapEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CalvinFSConfig_MapEntry& CalvinFSConfig_MapEntry::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CalvinFSConfig_MapEntry_calvinfs_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void CalvinFSConfig_MapEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:CalvinFSConfig.MapEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&machine_) -
        reinterpret_cast<char*>(&id_)) + sizeof(machine_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CalvinFSConfig_MapEntry::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CalvinFSConfig_MapEntry*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint64 id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 replica = 2 [default = 0];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_replica(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 machine = 3 [default = 0];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_machine(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CalvinFSConfig_MapEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CalvinFSConfig.MapEntry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 replica = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_replica(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &replica_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 machine = 3 [default = 0];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_machine(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &machine_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CalvinFSConfig.MapEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CalvinFSConfig.MapEntry)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CalvinFSConfig_MapEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CalvinFSConfig.MapEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // optional uint64 replica = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->replica(), output);
  }

  // optional uint64 machine = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->machine(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CalvinFSConfig.MapEntry)
}

::google::protobuf::uint8* CalvinFSConfig_MapEntry::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CalvinFSConfig.MapEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // optional uint64 replica = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->replica(), target);
  }

  // optional uint64 machine = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->machine(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CalvinFSConfig.MapEntry)
  return target;
}

size_t CalvinFSConfig_MapEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CalvinFSConfig.MapEntry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint64 id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->id());
    }

    // optional uint64 replica = 2 [default = 0];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->replica());
    }

    // optional uint64 machine = 3 [default = 0];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->machine());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CalvinFSConfig_MapEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CalvinFSConfig.MapEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const CalvinFSConfig_MapEntry* source =
      ::google::protobuf::DynamicCastToGenerated<CalvinFSConfig_MapEntry>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CalvinFSConfig.MapEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CalvinFSConfig.MapEntry)
    MergeFrom(*source);
  }
}

void CalvinFSConfig_MapEntry::MergeFrom(const CalvinFSConfig_MapEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CalvinFSConfig.MapEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      replica_ = from.replica_;
    }
    if (cached_has_bits & 0x00000004u) {
      machine_ = from.machine_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CalvinFSConfig_MapEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CalvinFSConfig.MapEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CalvinFSConfig_MapEntry::CopyFrom(const CalvinFSConfig_MapEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CalvinFSConfig.MapEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalvinFSConfig_MapEntry::IsInitialized() const {
  return true;
}

void CalvinFSConfig_MapEntry::Swap(CalvinFSConfig_MapEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CalvinFSConfig_MapEntry::InternalSwap(CalvinFSConfig_MapEntry* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(id_, other->id_);
  swap(replica_, other->replica_);
  swap(machine_, other->machine_);
}

::google::protobuf::Metadata CalvinFSConfig_MapEntry::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_calvinfs_5fconfig_2eproto);
  return ::file_level_metadata_calvinfs_5fconfig_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CalvinFSConfig::InitAsDefaultInstance() {
}
class CalvinFSConfig::HasBitSetters {
 public:
  static void set_has_block_replication_factor(CalvinFSConfig* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_metadata_replication_factor(CalvinFSConfig* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_blucket_count(CalvinFSConfig* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_metadata_shard_count(CalvinFSConfig* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CalvinFSConfig::kBlockReplicationFactorFieldNumber;
const int CalvinFSConfig::kMetadataReplicationFactorFieldNumber;
const int CalvinFSConfig::kBlucketCountFieldNumber;
const int CalvinFSConfig::kMetadataShardCountFieldNumber;
const int CalvinFSConfig::kReplicasFieldNumber;
const int CalvinFSConfig::kBlucketsFieldNumber;
const int CalvinFSConfig::kMetadataShardsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CalvinFSConfig::CalvinFSConfig()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CalvinFSConfig)
}
CalvinFSConfig::CalvinFSConfig(const CalvinFSConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      replicas_(from.replicas_),
      bluckets_(from.bluckets_),
      metadata_shards_(from.metadata_shards_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&block_replication_factor_, &from.block_replication_factor_,
    static_cast<size_t>(reinterpret_cast<char*>(&metadata_shard_count_) -
    reinterpret_cast<char*>(&block_replication_factor_)) + sizeof(metadata_shard_count_));
  // @@protoc_insertion_point(copy_constructor:CalvinFSConfig)
}

void CalvinFSConfig::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CalvinFSConfig_calvinfs_5fconfig_2eproto.base);
  ::memset(&block_replication_factor_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&metadata_shard_count_) -
      reinterpret_cast<char*>(&block_replication_factor_)) + sizeof(metadata_shard_count_));
}

CalvinFSConfig::~CalvinFSConfig() {
  // @@protoc_insertion_point(destructor:CalvinFSConfig)
  SharedDtor();
}

void CalvinFSConfig::SharedDtor() {
}

void CalvinFSConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CalvinFSConfig& CalvinFSConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CalvinFSConfig_calvinfs_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void CalvinFSConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:CalvinFSConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  replicas_.Clear();
  bluckets_.Clear();
  metadata_shards_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&block_replication_factor_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&metadata_shard_count_) -
        reinterpret_cast<char*>(&block_replication_factor_)) + sizeof(metadata_shard_count_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CalvinFSConfig::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CalvinFSConfig*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint64 block_replication_factor = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_block_replication_factor(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 metadata_replication_factor = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_metadata_replication_factor(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 blucket_count = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_blucket_count(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 metadata_shard_count = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_metadata_shard_count(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .CalvinFSConfig.ReplicaParticipant replicas = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 90) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::CalvinFSConfig_ReplicaParticipant::_InternalParse;
          object = msg->add_replicas();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 90 && (ptr += 1));
        break;
      }
      // repeated .CalvinFSConfig.MapEntry bluckets = 21;
      case 21: {
        if (static_cast<::google::protobuf::uint8>(tag) != 170) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::CalvinFSConfig_MapEntry::_InternalParse;
          object = msg->add_bluckets();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 65535) == 426 && (ptr += 2));
        break;
      }
      // repeated .CalvinFSConfig.MapEntry metadata_shards = 31;
      case 31: {
        if (static_cast<::google::protobuf::uint8>(tag) != 250) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::CalvinFSConfig_MapEntry::_InternalParse;
          object = msg->add_metadata_shards();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 65535) == 506 && (ptr += 2));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CalvinFSConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CalvinFSConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 block_replication_factor = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_block_replication_factor(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &block_replication_factor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 metadata_replication_factor = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_metadata_replication_factor(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &metadata_replication_factor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 blucket_count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_blucket_count(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &blucket_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 metadata_shard_count = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_metadata_shard_count(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &metadata_shard_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CalvinFSConfig.ReplicaParticipant replicas = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (90 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_replicas()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CalvinFSConfig.MapEntry bluckets = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (170 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_bluckets()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CalvinFSConfig.MapEntry metadata_shards = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (250 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_metadata_shards()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CalvinFSConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CalvinFSConfig)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CalvinFSConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CalvinFSConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 block_replication_factor = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->block_replication_factor(), output);
  }

  // optional uint64 metadata_replication_factor = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->metadata_replication_factor(), output);
  }

  // optional uint64 blucket_count = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->blucket_count(), output);
  }

  // optional uint64 metadata_shard_count = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->metadata_shard_count(), output);
  }

  // repeated .CalvinFSConfig.ReplicaParticipant replicas = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->replicas_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11,
      this->replicas(static_cast<int>(i)),
      output);
  }

  // repeated .CalvinFSConfig.MapEntry bluckets = 21;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bluckets_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21,
      this->bluckets(static_cast<int>(i)),
      output);
  }

  // repeated .CalvinFSConfig.MapEntry metadata_shards = 31;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->metadata_shards_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      31,
      this->metadata_shards(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CalvinFSConfig)
}

::google::protobuf::uint8* CalvinFSConfig::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CalvinFSConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 block_replication_factor = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->block_replication_factor(), target);
  }

  // optional uint64 metadata_replication_factor = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->metadata_replication_factor(), target);
  }

  // optional uint64 blucket_count = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->blucket_count(), target);
  }

  // optional uint64 metadata_shard_count = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->metadata_shard_count(), target);
  }

  // repeated .CalvinFSConfig.ReplicaParticipant replicas = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->replicas_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->replicas(static_cast<int>(i)), target);
  }

  // repeated .CalvinFSConfig.MapEntry bluckets = 21;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bluckets_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, this->bluckets(static_cast<int>(i)), target);
  }

  // repeated .CalvinFSConfig.MapEntry metadata_shards = 31;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->metadata_shards_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        31, this->metadata_shards(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CalvinFSConfig)
  return target;
}

size_t CalvinFSConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CalvinFSConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CalvinFSConfig.ReplicaParticipant replicas = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->replicas_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->replicas(static_cast<int>(i)));
    }
  }

  // repeated .CalvinFSConfig.MapEntry bluckets = 21;
  {
    unsigned int count = static_cast<unsigned int>(this->bluckets_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->bluckets(static_cast<int>(i)));
    }
  }

  // repeated .CalvinFSConfig.MapEntry metadata_shards = 31;
  {
    unsigned int count = static_cast<unsigned int>(this->metadata_shards_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->metadata_shards(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional uint64 block_replication_factor = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->block_replication_factor());
    }

    // optional uint64 metadata_replication_factor = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->metadata_replication_factor());
    }

    // optional uint64 blucket_count = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->blucket_count());
    }

    // optional uint64 metadata_shard_count = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->metadata_shard_count());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CalvinFSConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CalvinFSConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const CalvinFSConfig* source =
      ::google::protobuf::DynamicCastToGenerated<CalvinFSConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CalvinFSConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CalvinFSConfig)
    MergeFrom(*source);
  }
}

void CalvinFSConfig::MergeFrom(const CalvinFSConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CalvinFSConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  replicas_.MergeFrom(from.replicas_);
  bluckets_.MergeFrom(from.bluckets_);
  metadata_shards_.MergeFrom(from.metadata_shards_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      block_replication_factor_ = from.block_replication_factor_;
    }
    if (cached_has_bits & 0x00000002u) {
      metadata_replication_factor_ = from.metadata_replication_factor_;
    }
    if (cached_has_bits & 0x00000004u) {
      blucket_count_ = from.blucket_count_;
    }
    if (cached_has_bits & 0x00000008u) {
      metadata_shard_count_ = from.metadata_shard_count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CalvinFSConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CalvinFSConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CalvinFSConfig::CopyFrom(const CalvinFSConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CalvinFSConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalvinFSConfig::IsInitialized() const {
  return true;
}

void CalvinFSConfig::Swap(CalvinFSConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CalvinFSConfig::InternalSwap(CalvinFSConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&replicas_)->InternalSwap(CastToBase(&other->replicas_));
  CastToBase(&bluckets_)->InternalSwap(CastToBase(&other->bluckets_));
  CastToBase(&metadata_shards_)->InternalSwap(CastToBase(&other->metadata_shards_));
  swap(block_replication_factor_, other->block_replication_factor_);
  swap(metadata_replication_factor_, other->metadata_replication_factor_);
  swap(blucket_count_, other->blucket_count_);
  swap(metadata_shard_count_, other->metadata_shard_count_);
}

::google::protobuf::Metadata CalvinFSConfig::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_calvinfs_5fconfig_2eproto);
  return ::file_level_metadata_calvinfs_5fconfig_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MapProto_Entry::InitAsDefaultInstance() {
}
class MapProto_Entry::HasBitSetters {
 public:
  static void set_has_key(MapProto_Entry* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_value(MapProto_Entry* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MapProto_Entry::kKeyFieldNumber;
const int MapProto_Entry::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MapProto_Entry::MapProto_Entry()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MapProto.Entry)
}
MapProto_Entry::MapProto_Entry(const MapProto_Entry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:MapProto.Entry)
}

void MapProto_Entry::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MapProto_Entry_calvinfs_5fconfig_2eproto.base);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MapProto_Entry::~MapProto_Entry() {
  // @@protoc_insertion_point(destructor:MapProto.Entry)
  SharedDtor();
}

void MapProto_Entry::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MapProto_Entry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MapProto_Entry& MapProto_Entry::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MapProto_Entry_calvinfs_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void MapProto_Entry::Clear() {
// @@protoc_insertion_point(message_clear_start:MapProto.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      value_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MapProto_Entry::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MapProto_Entry*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes key = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes value = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_value();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MapProto_Entry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MapProto.Entry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MapProto.Entry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MapProto.Entry)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MapProto_Entry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MapProto.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->key(), output);
  }

  // optional bytes value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MapProto.Entry)
}

::google::protobuf::uint8* MapProto_Entry::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MapProto.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes key = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->key(), target);
  }

  // optional bytes value = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MapProto.Entry)
  return target;
}

size_t MapProto_Entry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MapProto.Entry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes key = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->key());
    }

    // optional bytes value = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MapProto_Entry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MapProto.Entry)
  GOOGLE_DCHECK_NE(&from, this);
  const MapProto_Entry* source =
      ::google::protobuf::DynamicCastToGenerated<MapProto_Entry>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MapProto.Entry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MapProto.Entry)
    MergeFrom(*source);
  }
}

void MapProto_Entry::MergeFrom(const MapProto_Entry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MapProto.Entry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
}

void MapProto_Entry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MapProto.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MapProto_Entry::CopyFrom(const MapProto_Entry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MapProto.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MapProto_Entry::IsInitialized() const {
  return true;
}

void MapProto_Entry::Swap(MapProto_Entry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MapProto_Entry::InternalSwap(MapProto_Entry* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata MapProto_Entry::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_calvinfs_5fconfig_2eproto);
  return ::file_level_metadata_calvinfs_5fconfig_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MapProto::InitAsDefaultInstance() {
}
class MapProto::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MapProto::kEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MapProto::MapProto()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MapProto)
}
MapProto::MapProto(const MapProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:MapProto)
}

void MapProto::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MapProto_calvinfs_5fconfig_2eproto.base);
}

MapProto::~MapProto() {
  // @@protoc_insertion_point(destructor:MapProto)
  SharedDtor();
}

void MapProto::SharedDtor() {
}

void MapProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MapProto& MapProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MapProto_calvinfs_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void MapProto::Clear() {
// @@protoc_insertion_point(message_clear_start:MapProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MapProto::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MapProto*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .MapProto.Entry entries = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::MapProto_Entry::_InternalParse;
          object = msg->add_entries();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MapProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MapProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .MapProto.Entry entries = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MapProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MapProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MapProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MapProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .MapProto.Entry entries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->entries(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MapProto)
}

::google::protobuf::uint8* MapProto::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MapProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .MapProto.Entry entries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->entries(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MapProto)
  return target;
}

size_t MapProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MapProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .MapProto.Entry entries = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->entries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->entries(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MapProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MapProto)
  GOOGLE_DCHECK_NE(&from, this);
  const MapProto* source =
      ::google::protobuf::DynamicCastToGenerated<MapProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MapProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MapProto)
    MergeFrom(*source);
  }
}

void MapProto::MergeFrom(const MapProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MapProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
}

void MapProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MapProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MapProto::CopyFrom(const MapProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MapProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MapProto::IsInitialized() const {
  return true;
}

void MapProto::Swap(MapProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MapProto::InternalSwap(MapProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&entries_)->InternalSwap(CastToBase(&other->entries_));
}

::google::protobuf::Metadata MapProto::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_calvinfs_5fconfig_2eproto);
  return ::file_level_metadata_calvinfs_5fconfig_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::CalvinFSConfig_ReplicaParticipant* Arena::CreateMaybeMessage< ::CalvinFSConfig_ReplicaParticipant >(Arena* arena) {
  return Arena::CreateInternal< ::CalvinFSConfig_ReplicaParticipant >(arena);
}
template<> PROTOBUF_NOINLINE ::CalvinFSConfig_MapEntry* Arena::CreateMaybeMessage< ::CalvinFSConfig_MapEntry >(Arena* arena) {
  return Arena::CreateInternal< ::CalvinFSConfig_MapEntry >(arena);
}
template<> PROTOBUF_NOINLINE ::CalvinFSConfig* Arena::CreateMaybeMessage< ::CalvinFSConfig >(Arena* arena) {
  return Arena::CreateInternal< ::CalvinFSConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::MapProto_Entry* Arena::CreateMaybeMessage< ::MapProto_Entry >(Arena* arena) {
  return Arena::CreateInternal< ::MapProto_Entry >(arena);
}
template<> PROTOBUF_NOINLINE ::MapProto* Arena::CreateMaybeMessage< ::MapProto >(Arena* arena) {
  return Arena::CreateInternal< ::MapProto >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
