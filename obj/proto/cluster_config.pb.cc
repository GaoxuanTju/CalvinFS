// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cluster_config.proto

#include "cluster_config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_cluster_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MachineInfo_cluster_5fconfig_2eproto;
class MachineInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MachineInfo> _instance;
} _MachineInfo_default_instance_;
class ClusterConfigProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClusterConfigProto> _instance;
} _ClusterConfigProto_default_instance_;
static void InitDefaultsMachineInfo_cluster_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MachineInfo_default_instance_;
    new (ptr) ::MachineInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MachineInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MachineInfo_cluster_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMachineInfo_cluster_5fconfig_2eproto}, {}};

static void InitDefaultsClusterConfigProto_cluster_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ClusterConfigProto_default_instance_;
    new (ptr) ::ClusterConfigProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ClusterConfigProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ClusterConfigProto_cluster_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsClusterConfigProto_cluster_5fconfig_2eproto}, {
      &scc_info_MachineInfo_cluster_5fconfig_2eproto.base,}};

void InitDefaults_cluster_5fconfig_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_MachineInfo_cluster_5fconfig_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClusterConfigProto_cluster_5fconfig_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_cluster_5fconfig_2eproto[2];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_cluster_5fconfig_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_cluster_5fconfig_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_cluster_5fconfig_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::MachineInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::MachineInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MachineInfo, id_),
  PROTOBUF_FIELD_OFFSET(::MachineInfo, host_),
  PROTOBUF_FIELD_OFFSET(::MachineInfo, port_),
  1,
  0,
  2,
  PROTOBUF_FIELD_OFFSET(::ClusterConfigProto, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ClusterConfigProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClusterConfigProto, machines_),
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::MachineInfo)},
  { 11, 17, sizeof(::ClusterConfigProto)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MachineInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ClusterConfigProto_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_cluster_5fconfig_2eproto = {
  {}, AddDescriptors_cluster_5fconfig_2eproto, "cluster_config.proto", schemas,
  file_default_instances, TableStruct_cluster_5fconfig_2eproto::offsets,
  file_level_metadata_cluster_5fconfig_2eproto, 2, file_level_enum_descriptors_cluster_5fconfig_2eproto, file_level_service_descriptors_cluster_5fconfig_2eproto,
};

const char descriptor_table_protodef_cluster_5fconfig_2eproto[] =
  "\n\024cluster_config.proto\"5\n\013MachineInfo\022\n\n"
  "\002id\030\001 \001(\004\022\014\n\004host\030\002 \001(\t\022\014\n\004port\030\003 \001(\005\"4\n"
  "\022ClusterConfigProto\022\036\n\010machines\030\001 \003(\0132\014."
  "MachineInfo"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_cluster_5fconfig_2eproto = {
  false, InitDefaults_cluster_5fconfig_2eproto, 
  descriptor_table_protodef_cluster_5fconfig_2eproto,
  "cluster_config.proto", &assign_descriptors_table_cluster_5fconfig_2eproto, 131,
};

void AddDescriptors_cluster_5fconfig_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_cluster_5fconfig_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_cluster_5fconfig_2eproto = []() { AddDescriptors_cluster_5fconfig_2eproto(); return true; }();

// ===================================================================

void MachineInfo::InitAsDefaultInstance() {
}
class MachineInfo::HasBitSetters {
 public:
  static void set_has_id(MachineInfo* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_host(MachineInfo* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_port(MachineInfo* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MachineInfo::kIdFieldNumber;
const int MachineInfo::kHostFieldNumber;
const int MachineInfo::kPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MachineInfo::MachineInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MachineInfo)
}
MachineInfo::MachineInfo(const MachineInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_host()) {
    host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&port_) -
    reinterpret_cast<char*>(&id_)) + sizeof(port_));
  // @@protoc_insertion_point(copy_constructor:MachineInfo)
}

void MachineInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MachineInfo_cluster_5fconfig_2eproto.base);
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&port_) -
      reinterpret_cast<char*>(&id_)) + sizeof(port_));
}

MachineInfo::~MachineInfo() {
  // @@protoc_insertion_point(destructor:MachineInfo)
  SharedDtor();
}

void MachineInfo::SharedDtor() {
  host_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MachineInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MachineInfo& MachineInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MachineInfo_cluster_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void MachineInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:MachineInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    host_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&port_) -
        reinterpret_cast<char*>(&id_)) + sizeof(port_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MachineInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MachineInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint64 id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string host = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("MachineInfo.host");
        object = msg->mutable_host();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional int32 port = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_port(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MachineInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MachineInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string host = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->host().data(), static_cast<int>(this->host().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MachineInfo.host");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 port = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_port(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MachineInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MachineInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MachineInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MachineInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // optional string host = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host().data(), static_cast<int>(this->host().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MachineInfo.host");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->host(), output);
  }

  // optional int32 port = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->port(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MachineInfo)
}

::google::protobuf::uint8* MachineInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MachineInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // optional string host = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host().data(), static_cast<int>(this->host().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MachineInfo.host");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->host(), target);
  }

  // optional int32 port = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->port(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MachineInfo)
  return target;
}

size_t MachineInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MachineInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string host = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->host());
    }

    // optional uint64 id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->id());
    }

    // optional int32 port = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->port());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MachineInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MachineInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const MachineInfo* source =
      ::google::protobuf::DynamicCastToGenerated<MachineInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MachineInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MachineInfo)
    MergeFrom(*source);
  }
}

void MachineInfo::MergeFrom(const MachineInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MachineInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_);
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000004u) {
      port_ = from.port_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MachineInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MachineInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MachineInfo::CopyFrom(const MachineInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MachineInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MachineInfo::IsInitialized() const {
  return true;
}

void MachineInfo::Swap(MachineInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MachineInfo::InternalSwap(MachineInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  host_.Swap(&other->host_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(port_, other->port_);
}

::google::protobuf::Metadata MachineInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_cluster_5fconfig_2eproto);
  return ::file_level_metadata_cluster_5fconfig_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ClusterConfigProto::InitAsDefaultInstance() {
}
class ClusterConfigProto::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClusterConfigProto::kMachinesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClusterConfigProto::ClusterConfigProto()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ClusterConfigProto)
}
ClusterConfigProto::ClusterConfigProto(const ClusterConfigProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      machines_(from.machines_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ClusterConfigProto)
}

void ClusterConfigProto::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ClusterConfigProto_cluster_5fconfig_2eproto.base);
}

ClusterConfigProto::~ClusterConfigProto() {
  // @@protoc_insertion_point(destructor:ClusterConfigProto)
  SharedDtor();
}

void ClusterConfigProto::SharedDtor() {
}

void ClusterConfigProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClusterConfigProto& ClusterConfigProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ClusterConfigProto_cluster_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void ClusterConfigProto::Clear() {
// @@protoc_insertion_point(message_clear_start:ClusterConfigProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  machines_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ClusterConfigProto::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ClusterConfigProto*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .MachineInfo machines = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::MachineInfo::_InternalParse;
          object = msg->add_machines();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ClusterConfigProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ClusterConfigProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .MachineInfo machines = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_machines()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ClusterConfigProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ClusterConfigProto)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ClusterConfigProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ClusterConfigProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .MachineInfo machines = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->machines_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->machines(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ClusterConfigProto)
}

::google::protobuf::uint8* ClusterConfigProto::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClusterConfigProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .MachineInfo machines = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->machines_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->machines(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClusterConfigProto)
  return target;
}

size_t ClusterConfigProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClusterConfigProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .MachineInfo machines = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->machines_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->machines(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClusterConfigProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClusterConfigProto)
  GOOGLE_DCHECK_NE(&from, this);
  const ClusterConfigProto* source =
      ::google::protobuf::DynamicCastToGenerated<ClusterConfigProto>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClusterConfigProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClusterConfigProto)
    MergeFrom(*source);
  }
}

void ClusterConfigProto::MergeFrom(const ClusterConfigProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClusterConfigProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  machines_.MergeFrom(from.machines_);
}

void ClusterConfigProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClusterConfigProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClusterConfigProto::CopyFrom(const ClusterConfigProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClusterConfigProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClusterConfigProto::IsInitialized() const {
  return true;
}

void ClusterConfigProto::Swap(ClusterConfigProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClusterConfigProto::InternalSwap(ClusterConfigProto* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&machines_)->InternalSwap(CastToBase(&other->machines_));
}

::google::protobuf::Metadata ClusterConfigProto::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_cluster_5fconfig_2eproto);
  return ::file_level_metadata_cluster_5fconfig_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::MachineInfo* Arena::CreateMaybeMessage< ::MachineInfo >(Arena* arena) {
  return Arena::CreateInternal< ::MachineInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::ClusterConfigProto* Arena::CreateMaybeMessage< ::ClusterConfigProto >(Arena* arena) {
  return Arena::CreateInternal< ::ClusterConfigProto >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
