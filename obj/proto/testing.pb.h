// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: testing.proto

#ifndef PROTOBUF_INCLUDED_testing_2eproto
#define PROTOBUF_INCLUDED_testing_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_testing_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_testing_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_testing_2eproto();
class A;
class ADefaultTypeInternal;
extern ADefaultTypeInternal _A_default_instance_;
class B;
class BDefaultTypeInternal;
extern BDefaultTypeInternal _B_default_instance_;
namespace google {
namespace protobuf {
template<> ::A* Arena::CreateMaybeMessage<::A>(Arena*);
template<> ::B* Arena::CreateMaybeMessage<::B>(Arena*);
}  // namespace protobuf
}  // namespace google

// ===================================================================

class A :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:A) */ {
 public:
  A();
  virtual ~A();

  A(const A& from);

  inline A& operator=(const A& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  A(A&& from) noexcept
    : A() {
    *this = ::std::move(from);
  }

  inline A& operator=(A&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const A& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const A* internal_default_instance() {
    return reinterpret_cast<const A*>(
               &_A_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(A* other);
  friend void swap(A& a, A& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline A* New() const final {
    return CreateMaybeMessage<A>(nullptr);
  }

  A* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<A>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const A& from);
  void MergeFrom(const A& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(A* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 x = 1;
  int x_size() const;
  void clear_x();
  static const int kXFieldNumber = 1;
  ::google::protobuf::int32 x(int index) const;
  void set_x(int index, ::google::protobuf::int32 value);
  void add_x(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      x() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_x();

  // repeated bytes s = 2;
  int s_size() const;
  void clear_s();
  static const int kSFieldNumber = 2;
  const ::std::string& s(int index) const;
  ::std::string* mutable_s(int index);
  void set_s(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_s(int index, ::std::string&& value);
  #endif
  void set_s(int index, const char* value);
  void set_s(int index, const void* value, size_t size);
  ::std::string* add_s();
  void add_s(const ::std::string& value);
  #if LANG_CXX11
  void add_s(::std::string&& value);
  #endif
  void add_s(const char* value);
  void add_s(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& s() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_s();

  // @@protoc_insertion_point(class_scope:A)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > x_;
  ::google::protobuf::RepeatedPtrField<::std::string> s_;
  friend struct ::TableStruct_testing_2eproto;
};
// -------------------------------------------------------------------

class B :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:B) */ {
 public:
  B();
  virtual ~B();

  B(const B& from);

  inline B& operator=(const B& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  B(B&& from) noexcept
    : B() {
    *this = ::std::move(from);
  }

  inline B& operator=(B&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const B& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const B* internal_default_instance() {
    return reinterpret_cast<const B*>(
               &_B_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(B* other);
  friend void swap(B& a, B& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline B* New() const final {
    return CreateMaybeMessage<B>(nullptr);
  }

  B* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<B>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const B& from);
  void MergeFrom(const B& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(B* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .A a = 1;
  int a_size() const;
  void clear_a();
  static const int kAFieldNumber = 1;
  ::A* mutable_a(int index);
  ::google::protobuf::RepeatedPtrField< ::A >*
      mutable_a();
  const ::A& a(int index) const;
  ::A* add_a();
  const ::google::protobuf::RepeatedPtrField< ::A >&
      a() const;

  // repeated .B b = 2;
  int b_size() const;
  void clear_b();
  static const int kBFieldNumber = 2;
  ::B* mutable_b(int index);
  ::google::protobuf::RepeatedPtrField< ::B >*
      mutable_b();
  const ::B& b(int index) const;
  ::B* add_b();
  const ::google::protobuf::RepeatedPtrField< ::B >&
      b() const;

  // @@protoc_insertion_point(class_scope:B)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::A > a_;
  ::google::protobuf::RepeatedPtrField< ::B > b_;
  friend struct ::TableStruct_testing_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// A

// repeated int32 x = 1;
inline int A::x_size() const {
  return x_.size();
}
inline void A::clear_x() {
  x_.Clear();
}
inline ::google::protobuf::int32 A::x(int index) const {
  // @@protoc_insertion_point(field_get:A.x)
  return x_.Get(index);
}
inline void A::set_x(int index, ::google::protobuf::int32 value) {
  x_.Set(index, value);
  // @@protoc_insertion_point(field_set:A.x)
}
inline void A::add_x(::google::protobuf::int32 value) {
  x_.Add(value);
  // @@protoc_insertion_point(field_add:A.x)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
A::x() const {
  // @@protoc_insertion_point(field_list:A.x)
  return x_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
A::mutable_x() {
  // @@protoc_insertion_point(field_mutable_list:A.x)
  return &x_;
}

// repeated bytes s = 2;
inline int A::s_size() const {
  return s_.size();
}
inline void A::clear_s() {
  s_.Clear();
}
inline const ::std::string& A::s(int index) const {
  // @@protoc_insertion_point(field_get:A.s)
  return s_.Get(index);
}
inline ::std::string* A::mutable_s(int index) {
  // @@protoc_insertion_point(field_mutable:A.s)
  return s_.Mutable(index);
}
inline void A::set_s(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:A.s)
  s_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void A::set_s(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:A.s)
  s_.Mutable(index)->assign(std::move(value));
}
#endif
inline void A::set_s(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  s_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:A.s)
}
inline void A::set_s(int index, const void* value, size_t size) {
  s_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:A.s)
}
inline ::std::string* A::add_s() {
  // @@protoc_insertion_point(field_add_mutable:A.s)
  return s_.Add();
}
inline void A::add_s(const ::std::string& value) {
  s_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:A.s)
}
#if LANG_CXX11
inline void A::add_s(::std::string&& value) {
  s_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:A.s)
}
#endif
inline void A::add_s(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  s_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:A.s)
}
inline void A::add_s(const void* value, size_t size) {
  s_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:A.s)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
A::s() const {
  // @@protoc_insertion_point(field_list:A.s)
  return s_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
A::mutable_s() {
  // @@protoc_insertion_point(field_mutable_list:A.s)
  return &s_;
}

// -------------------------------------------------------------------

// B

// repeated .A a = 1;
inline int B::a_size() const {
  return a_.size();
}
inline void B::clear_a() {
  a_.Clear();
}
inline ::A* B::mutable_a(int index) {
  // @@protoc_insertion_point(field_mutable:B.a)
  return a_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::A >*
B::mutable_a() {
  // @@protoc_insertion_point(field_mutable_list:B.a)
  return &a_;
}
inline const ::A& B::a(int index) const {
  // @@protoc_insertion_point(field_get:B.a)
  return a_.Get(index);
}
inline ::A* B::add_a() {
  // @@protoc_insertion_point(field_add:B.a)
  return a_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::A >&
B::a() const {
  // @@protoc_insertion_point(field_list:B.a)
  return a_;
}

// repeated .B b = 2;
inline int B::b_size() const {
  return b_.size();
}
inline void B::clear_b() {
  b_.Clear();
}
inline ::B* B::mutable_b(int index) {
  // @@protoc_insertion_point(field_mutable:B.b)
  return b_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::B >*
B::mutable_b() {
  // @@protoc_insertion_point(field_mutable_list:B.b)
  return &b_;
}
inline const ::B& B::b(int index) const {
  // @@protoc_insertion_point(field_get:B.b)
  return b_.Get(index);
}
inline ::B* B::add_b() {
  // @@protoc_insertion_point(field_add:B.b)
  return b_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::B >&
B::b() const {
  // @@protoc_insertion_point(field_list:B.b)
  return b_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_testing_2eproto
