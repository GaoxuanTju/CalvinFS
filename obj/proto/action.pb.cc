// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: action.proto

#include "action.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_action_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Action_action_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_scalar_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Scalar_scalar_2eproto;
class ActionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Action> _instance;
} _Action_default_instance_;
class ActionBatchDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ActionBatch> _instance;
} _ActionBatch_default_instance_;
static void InitDefaultsAction_action_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Action_default_instance_;
    new (ptr) ::Action();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Action::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Action_action_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAction_action_2eproto}, {
      &scc_info_Scalar_scalar_2eproto.base,}};

static void InitDefaultsActionBatch_action_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ActionBatch_default_instance_;
    new (ptr) ::ActionBatch();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ActionBatch::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ActionBatch_action_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsActionBatch_action_2eproto}, {
      &scc_info_Action_action_2eproto.base,}};

void InitDefaults_action_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_Action_action_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ActionBatch_action_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_action_2eproto[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_action_2eproto[1];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_action_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_action_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::Action, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::Action, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Action, client_machine_),
  PROTOBUF_FIELD_OFFSET(::Action, client_channel_),
  PROTOBUF_FIELD_OFFSET(::Action, store_),
  PROTOBUF_FIELD_OFFSET(::Action, action_type_),
  PROTOBUF_FIELD_OFFSET(::Action, read_only_),
  PROTOBUF_FIELD_OFFSET(::Action, input_),
  PROTOBUF_FIELD_OFFSET(::Action, output_),
  PROTOBUF_FIELD_OFFSET(::Action, from_hash_),
  PROTOBUF_FIELD_OFFSET(::Action, to_hash_),
  PROTOBUF_FIELD_OFFSET(::Action, from_parent_),
  PROTOBUF_FIELD_OFFSET(::Action, to_parent_),
  PROTOBUF_FIELD_OFFSET(::Action, readset_),
  PROTOBUF_FIELD_OFFSET(::Action, writeset_),
  PROTOBUF_FIELD_OFFSET(::Action, version_),
  PROTOBUF_FIELD_OFFSET(::Action, version_offset_),
  PROTOBUF_FIELD_OFFSET(::Action, involved_machines_),
  PROTOBUF_FIELD_OFFSET(::Action, misc_),
  PROTOBUF_FIELD_OFFSET(::Action, action_status_),
  8,
  0,
  1,
  9,
  10,
  2,
  3,
  4,
  5,
  6,
  7,
  ~0u,
  ~0u,
  12,
  13,
  14,
  ~0u,
  11,
  PROTOBUF_FIELD_OFFSET(::ActionBatch, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ActionBatch, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ActionBatch, entries_),
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 23, sizeof(::Action)},
  { 41, 47, sizeof(::ActionBatch)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Action_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ActionBatch_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_action_2eproto = {
  {}, AddDescriptors_action_2eproto, "action.proto", schemas,
  file_default_instances, TableStruct_action_2eproto::offsets,
  file_level_metadata_action_2eproto, 2, file_level_enum_descriptors_action_2eproto, file_level_service_descriptors_action_2eproto,
};

const char descriptor_table_protodef_action_2eproto[] =
  "\n\014action.proto\032\014scalar.proto\"\240\003\n\006Action\022"
  "\026\n\016client_machine\030\001 \001(\004\022\026\n\016client_channe"
  "l\030\002 \001(\t\022\r\n\005store\030\013 \001(\t\022\023\n\013action_type\030\014 "
  "\002(\005\022\030\n\tread_only\030\r \001(\010:\005false\022\r\n\005input\030\016"
  " \002(\014\022\016\n\006output\030\017 \001(\014\022\021\n\tfrom_hash\030\020 \001(\t\022"
  "\017\n\007to_hash\030\021 \001(\t\022\023\n\013from_parent\030\022 \001(\t\022\021\n"
  "\tto_parent\030\023 \001(\t\022\017\n\007readset\030\025 \003(\014\022\020\n\010wri"
  "teset\030\026 \003(\014\022\017\n\007version\030\037 \001(\004\022\026\n\016version_"
  "offset\030  \001(\004\022\034\n\021involved_machines\030+ \001(\r:"
  "\0011\022\025\n\004misc\0303 \003(\0132\007.Scalar\022\025\n\raction_stat"
  "us\030= \001(\005\"%\n\014ActionStatus\022\010\n\004FREE\020\000\022\013\n\007BL"
  "OCKED\020\001\"\'\n\013ActionBatch\022\030\n\007entries\030\001 \003(\0132"
  "\007.Action"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_action_2eproto = {
  false, InitDefaults_action_2eproto, 
  descriptor_table_protodef_action_2eproto,
  "action.proto", &assign_descriptors_table_action_2eproto, 488,
};

void AddDescriptors_action_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
    ::AddDescriptors_scalar_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_action_2eproto, deps, 1);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_action_2eproto = []() { AddDescriptors_action_2eproto(); return true; }();
const ::google::protobuf::EnumDescriptor* Action_ActionStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_action_2eproto);
  return file_level_enum_descriptors_action_2eproto[0];
}
bool Action_ActionStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Action_ActionStatus Action::FREE;
const Action_ActionStatus Action::BLOCKED;
const Action_ActionStatus Action::ActionStatus_MIN;
const Action_ActionStatus Action::ActionStatus_MAX;
const int Action::ActionStatus_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Action::InitAsDefaultInstance() {
}
class Action::HasBitSetters {
 public:
  static void set_has_client_machine(Action* msg) {
    msg->_has_bits_[0] |= 0x00000100u;
  }
  static void set_has_client_channel(Action* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_store(Action* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_action_type(Action* msg) {
    msg->_has_bits_[0] |= 0x00000200u;
  }
  static void set_has_read_only(Action* msg) {
    msg->_has_bits_[0] |= 0x00000400u;
  }
  static void set_has_input(Action* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_output(Action* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_from_hash(Action* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_to_hash(Action* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_from_parent(Action* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
  static void set_has_to_parent(Action* msg) {
    msg->_has_bits_[0] |= 0x00000080u;
  }
  static void set_has_version(Action* msg) {
    msg->_has_bits_[0] |= 0x00001000u;
  }
  static void set_has_version_offset(Action* msg) {
    msg->_has_bits_[0] |= 0x00002000u;
  }
  static void set_has_involved_machines(Action* msg) {
    msg->_has_bits_[0] |= 0x00004000u;
  }
  static void set_has_action_status(Action* msg) {
    msg->_has_bits_[0] |= 0x00000800u;
  }
};

void Action::clear_misc() {
  misc_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Action::kClientMachineFieldNumber;
const int Action::kClientChannelFieldNumber;
const int Action::kStoreFieldNumber;
const int Action::kActionTypeFieldNumber;
const int Action::kReadOnlyFieldNumber;
const int Action::kInputFieldNumber;
const int Action::kOutputFieldNumber;
const int Action::kFromHashFieldNumber;
const int Action::kToHashFieldNumber;
const int Action::kFromParentFieldNumber;
const int Action::kToParentFieldNumber;
const int Action::kReadsetFieldNumber;
const int Action::kWritesetFieldNumber;
const int Action::kVersionFieldNumber;
const int Action::kVersionOffsetFieldNumber;
const int Action::kInvolvedMachinesFieldNumber;
const int Action::kMiscFieldNumber;
const int Action::kActionStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Action::Action()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Action)
}
Action::Action(const Action& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      readset_(from.readset_),
      writeset_(from.writeset_),
      misc_(from.misc_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  client_channel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_client_channel()) {
    client_channel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_channel_);
  }
  store_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_store()) {
    store_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.store_);
  }
  input_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_input()) {
    input_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.input_);
  }
  output_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_output()) {
    output_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_);
  }
  from_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_from_hash()) {
    from_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_hash_);
  }
  to_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_to_hash()) {
    to_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_hash_);
  }
  from_parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_from_parent()) {
    from_parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_parent_);
  }
  to_parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_to_parent()) {
    to_parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_parent_);
  }
  ::memcpy(&client_machine_, &from.client_machine_,
    static_cast<size_t>(reinterpret_cast<char*>(&involved_machines_) -
    reinterpret_cast<char*>(&client_machine_)) + sizeof(involved_machines_));
  // @@protoc_insertion_point(copy_constructor:Action)
}

void Action::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Action_action_2eproto.base);
  client_channel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  store_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  input_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&client_machine_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_offset_) -
      reinterpret_cast<char*>(&client_machine_)) + sizeof(version_offset_));
  involved_machines_ = 1u;
}

Action::~Action() {
  // @@protoc_insertion_point(destructor:Action)
  SharedDtor();
}

void Action::SharedDtor() {
  client_channel_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  store_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  input_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Action::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Action& Action::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Action_action_2eproto.base);
  return *internal_default_instance();
}


void Action::Clear() {
// @@protoc_insertion_point(message_clear_start:Action)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  readset_.Clear();
  writeset_.Clear();
  misc_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      client_channel_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      store_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      input_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      output_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      from_hash_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      to_hash_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000040u) {
      from_parent_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000080u) {
      to_parent_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x00007f00u) {
    ::memset(&client_machine_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&version_offset_) -
        reinterpret_cast<char*>(&client_machine_)) + sizeof(version_offset_));
    involved_machines_ = 1u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Action::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Action*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint64 client_machine = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_client_machine(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string client_channel = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("Action.client_channel");
        object = msg->mutable_client_channel();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string store = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 90) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("Action.store");
        object = msg->mutable_store();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required int32 action_type = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 96) goto handle_unusual;
        msg->set_action_type(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool read_only = 13 [default = false];
      case 13: {
        if (static_cast<::google::protobuf::uint8>(tag) != 104) goto handle_unusual;
        msg->set_read_only(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required bytes input = 14;
      case 14: {
        if (static_cast<::google::protobuf::uint8>(tag) != 114) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_input();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes output = 15;
      case 15: {
        if (static_cast<::google::protobuf::uint8>(tag) != 122) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_output();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string from_hash = 16;
      case 16: {
        if (static_cast<::google::protobuf::uint8>(tag) != 130) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("Action.from_hash");
        object = msg->mutable_from_hash();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string to_hash = 17;
      case 17: {
        if (static_cast<::google::protobuf::uint8>(tag) != 138) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("Action.to_hash");
        object = msg->mutable_to_hash();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string from_parent = 18;
      case 18: {
        if (static_cast<::google::protobuf::uint8>(tag) != 146) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("Action.from_parent");
        object = msg->mutable_from_parent();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string to_parent = 19;
      case 19: {
        if (static_cast<::google::protobuf::uint8>(tag) != 154) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("Action.to_parent");
        object = msg->mutable_to_parent();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated bytes readset = 21;
      case 21: {
        if (static_cast<::google::protobuf::uint8>(tag) != 170) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          object = msg->add_readset();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParser;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 65535) == 426 && (ptr += 2));
        break;
      }
      // repeated bytes writeset = 22;
      case 22: {
        if (static_cast<::google::protobuf::uint8>(tag) != 178) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          object = msg->add_writeset();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParser;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 65535) == 434 && (ptr += 2));
        break;
      }
      // optional uint64 version = 31;
      case 31: {
        if (static_cast<::google::protobuf::uint8>(tag) != 248) goto handle_unusual;
        msg->set_version(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 version_offset = 32;
      case 32: {
        if (static_cast<::google::protobuf::uint8>(tag) != 0) goto handle_unusual;
        msg->set_version_offset(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 involved_machines = 43 [default = 1];
      case 43: {
        if (static_cast<::google::protobuf::uint8>(tag) != 88) goto handle_unusual;
        msg->set_involved_machines(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .Scalar misc = 51;
      case 51: {
        if (static_cast<::google::protobuf::uint8>(tag) != 154) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::Scalar::_InternalParse;
          object = msg->add_misc();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 65535) == 922 && (ptr += 2));
        break;
      }
      // optional int32 action_status = 61;
      case 61: {
        if (static_cast<::google::protobuf::uint8>(tag) != 232) goto handle_unusual;
        msg->set_action_status(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Action::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Action)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 client_machine = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_client_machine(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &client_machine_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string client_channel = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_channel()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->client_channel().data(), static_cast<int>(this->client_channel().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Action.client_channel");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string store = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (90 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_store()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->store().data(), static_cast<int>(this->store().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Action.store");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 action_type = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (96 & 0xFF)) {
          HasBitSetters::set_has_action_type(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &action_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool read_only = 13 [default = false];
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (104 & 0xFF)) {
          HasBitSetters::set_has_read_only(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &read_only_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes input = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (114 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_input()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes output = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (122 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_output()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string from_hash = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (130 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_hash()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->from_hash().data(), static_cast<int>(this->from_hash().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Action.from_hash");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string to_hash = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (138 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to_hash()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->to_hash().data(), static_cast<int>(this->to_hash().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Action.to_hash");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string from_parent = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (146 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_parent()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->from_parent().data(), static_cast<int>(this->from_parent().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Action.from_parent");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string to_parent = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (154 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to_parent()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->to_parent().data(), static_cast<int>(this->to_parent().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Action.to_parent");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes readset = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (170 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_readset()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes writeset = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (178 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_writeset()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 version = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (248 & 0xFF)) {
          HasBitSetters::set_has_version(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 version_offset = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (256 & 0xFF)) {
          HasBitSetters::set_has_version_offset(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &version_offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 involved_machines = 43 [default = 1];
      case 43: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (344 & 0xFF)) {
          HasBitSetters::set_has_involved_machines(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &involved_machines_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Scalar misc = 51;
      case 51: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (410 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_misc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 action_status = 61;
      case 61: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (488 & 0xFF)) {
          HasBitSetters::set_has_action_status(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &action_status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Action)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Action)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Action::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Action)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 client_machine = 1;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->client_machine(), output);
  }

  // optional string client_channel = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->client_channel().data(), static_cast<int>(this->client_channel().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Action.client_channel");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->client_channel(), output);
  }

  // optional string store = 11;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->store().data(), static_cast<int>(this->store().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Action.store");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->store(), output);
  }

  // required int32 action_type = 12;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->action_type(), output);
  }

  // optional bool read_only = 13 [default = false];
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->read_only(), output);
  }

  // required bytes input = 14;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      14, this->input(), output);
  }

  // optional bytes output = 15;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      15, this->output(), output);
  }

  // optional string from_hash = 16;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->from_hash().data(), static_cast<int>(this->from_hash().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Action.from_hash");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->from_hash(), output);
  }

  // optional string to_hash = 17;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->to_hash().data(), static_cast<int>(this->to_hash().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Action.to_hash");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->to_hash(), output);
  }

  // optional string from_parent = 18;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->from_parent().data(), static_cast<int>(this->from_parent().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Action.from_parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->from_parent(), output);
  }

  // optional string to_parent = 19;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->to_parent().data(), static_cast<int>(this->to_parent().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Action.to_parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->to_parent(), output);
  }

  // repeated bytes readset = 21;
  for (int i = 0, n = this->readset_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      21, this->readset(i), output);
  }

  // repeated bytes writeset = 22;
  for (int i = 0, n = this->writeset_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      22, this->writeset(i), output);
  }

  // optional uint64 version = 31;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(31, this->version(), output);
  }

  // optional uint64 version_offset = 32;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(32, this->version_offset(), output);
  }

  // optional uint32 involved_machines = 43 [default = 1];
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(43, this->involved_machines(), output);
  }

  // repeated .Scalar misc = 51;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->misc_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      51,
      this->misc(static_cast<int>(i)),
      output);
  }

  // optional int32 action_status = 61;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(61, this->action_status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Action)
}

::google::protobuf::uint8* Action::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Action)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 client_machine = 1;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->client_machine(), target);
  }

  // optional string client_channel = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->client_channel().data(), static_cast<int>(this->client_channel().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Action.client_channel");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->client_channel(), target);
  }

  // optional string store = 11;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->store().data(), static_cast<int>(this->store().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Action.store");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->store(), target);
  }

  // required int32 action_type = 12;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->action_type(), target);
  }

  // optional bool read_only = 13 [default = false];
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->read_only(), target);
  }

  // required bytes input = 14;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        14, this->input(), target);
  }

  // optional bytes output = 15;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        15, this->output(), target);
  }

  // optional string from_hash = 16;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->from_hash().data(), static_cast<int>(this->from_hash().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Action.from_hash");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->from_hash(), target);
  }

  // optional string to_hash = 17;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->to_hash().data(), static_cast<int>(this->to_hash().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Action.to_hash");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->to_hash(), target);
  }

  // optional string from_parent = 18;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->from_parent().data(), static_cast<int>(this->from_parent().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Action.from_parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->from_parent(), target);
  }

  // optional string to_parent = 19;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->to_parent().data(), static_cast<int>(this->to_parent().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Action.to_parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->to_parent(), target);
  }

  // repeated bytes readset = 21;
  for (int i = 0, n = this->readset_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(21, this->readset(i), target);
  }

  // repeated bytes writeset = 22;
  for (int i = 0, n = this->writeset_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(22, this->writeset(i), target);
  }

  // optional uint64 version = 31;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(31, this->version(), target);
  }

  // optional uint64 version_offset = 32;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(32, this->version_offset(), target);
  }

  // optional uint32 involved_machines = 43 [default = 1];
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(43, this->involved_machines(), target);
  }

  // repeated .Scalar misc = 51;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->misc_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        51, this->misc(static_cast<int>(i)), target);
  }

  // optional int32 action_status = 61;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(61, this->action_status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Action)
  return target;
}

size_t Action::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Action)
  size_t total_size = 0;

  if (has_input()) {
    // required bytes input = 14;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->input());
  }

  if (has_action_type()) {
    // required int32 action_type = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->action_type());
  }

  return total_size;
}
size_t Action::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Action)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000204) ^ 0x00000204) == 0) {  // All required fields are present.
    // required bytes input = 14;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->input());

    // required int32 action_type = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->action_type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes readset = 21;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->readset_size());
  for (int i = 0, n = this->readset_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->readset(i));
  }

  // repeated bytes writeset = 22;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->writeset_size());
  for (int i = 0, n = this->writeset_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->writeset(i));
  }

  // repeated .Scalar misc = 51;
  {
    unsigned int count = static_cast<unsigned int>(this->misc_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->misc(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string client_channel = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->client_channel());
    }

    // optional string store = 11;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->store());
    }

  }
  if (cached_has_bits & 0x000000f8u) {
    // optional bytes output = 15;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->output());
    }

    // optional string from_hash = 16;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->from_hash());
    }

    // optional string to_hash = 17;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->to_hash());
    }

    // optional string from_parent = 18;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->from_parent());
    }

    // optional string to_parent = 19;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->to_parent());
    }

  }
  // optional uint64 client_machine = 1;
  if (cached_has_bits & 0x00000100u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->client_machine());
  }

  if (cached_has_bits & 0x00007c00u) {
    // optional bool read_only = 13 [default = false];
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 + 1;
    }

    // optional int32 action_status = 61;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->action_status());
    }

    // optional uint64 version = 31;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->version());
    }

    // optional uint64 version_offset = 32;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->version_offset());
    }

    // optional uint32 involved_machines = 43 [default = 1];
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->involved_machines());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Action::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Action)
  GOOGLE_DCHECK_NE(&from, this);
  const Action* source =
      ::google::protobuf::DynamicCastToGenerated<Action>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Action)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Action)
    MergeFrom(*source);
  }
}

void Action::MergeFrom(const Action& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Action)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  readset_.MergeFrom(from.readset_);
  writeset_.MergeFrom(from.writeset_);
  misc_.MergeFrom(from.misc_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      client_channel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_channel_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      store_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.store_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      input_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.input_);
    }
    if (cached_has_bits & 0x00000008u) {
      _has_bits_[0] |= 0x00000008u;
      output_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_);
    }
    if (cached_has_bits & 0x00000010u) {
      _has_bits_[0] |= 0x00000010u;
      from_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_hash_);
    }
    if (cached_has_bits & 0x00000020u) {
      _has_bits_[0] |= 0x00000020u;
      to_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_hash_);
    }
    if (cached_has_bits & 0x00000040u) {
      _has_bits_[0] |= 0x00000040u;
      from_parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_parent_);
    }
    if (cached_has_bits & 0x00000080u) {
      _has_bits_[0] |= 0x00000080u;
      to_parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_parent_);
    }
  }
  if (cached_has_bits & 0x00007f00u) {
    if (cached_has_bits & 0x00000100u) {
      client_machine_ = from.client_machine_;
    }
    if (cached_has_bits & 0x00000200u) {
      action_type_ = from.action_type_;
    }
    if (cached_has_bits & 0x00000400u) {
      read_only_ = from.read_only_;
    }
    if (cached_has_bits & 0x00000800u) {
      action_status_ = from.action_status_;
    }
    if (cached_has_bits & 0x00001000u) {
      version_ = from.version_;
    }
    if (cached_has_bits & 0x00002000u) {
      version_offset_ = from.version_offset_;
    }
    if (cached_has_bits & 0x00004000u) {
      involved_machines_ = from.involved_machines_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Action::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Action)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Action::CopyFrom(const Action& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Action)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Action::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000204) != 0x00000204) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->misc())) return false;
  return true;
}

void Action::Swap(Action* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Action::InternalSwap(Action* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  readset_.InternalSwap(CastToBase(&other->readset_));
  writeset_.InternalSwap(CastToBase(&other->writeset_));
  CastToBase(&misc_)->InternalSwap(CastToBase(&other->misc_));
  client_channel_.Swap(&other->client_channel_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  store_.Swap(&other->store_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  input_.Swap(&other->input_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  output_.Swap(&other->output_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  from_hash_.Swap(&other->from_hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  to_hash_.Swap(&other->to_hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  from_parent_.Swap(&other->from_parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  to_parent_.Swap(&other->to_parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(client_machine_, other->client_machine_);
  swap(action_type_, other->action_type_);
  swap(read_only_, other->read_only_);
  swap(action_status_, other->action_status_);
  swap(version_, other->version_);
  swap(version_offset_, other->version_offset_);
  swap(involved_machines_, other->involved_machines_);
}

::google::protobuf::Metadata Action::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_action_2eproto);
  return ::file_level_metadata_action_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ActionBatch::InitAsDefaultInstance() {
}
class ActionBatch::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActionBatch::kEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActionBatch::ActionBatch()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ActionBatch)
}
ActionBatch::ActionBatch(const ActionBatch& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ActionBatch)
}

void ActionBatch::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ActionBatch_action_2eproto.base);
}

ActionBatch::~ActionBatch() {
  // @@protoc_insertion_point(destructor:ActionBatch)
  SharedDtor();
}

void ActionBatch::SharedDtor() {
}

void ActionBatch::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ActionBatch& ActionBatch::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ActionBatch_action_2eproto.base);
  return *internal_default_instance();
}


void ActionBatch::Clear() {
// @@protoc_insertion_point(message_clear_start:ActionBatch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ActionBatch::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ActionBatch*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .Action entries = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::Action::_InternalParse;
          object = msg->add_entries();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ActionBatch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ActionBatch)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Action entries = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ActionBatch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ActionBatch)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ActionBatch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ActionBatch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Action entries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->entries(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ActionBatch)
}

::google::protobuf::uint8* ActionBatch::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ActionBatch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Action entries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->entries(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActionBatch)
  return target;
}

size_t ActionBatch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActionBatch)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Action entries = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->entries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->entries(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ActionBatch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActionBatch)
  GOOGLE_DCHECK_NE(&from, this);
  const ActionBatch* source =
      ::google::protobuf::DynamicCastToGenerated<ActionBatch>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActionBatch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActionBatch)
    MergeFrom(*source);
  }
}

void ActionBatch::MergeFrom(const ActionBatch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActionBatch)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
}

void ActionBatch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActionBatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActionBatch::CopyFrom(const ActionBatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActionBatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionBatch::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->entries())) return false;
  return true;
}

void ActionBatch::Swap(ActionBatch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActionBatch::InternalSwap(ActionBatch* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&entries_)->InternalSwap(CastToBase(&other->entries_));
}

::google::protobuf::Metadata ActionBatch::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_action_2eproto);
  return ::file_level_metadata_action_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::Action* Arena::CreateMaybeMessage< ::Action >(Arena* arena) {
  return Arena::CreateInternal< ::Action >(arena);
}
template<> PROTOBUF_NOINLINE ::ActionBatch* Arena::CreateMaybeMessage< ::ActionBatch >(Arena* arena) {
  return Arena::CreateInternal< ::ActionBatch >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
