// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: scalar.proto

#ifndef PROTOBUF_INCLUDED_scalar_2eproto
#define PROTOBUF_INCLUDED_scalar_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_scalar_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_scalar_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_scalar_2eproto();
class EmptyProto;
class EmptyProtoDefaultTypeInternal;
extern EmptyProtoDefaultTypeInternal _EmptyProto_default_instance_;
class PairSequence;
class PairSequenceDefaultTypeInternal;
extern PairSequenceDefaultTypeInternal _PairSequence_default_instance_;
class Scalar;
class ScalarDefaultTypeInternal;
extern ScalarDefaultTypeInternal _Scalar_default_instance_;
class UInt64Pair;
class UInt64PairDefaultTypeInternal;
extern UInt64PairDefaultTypeInternal _UInt64Pair_default_instance_;
namespace google {
namespace protobuf {
template<> ::EmptyProto* Arena::CreateMaybeMessage<::EmptyProto>(Arena*);
template<> ::PairSequence* Arena::CreateMaybeMessage<::PairSequence>(Arena*);
template<> ::Scalar* Arena::CreateMaybeMessage<::Scalar>(Arena*);
template<> ::UInt64Pair* Arena::CreateMaybeMessage<::UInt64Pair>(Arena*);
}  // namespace protobuf
}  // namespace google

enum Scalar_ScalarType {
  Scalar_ScalarType_UNIT = 1,
  Scalar_ScalarType_BOOL = 2,
  Scalar_ScalarType_INT32 = 3,
  Scalar_ScalarType_INT64 = 4,
  Scalar_ScalarType_UINT32 = 5,
  Scalar_ScalarType_UINT64 = 6,
  Scalar_ScalarType_FLOAT = 7,
  Scalar_ScalarType_DOUBLE = 8,
  Scalar_ScalarType_STRING = 9
};
bool Scalar_ScalarType_IsValid(int value);
const Scalar_ScalarType Scalar_ScalarType_ScalarType_MIN = Scalar_ScalarType_UNIT;
const Scalar_ScalarType Scalar_ScalarType_ScalarType_MAX = Scalar_ScalarType_STRING;
const int Scalar_ScalarType_ScalarType_ARRAYSIZE = Scalar_ScalarType_ScalarType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Scalar_ScalarType_descriptor();
inline const ::std::string& Scalar_ScalarType_Name(Scalar_ScalarType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Scalar_ScalarType_descriptor(), value);
}
inline bool Scalar_ScalarType_Parse(
    const ::std::string& name, Scalar_ScalarType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Scalar_ScalarType>(
    Scalar_ScalarType_descriptor(), name, value);
}
// ===================================================================

class Scalar :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Scalar) */ {
 public:
  Scalar();
  virtual ~Scalar();

  Scalar(const Scalar& from);

  inline Scalar& operator=(const Scalar& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Scalar(Scalar&& from) noexcept
    : Scalar() {
    *this = ::std::move(from);
  }

  inline Scalar& operator=(Scalar&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Scalar& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Scalar* internal_default_instance() {
    return reinterpret_cast<const Scalar*>(
               &_Scalar_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Scalar* other);
  friend void swap(Scalar& a, Scalar& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Scalar* New() const final {
    return CreateMaybeMessage<Scalar>(nullptr);
  }

  Scalar* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Scalar>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Scalar& from);
  void MergeFrom(const Scalar& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Scalar* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Scalar_ScalarType ScalarType;
  static const ScalarType UNIT =
    Scalar_ScalarType_UNIT;
  static const ScalarType BOOL =
    Scalar_ScalarType_BOOL;
  static const ScalarType INT32 =
    Scalar_ScalarType_INT32;
  static const ScalarType INT64 =
    Scalar_ScalarType_INT64;
  static const ScalarType UINT32 =
    Scalar_ScalarType_UINT32;
  static const ScalarType UINT64 =
    Scalar_ScalarType_UINT64;
  static const ScalarType FLOAT =
    Scalar_ScalarType_FLOAT;
  static const ScalarType DOUBLE =
    Scalar_ScalarType_DOUBLE;
  static const ScalarType STRING =
    Scalar_ScalarType_STRING;
  static inline bool ScalarType_IsValid(int value) {
    return Scalar_ScalarType_IsValid(value);
  }
  static const ScalarType ScalarType_MIN =
    Scalar_ScalarType_ScalarType_MIN;
  static const ScalarType ScalarType_MAX =
    Scalar_ScalarType_ScalarType_MAX;
  static const int ScalarType_ARRAYSIZE =
    Scalar_ScalarType_ScalarType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ScalarType_descriptor() {
    return Scalar_ScalarType_descriptor();
  }
  static inline const ::std::string& ScalarType_Name(ScalarType value) {
    return Scalar_ScalarType_Name(value);
  }
  static inline bool ScalarType_Parse(const ::std::string& name,
      ScalarType* value) {
    return Scalar_ScalarType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string string_value = 9;
  bool has_string_value() const;
  void clear_string_value();
  static const int kStringValueFieldNumber = 9;
  const ::std::string& string_value() const;
  void set_string_value(const ::std::string& value);
  #if LANG_CXX11
  void set_string_value(::std::string&& value);
  #endif
  void set_string_value(const char* value);
  void set_string_value(const char* value, size_t size);
  ::std::string* mutable_string_value();
  ::std::string* release_string_value();
  void set_allocated_string_value(::std::string* string_value);

  // optional bool bool_value = 2;
  bool has_bool_value() const;
  void clear_bool_value();
  static const int kBoolValueFieldNumber = 2;
  bool bool_value() const;
  void set_bool_value(bool value);

  // optional int32 int32_value = 3;
  bool has_int32_value() const;
  void clear_int32_value();
  static const int kInt32ValueFieldNumber = 3;
  ::google::protobuf::int32 int32_value() const;
  void set_int32_value(::google::protobuf::int32 value);

  // optional int64 int64_value = 4;
  bool has_int64_value() const;
  void clear_int64_value();
  static const int kInt64ValueFieldNumber = 4;
  ::google::protobuf::int64 int64_value() const;
  void set_int64_value(::google::protobuf::int64 value);

  // optional uint64 uint64_value = 6;
  bool has_uint64_value() const;
  void clear_uint64_value();
  static const int kUint64ValueFieldNumber = 6;
  ::google::protobuf::uint64 uint64_value() const;
  void set_uint64_value(::google::protobuf::uint64 value);

  // optional uint32 uint32_value = 5;
  bool has_uint32_value() const;
  void clear_uint32_value();
  static const int kUint32ValueFieldNumber = 5;
  ::google::protobuf::uint32 uint32_value() const;
  void set_uint32_value(::google::protobuf::uint32 value);

  // optional float float_value = 7;
  bool has_float_value() const;
  void clear_float_value();
  static const int kFloatValueFieldNumber = 7;
  float float_value() const;
  void set_float_value(float value);

  // optional double double_value = 8;
  bool has_double_value() const;
  void clear_double_value();
  static const int kDoubleValueFieldNumber = 8;
  double double_value() const;
  void set_double_value(double value);

  // required .Scalar.ScalarType type = 1 [default = UNIT];
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::Scalar_ScalarType type() const;
  void set_type(::Scalar_ScalarType value);

  // @@protoc_insertion_point(class_scope:Scalar)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr string_value_;
  bool bool_value_;
  ::google::protobuf::int32 int32_value_;
  ::google::protobuf::int64 int64_value_;
  ::google::protobuf::uint64 uint64_value_;
  ::google::protobuf::uint32 uint32_value_;
  float float_value_;
  double double_value_;
  int type_;
  friend struct ::TableStruct_scalar_2eproto;
};
// -------------------------------------------------------------------

class EmptyProto :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:EmptyProto) */ {
 public:
  EmptyProto();
  virtual ~EmptyProto();

  EmptyProto(const EmptyProto& from);

  inline EmptyProto& operator=(const EmptyProto& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EmptyProto(EmptyProto&& from) noexcept
    : EmptyProto() {
    *this = ::std::move(from);
  }

  inline EmptyProto& operator=(EmptyProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const EmptyProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EmptyProto* internal_default_instance() {
    return reinterpret_cast<const EmptyProto*>(
               &_EmptyProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(EmptyProto* other);
  friend void swap(EmptyProto& a, EmptyProto& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EmptyProto* New() const final {
    return CreateMaybeMessage<EmptyProto>(nullptr);
  }

  EmptyProto* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EmptyProto>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EmptyProto& from);
  void MergeFrom(const EmptyProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EmptyProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:EmptyProto)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_scalar_2eproto;
};
// -------------------------------------------------------------------

class UInt64Pair :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UInt64Pair) */ {
 public:
  UInt64Pair();
  virtual ~UInt64Pair();

  UInt64Pair(const UInt64Pair& from);

  inline UInt64Pair& operator=(const UInt64Pair& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UInt64Pair(UInt64Pair&& from) noexcept
    : UInt64Pair() {
    *this = ::std::move(from);
  }

  inline UInt64Pair& operator=(UInt64Pair&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const UInt64Pair& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UInt64Pair* internal_default_instance() {
    return reinterpret_cast<const UInt64Pair*>(
               &_UInt64Pair_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(UInt64Pair* other);
  friend void swap(UInt64Pair& a, UInt64Pair& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UInt64Pair* New() const final {
    return CreateMaybeMessage<UInt64Pair>(nullptr);
  }

  UInt64Pair* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UInt64Pair>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UInt64Pair& from);
  void MergeFrom(const UInt64Pair& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UInt64Pair* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 first = 1;
  bool has_first() const;
  void clear_first();
  static const int kFirstFieldNumber = 1;
  ::google::protobuf::uint64 first() const;
  void set_first(::google::protobuf::uint64 value);

  // optional uint64 second = 2;
  bool has_second() const;
  void clear_second();
  static const int kSecondFieldNumber = 2;
  ::google::protobuf::uint64 second() const;
  void set_second(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:UInt64Pair)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 first_;
  ::google::protobuf::uint64 second_;
  friend struct ::TableStruct_scalar_2eproto;
};
// -------------------------------------------------------------------

class PairSequence :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PairSequence) */ {
 public:
  PairSequence();
  virtual ~PairSequence();

  PairSequence(const PairSequence& from);

  inline PairSequence& operator=(const PairSequence& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PairSequence(PairSequence&& from) noexcept
    : PairSequence() {
    *this = ::std::move(from);
  }

  inline PairSequence& operator=(PairSequence&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PairSequence& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PairSequence* internal_default_instance() {
    return reinterpret_cast<const PairSequence*>(
               &_PairSequence_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(PairSequence* other);
  friend void swap(PairSequence& a, PairSequence& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PairSequence* New() const final {
    return CreateMaybeMessage<PairSequence>(nullptr);
  }

  PairSequence* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PairSequence>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PairSequence& from);
  void MergeFrom(const PairSequence& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PairSequence* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .UInt64Pair pairs = 1;
  int pairs_size() const;
  void clear_pairs();
  static const int kPairsFieldNumber = 1;
  ::UInt64Pair* mutable_pairs(int index);
  ::google::protobuf::RepeatedPtrField< ::UInt64Pair >*
      mutable_pairs();
  const ::UInt64Pair& pairs(int index) const;
  ::UInt64Pair* add_pairs();
  const ::google::protobuf::RepeatedPtrField< ::UInt64Pair >&
      pairs() const;

  // optional uint64 misc = 2;
  bool has_misc() const;
  void clear_misc();
  static const int kMiscFieldNumber = 2;
  ::google::protobuf::uint64 misc() const;
  void set_misc(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:PairSequence)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::UInt64Pair > pairs_;
  ::google::protobuf::uint64 misc_;
  friend struct ::TableStruct_scalar_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Scalar

// required .Scalar.ScalarType type = 1 [default = UNIT];
inline bool Scalar::has_type() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Scalar::clear_type() {
  type_ = 1;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::Scalar_ScalarType Scalar::type() const {
  // @@protoc_insertion_point(field_get:Scalar.type)
  return static_cast< ::Scalar_ScalarType >(type_);
}
inline void Scalar::set_type(::Scalar_ScalarType value) {
  assert(::Scalar_ScalarType_IsValid(value));
  _has_bits_[0] |= 0x00000100u;
  type_ = value;
  // @@protoc_insertion_point(field_set:Scalar.type)
}

// optional bool bool_value = 2;
inline bool Scalar::has_bool_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Scalar::clear_bool_value() {
  bool_value_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool Scalar::bool_value() const {
  // @@protoc_insertion_point(field_get:Scalar.bool_value)
  return bool_value_;
}
inline void Scalar::set_bool_value(bool value) {
  _has_bits_[0] |= 0x00000002u;
  bool_value_ = value;
  // @@protoc_insertion_point(field_set:Scalar.bool_value)
}

// optional int32 int32_value = 3;
inline bool Scalar::has_int32_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Scalar::clear_int32_value() {
  int32_value_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 Scalar::int32_value() const {
  // @@protoc_insertion_point(field_get:Scalar.int32_value)
  return int32_value_;
}
inline void Scalar::set_int32_value(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  int32_value_ = value;
  // @@protoc_insertion_point(field_set:Scalar.int32_value)
}

// optional int64 int64_value = 4;
inline bool Scalar::has_int64_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Scalar::clear_int64_value() {
  int64_value_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int64 Scalar::int64_value() const {
  // @@protoc_insertion_point(field_get:Scalar.int64_value)
  return int64_value_;
}
inline void Scalar::set_int64_value(::google::protobuf::int64 value) {
  _has_bits_[0] |= 0x00000008u;
  int64_value_ = value;
  // @@protoc_insertion_point(field_set:Scalar.int64_value)
}

// optional uint32 uint32_value = 5;
inline bool Scalar::has_uint32_value() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Scalar::clear_uint32_value() {
  uint32_value_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 Scalar::uint32_value() const {
  // @@protoc_insertion_point(field_get:Scalar.uint32_value)
  return uint32_value_;
}
inline void Scalar::set_uint32_value(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  uint32_value_ = value;
  // @@protoc_insertion_point(field_set:Scalar.uint32_value)
}

// optional uint64 uint64_value = 6;
inline bool Scalar::has_uint64_value() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Scalar::clear_uint64_value() {
  uint64_value_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint64 Scalar::uint64_value() const {
  // @@protoc_insertion_point(field_get:Scalar.uint64_value)
  return uint64_value_;
}
inline void Scalar::set_uint64_value(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000010u;
  uint64_value_ = value;
  // @@protoc_insertion_point(field_set:Scalar.uint64_value)
}

// optional float float_value = 7;
inline bool Scalar::has_float_value() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Scalar::clear_float_value() {
  float_value_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline float Scalar::float_value() const {
  // @@protoc_insertion_point(field_get:Scalar.float_value)
  return float_value_;
}
inline void Scalar::set_float_value(float value) {
  _has_bits_[0] |= 0x00000040u;
  float_value_ = value;
  // @@protoc_insertion_point(field_set:Scalar.float_value)
}

// optional double double_value = 8;
inline bool Scalar::has_double_value() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Scalar::clear_double_value() {
  double_value_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline double Scalar::double_value() const {
  // @@protoc_insertion_point(field_get:Scalar.double_value)
  return double_value_;
}
inline void Scalar::set_double_value(double value) {
  _has_bits_[0] |= 0x00000080u;
  double_value_ = value;
  // @@protoc_insertion_point(field_set:Scalar.double_value)
}

// optional string string_value = 9;
inline bool Scalar::has_string_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Scalar::clear_string_value() {
  string_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& Scalar::string_value() const {
  // @@protoc_insertion_point(field_get:Scalar.string_value)
  return string_value_.GetNoArena();
}
inline void Scalar::set_string_value(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Scalar.string_value)
}
#if LANG_CXX11
inline void Scalar::set_string_value(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  string_value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Scalar.string_value)
}
#endif
inline void Scalar::set_string_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Scalar.string_value)
}
inline void Scalar::set_string_value(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Scalar.string_value)
}
inline ::std::string* Scalar::mutable_string_value() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:Scalar.string_value)
  return string_value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Scalar::release_string_value() {
  // @@protoc_insertion_point(field_release:Scalar.string_value)
  if (!has_string_value()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return string_value_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Scalar::set_allocated_string_value(::std::string* string_value) {
  if (string_value != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  string_value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), string_value);
  // @@protoc_insertion_point(field_set_allocated:Scalar.string_value)
}

// -------------------------------------------------------------------

// EmptyProto

// -------------------------------------------------------------------

// UInt64Pair

// optional uint64 first = 1;
inline bool UInt64Pair::has_first() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UInt64Pair::clear_first() {
  first_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 UInt64Pair::first() const {
  // @@protoc_insertion_point(field_get:UInt64Pair.first)
  return first_;
}
inline void UInt64Pair::set_first(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  first_ = value;
  // @@protoc_insertion_point(field_set:UInt64Pair.first)
}

// optional uint64 second = 2;
inline bool UInt64Pair::has_second() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UInt64Pair::clear_second() {
  second_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint64 UInt64Pair::second() const {
  // @@protoc_insertion_point(field_get:UInt64Pair.second)
  return second_;
}
inline void UInt64Pair::set_second(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  second_ = value;
  // @@protoc_insertion_point(field_set:UInt64Pair.second)
}

// -------------------------------------------------------------------

// PairSequence

// repeated .UInt64Pair pairs = 1;
inline int PairSequence::pairs_size() const {
  return pairs_.size();
}
inline void PairSequence::clear_pairs() {
  pairs_.Clear();
}
inline ::UInt64Pair* PairSequence::mutable_pairs(int index) {
  // @@protoc_insertion_point(field_mutable:PairSequence.pairs)
  return pairs_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::UInt64Pair >*
PairSequence::mutable_pairs() {
  // @@protoc_insertion_point(field_mutable_list:PairSequence.pairs)
  return &pairs_;
}
inline const ::UInt64Pair& PairSequence::pairs(int index) const {
  // @@protoc_insertion_point(field_get:PairSequence.pairs)
  return pairs_.Get(index);
}
inline ::UInt64Pair* PairSequence::add_pairs() {
  // @@protoc_insertion_point(field_add:PairSequence.pairs)
  return pairs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::UInt64Pair >&
PairSequence::pairs() const {
  // @@protoc_insertion_point(field_list:PairSequence.pairs)
  return pairs_;
}

// optional uint64 misc = 2;
inline bool PairSequence::has_misc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PairSequence::clear_misc() {
  misc_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 PairSequence::misc() const {
  // @@protoc_insertion_point(field_get:PairSequence.misc)
  return misc_;
}
inline void PairSequence::set_misc(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  misc_ = value;
  // @@protoc_insertion_point(field_set:PairSequence.misc)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Scalar_ScalarType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Scalar_ScalarType>() {
  return ::Scalar_ScalarType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_scalar_2eproto
