// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mvstore.proto

#include "mvstore.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

class MVStoreWriteInputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MVStoreWriteInput> _instance;
} _MVStoreWriteInput_default_instance_;
class MVStoreReadInputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MVStoreReadInput> _instance;
} _MVStoreReadInput_default_instance_;
class MVStoreReadOutputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MVStoreReadOutput> _instance;
} _MVStoreReadOutput_default_instance_;
class MVStoreAppendInputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MVStoreAppendInput> _instance;
} _MVStoreAppendInput_default_instance_;
class MVStoreAppendOutputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MVStoreAppendOutput> _instance;
} _MVStoreAppendOutput_default_instance_;
class MVStoreIncrementInputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MVStoreIncrementInput> _instance;
} _MVStoreIncrementInput_default_instance_;
class MVStoreIncrementOutputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MVStoreIncrementOutput> _instance;
} _MVStoreIncrementOutput_default_instance_;
class MVStoreMicroInputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MVStoreMicroInput> _instance;
} _MVStoreMicroInput_default_instance_;
class MVStoreMicroOutputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MVStoreMicroOutput> _instance;
} _MVStoreMicroOutput_default_instance_;
static void InitDefaultsMVStoreWriteInput_mvstore_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MVStoreWriteInput_default_instance_;
    new (ptr) ::MVStoreWriteInput();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MVStoreWriteInput::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MVStoreWriteInput_mvstore_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMVStoreWriteInput_mvstore_2eproto}, {}};

static void InitDefaultsMVStoreReadInput_mvstore_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MVStoreReadInput_default_instance_;
    new (ptr) ::MVStoreReadInput();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MVStoreReadInput::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MVStoreReadInput_mvstore_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMVStoreReadInput_mvstore_2eproto}, {}};

static void InitDefaultsMVStoreReadOutput_mvstore_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MVStoreReadOutput_default_instance_;
    new (ptr) ::MVStoreReadOutput();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MVStoreReadOutput::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MVStoreReadOutput_mvstore_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMVStoreReadOutput_mvstore_2eproto}, {}};

static void InitDefaultsMVStoreAppendInput_mvstore_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MVStoreAppendInput_default_instance_;
    new (ptr) ::MVStoreAppendInput();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MVStoreAppendInput::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MVStoreAppendInput_mvstore_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMVStoreAppendInput_mvstore_2eproto}, {}};

static void InitDefaultsMVStoreAppendOutput_mvstore_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MVStoreAppendOutput_default_instance_;
    new (ptr) ::MVStoreAppendOutput();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MVStoreAppendOutput::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MVStoreAppendOutput_mvstore_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMVStoreAppendOutput_mvstore_2eproto}, {}};

static void InitDefaultsMVStoreIncrementInput_mvstore_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MVStoreIncrementInput_default_instance_;
    new (ptr) ::MVStoreIncrementInput();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MVStoreIncrementInput::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MVStoreIncrementInput_mvstore_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMVStoreIncrementInput_mvstore_2eproto}, {}};

static void InitDefaultsMVStoreIncrementOutput_mvstore_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MVStoreIncrementOutput_default_instance_;
    new (ptr) ::MVStoreIncrementOutput();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MVStoreIncrementOutput::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MVStoreIncrementOutput_mvstore_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMVStoreIncrementOutput_mvstore_2eproto}, {}};

static void InitDefaultsMVStoreMicroInput_mvstore_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MVStoreMicroInput_default_instance_;
    new (ptr) ::MVStoreMicroInput();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MVStoreMicroInput::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MVStoreMicroInput_mvstore_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMVStoreMicroInput_mvstore_2eproto}, {}};

static void InitDefaultsMVStoreMicroOutput_mvstore_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MVStoreMicroOutput_default_instance_;
    new (ptr) ::MVStoreMicroOutput();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MVStoreMicroOutput::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MVStoreMicroOutput_mvstore_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMVStoreMicroOutput_mvstore_2eproto}, {}};

void InitDefaults_mvstore_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_MVStoreWriteInput_mvstore_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MVStoreReadInput_mvstore_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MVStoreReadOutput_mvstore_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MVStoreAppendInput_mvstore_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MVStoreAppendOutput_mvstore_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MVStoreIncrementInput_mvstore_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MVStoreIncrementOutput_mvstore_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MVStoreMicroInput_mvstore_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MVStoreMicroOutput_mvstore_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_mvstore_2eproto[9];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_mvstore_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_mvstore_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_mvstore_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::MVStoreWriteInput, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::MVStoreWriteInput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MVStoreWriteInput, key_),
  PROTOBUF_FIELD_OFFSET(::MVStoreWriteInput, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::MVStoreReadInput, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::MVStoreReadInput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MVStoreReadInput, key_),
  0,
  PROTOBUF_FIELD_OFFSET(::MVStoreReadOutput, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::MVStoreReadOutput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MVStoreReadOutput, exists_),
  PROTOBUF_FIELD_OFFSET(::MVStoreReadOutput, value_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::MVStoreAppendInput, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::MVStoreAppendInput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MVStoreAppendInput, key_),
  PROTOBUF_FIELD_OFFSET(::MVStoreAppendInput, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::MVStoreAppendOutput, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::MVStoreAppendOutput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MVStoreAppendOutput, success_),
  0,
  PROTOBUF_FIELD_OFFSET(::MVStoreIncrementInput, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::MVStoreIncrementInput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MVStoreIncrementInput, key_),
  0,
  PROTOBUF_FIELD_OFFSET(::MVStoreIncrementOutput, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::MVStoreIncrementOutput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MVStoreIncrementOutput, success_),
  0,
  PROTOBUF_FIELD_OFFSET(::MVStoreMicroInput, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::MVStoreMicroInput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MVStoreMicroInput, keys_),
  PROTOBUF_FIELD_OFFSET(::MVStoreMicroInput, writes_),
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::MVStoreMicroOutput, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::MVStoreMicroOutput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MVStoreMicroOutput, success_),
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::MVStoreWriteInput)},
  { 9, 15, sizeof(::MVStoreReadInput)},
  { 16, 23, sizeof(::MVStoreReadOutput)},
  { 25, 32, sizeof(::MVStoreAppendInput)},
  { 34, 40, sizeof(::MVStoreAppendOutput)},
  { 41, 47, sizeof(::MVStoreIncrementInput)},
  { 48, 54, sizeof(::MVStoreIncrementOutput)},
  { 55, 62, sizeof(::MVStoreMicroInput)},
  { 64, 70, sizeof(::MVStoreMicroOutput)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MVStoreWriteInput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MVStoreReadInput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MVStoreReadOutput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MVStoreAppendInput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MVStoreAppendOutput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MVStoreIncrementInput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MVStoreIncrementOutput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MVStoreMicroInput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MVStoreMicroOutput_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_mvstore_2eproto = {
  {}, AddDescriptors_mvstore_2eproto, "mvstore.proto", schemas,
  file_default_instances, TableStruct_mvstore_2eproto::offsets,
  file_level_metadata_mvstore_2eproto, 9, file_level_enum_descriptors_mvstore_2eproto, file_level_service_descriptors_mvstore_2eproto,
};

const char descriptor_table_protodef_mvstore_2eproto[] =
  "\n\rmvstore.proto\"/\n\021MVStoreWriteInput\022\013\n\003"
  "key\030\001 \002(\014\022\r\n\005value\030\002 \002(\014\"\037\n\020MVStoreReadI"
  "nput\022\013\n\003key\030\001 \002(\014\"2\n\021MVStoreReadOutput\022\016"
  "\n\006exists\030\001 \002(\010\022\r\n\005value\030\002 \001(\014\"0\n\022MVStore"
  "AppendInput\022\013\n\003key\030\001 \002(\014\022\r\n\005value\030\002 \002(\014\""
  "&\n\023MVStoreAppendOutput\022\017\n\007success\030\001 \002(\010\""
  "$\n\025MVStoreIncrementInput\022\013\n\003key\030\001 \002(\014\")\n"
  "\026MVStoreIncrementOutput\022\017\n\007success\030\001 \002(\010"
  "\"5\n\021MVStoreMicroInput\022\014\n\004keys\030\001 \003(\014\022\022\n\006w"
  "rites\030\002 \001(\005:\00210\"%\n\022MVStoreMicroOutput\022\017\n"
  "\007success\030\001 \002(\010"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_mvstore_2eproto = {
  false, InitDefaults_mvstore_2eproto, 
  descriptor_table_protodef_mvstore_2eproto,
  "mvstore.proto", &assign_descriptors_table_mvstore_2eproto, 414,
};

void AddDescriptors_mvstore_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_mvstore_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_mvstore_2eproto = []() { AddDescriptors_mvstore_2eproto(); return true; }();

// ===================================================================

void MVStoreWriteInput::InitAsDefaultInstance() {
}
class MVStoreWriteInput::HasBitSetters {
 public:
  static void set_has_key(MVStoreWriteInput* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_value(MVStoreWriteInput* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MVStoreWriteInput::kKeyFieldNumber;
const int MVStoreWriteInput::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MVStoreWriteInput::MVStoreWriteInput()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MVStoreWriteInput)
}
MVStoreWriteInput::MVStoreWriteInput(const MVStoreWriteInput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:MVStoreWriteInput)
}

void MVStoreWriteInput::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MVStoreWriteInput_mvstore_2eproto.base);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MVStoreWriteInput::~MVStoreWriteInput() {
  // @@protoc_insertion_point(destructor:MVStoreWriteInput)
  SharedDtor();
}

void MVStoreWriteInput::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MVStoreWriteInput::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MVStoreWriteInput& MVStoreWriteInput::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MVStoreWriteInput_mvstore_2eproto.base);
  return *internal_default_instance();
}


void MVStoreWriteInput::Clear() {
// @@protoc_insertion_point(message_clear_start:MVStoreWriteInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      value_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MVStoreWriteInput::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MVStoreWriteInput*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required bytes key = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required bytes value = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_value();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MVStoreWriteInput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MVStoreWriteInput)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MVStoreWriteInput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MVStoreWriteInput)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MVStoreWriteInput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MVStoreWriteInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->key(), output);
  }

  // required bytes value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MVStoreWriteInput)
}

::google::protobuf::uint8* MVStoreWriteInput::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MVStoreWriteInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes key = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->key(), target);
  }

  // required bytes value = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MVStoreWriteInput)
  return target;
}

size_t MVStoreWriteInput::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MVStoreWriteInput)
  size_t total_size = 0;

  if (has_key()) {
    // required bytes key = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  if (has_value()) {
    // required bytes value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  return total_size;
}
size_t MVStoreWriteInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MVStoreWriteInput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes key = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());

    // required bytes value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MVStoreWriteInput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MVStoreWriteInput)
  GOOGLE_DCHECK_NE(&from, this);
  const MVStoreWriteInput* source =
      ::google::protobuf::DynamicCastToGenerated<MVStoreWriteInput>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MVStoreWriteInput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MVStoreWriteInput)
    MergeFrom(*source);
  }
}

void MVStoreWriteInput::MergeFrom(const MVStoreWriteInput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MVStoreWriteInput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
}

void MVStoreWriteInput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MVStoreWriteInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MVStoreWriteInput::CopyFrom(const MVStoreWriteInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MVStoreWriteInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MVStoreWriteInput::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void MVStoreWriteInput::Swap(MVStoreWriteInput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MVStoreWriteInput::InternalSwap(MVStoreWriteInput* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata MVStoreWriteInput::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_mvstore_2eproto);
  return ::file_level_metadata_mvstore_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MVStoreReadInput::InitAsDefaultInstance() {
}
class MVStoreReadInput::HasBitSetters {
 public:
  static void set_has_key(MVStoreReadInput* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MVStoreReadInput::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MVStoreReadInput::MVStoreReadInput()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MVStoreReadInput)
}
MVStoreReadInput::MVStoreReadInput(const MVStoreReadInput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  // @@protoc_insertion_point(copy_constructor:MVStoreReadInput)
}

void MVStoreReadInput::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MVStoreReadInput_mvstore_2eproto.base);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MVStoreReadInput::~MVStoreReadInput() {
  // @@protoc_insertion_point(destructor:MVStoreReadInput)
  SharedDtor();
}

void MVStoreReadInput::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MVStoreReadInput::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MVStoreReadInput& MVStoreReadInput::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MVStoreReadInput_mvstore_2eproto.base);
  return *internal_default_instance();
}


void MVStoreReadInput::Clear() {
// @@protoc_insertion_point(message_clear_start:MVStoreReadInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    key_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MVStoreReadInput::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MVStoreReadInput*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required bytes key = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MVStoreReadInput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MVStoreReadInput)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MVStoreReadInput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MVStoreReadInput)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MVStoreReadInput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MVStoreReadInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MVStoreReadInput)
}

::google::protobuf::uint8* MVStoreReadInput::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MVStoreReadInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes key = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MVStoreReadInput)
  return target;
}

size_t MVStoreReadInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MVStoreReadInput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bytes key = 1;
  if (has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MVStoreReadInput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MVStoreReadInput)
  GOOGLE_DCHECK_NE(&from, this);
  const MVStoreReadInput* source =
      ::google::protobuf::DynamicCastToGenerated<MVStoreReadInput>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MVStoreReadInput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MVStoreReadInput)
    MergeFrom(*source);
  }
}

void MVStoreReadInput::MergeFrom(const MVStoreReadInput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MVStoreReadInput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_key()) {
    _has_bits_[0] |= 0x00000001u;
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
}

void MVStoreReadInput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MVStoreReadInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MVStoreReadInput::CopyFrom(const MVStoreReadInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MVStoreReadInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MVStoreReadInput::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void MVStoreReadInput::Swap(MVStoreReadInput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MVStoreReadInput::InternalSwap(MVStoreReadInput* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata MVStoreReadInput::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_mvstore_2eproto);
  return ::file_level_metadata_mvstore_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MVStoreReadOutput::InitAsDefaultInstance() {
}
class MVStoreReadOutput::HasBitSetters {
 public:
  static void set_has_exists(MVStoreReadOutput* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_value(MVStoreReadOutput* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MVStoreReadOutput::kExistsFieldNumber;
const int MVStoreReadOutput::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MVStoreReadOutput::MVStoreReadOutput()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MVStoreReadOutput)
}
MVStoreReadOutput::MVStoreReadOutput(const MVStoreReadOutput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  exists_ = from.exists_;
  // @@protoc_insertion_point(copy_constructor:MVStoreReadOutput)
}

void MVStoreReadOutput::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MVStoreReadOutput_mvstore_2eproto.base);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exists_ = false;
}

MVStoreReadOutput::~MVStoreReadOutput() {
  // @@protoc_insertion_point(destructor:MVStoreReadOutput)
  SharedDtor();
}

void MVStoreReadOutput::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MVStoreReadOutput::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MVStoreReadOutput& MVStoreReadOutput::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MVStoreReadOutput_mvstore_2eproto.base);
  return *internal_default_instance();
}


void MVStoreReadOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:MVStoreReadOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    value_.ClearNonDefaultToEmptyNoArena();
  }
  exists_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MVStoreReadOutput::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MVStoreReadOutput*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required bool exists = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_exists(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes value = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_value();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MVStoreReadOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MVStoreReadOutput)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool exists = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_exists(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &exists_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MVStoreReadOutput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MVStoreReadOutput)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MVStoreReadOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MVStoreReadOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool exists = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->exists(), output);
  }

  // optional bytes value = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MVStoreReadOutput)
}

::google::protobuf::uint8* MVStoreReadOutput::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MVStoreReadOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool exists = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->exists(), target);
  }

  // optional bytes value = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MVStoreReadOutput)
  return target;
}

size_t MVStoreReadOutput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MVStoreReadOutput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bool exists = 1;
  if (has_exists()) {
    total_size += 1 + 1;
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes value = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MVStoreReadOutput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MVStoreReadOutput)
  GOOGLE_DCHECK_NE(&from, this);
  const MVStoreReadOutput* source =
      ::google::protobuf::DynamicCastToGenerated<MVStoreReadOutput>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MVStoreReadOutput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MVStoreReadOutput)
    MergeFrom(*source);
  }
}

void MVStoreReadOutput::MergeFrom(const MVStoreReadOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MVStoreReadOutput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
    if (cached_has_bits & 0x00000002u) {
      exists_ = from.exists_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MVStoreReadOutput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MVStoreReadOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MVStoreReadOutput::CopyFrom(const MVStoreReadOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MVStoreReadOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MVStoreReadOutput::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void MVStoreReadOutput::Swap(MVStoreReadOutput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MVStoreReadOutput::InternalSwap(MVStoreReadOutput* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(exists_, other->exists_);
}

::google::protobuf::Metadata MVStoreReadOutput::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_mvstore_2eproto);
  return ::file_level_metadata_mvstore_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MVStoreAppendInput::InitAsDefaultInstance() {
}
class MVStoreAppendInput::HasBitSetters {
 public:
  static void set_has_key(MVStoreAppendInput* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_value(MVStoreAppendInput* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MVStoreAppendInput::kKeyFieldNumber;
const int MVStoreAppendInput::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MVStoreAppendInput::MVStoreAppendInput()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MVStoreAppendInput)
}
MVStoreAppendInput::MVStoreAppendInput(const MVStoreAppendInput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:MVStoreAppendInput)
}

void MVStoreAppendInput::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MVStoreAppendInput_mvstore_2eproto.base);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MVStoreAppendInput::~MVStoreAppendInput() {
  // @@protoc_insertion_point(destructor:MVStoreAppendInput)
  SharedDtor();
}

void MVStoreAppendInput::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MVStoreAppendInput::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MVStoreAppendInput& MVStoreAppendInput::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MVStoreAppendInput_mvstore_2eproto.base);
  return *internal_default_instance();
}


void MVStoreAppendInput::Clear() {
// @@protoc_insertion_point(message_clear_start:MVStoreAppendInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      value_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MVStoreAppendInput::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MVStoreAppendInput*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required bytes key = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required bytes value = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_value();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MVStoreAppendInput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MVStoreAppendInput)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MVStoreAppendInput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MVStoreAppendInput)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MVStoreAppendInput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MVStoreAppendInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->key(), output);
  }

  // required bytes value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MVStoreAppendInput)
}

::google::protobuf::uint8* MVStoreAppendInput::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MVStoreAppendInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes key = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->key(), target);
  }

  // required bytes value = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MVStoreAppendInput)
  return target;
}

size_t MVStoreAppendInput::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MVStoreAppendInput)
  size_t total_size = 0;

  if (has_key()) {
    // required bytes key = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  if (has_value()) {
    // required bytes value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  return total_size;
}
size_t MVStoreAppendInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MVStoreAppendInput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes key = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());

    // required bytes value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MVStoreAppendInput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MVStoreAppendInput)
  GOOGLE_DCHECK_NE(&from, this);
  const MVStoreAppendInput* source =
      ::google::protobuf::DynamicCastToGenerated<MVStoreAppendInput>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MVStoreAppendInput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MVStoreAppendInput)
    MergeFrom(*source);
  }
}

void MVStoreAppendInput::MergeFrom(const MVStoreAppendInput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MVStoreAppendInput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
}

void MVStoreAppendInput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MVStoreAppendInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MVStoreAppendInput::CopyFrom(const MVStoreAppendInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MVStoreAppendInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MVStoreAppendInput::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void MVStoreAppendInput::Swap(MVStoreAppendInput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MVStoreAppendInput::InternalSwap(MVStoreAppendInput* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata MVStoreAppendInput::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_mvstore_2eproto);
  return ::file_level_metadata_mvstore_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MVStoreAppendOutput::InitAsDefaultInstance() {
}
class MVStoreAppendOutput::HasBitSetters {
 public:
  static void set_has_success(MVStoreAppendOutput* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MVStoreAppendOutput::kSuccessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MVStoreAppendOutput::MVStoreAppendOutput()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MVStoreAppendOutput)
}
MVStoreAppendOutput::MVStoreAppendOutput(const MVStoreAppendOutput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:MVStoreAppendOutput)
}

void MVStoreAppendOutput::SharedCtor() {
  success_ = false;
}

MVStoreAppendOutput::~MVStoreAppendOutput() {
  // @@protoc_insertion_point(destructor:MVStoreAppendOutput)
  SharedDtor();
}

void MVStoreAppendOutput::SharedDtor() {
}

void MVStoreAppendOutput::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MVStoreAppendOutput& MVStoreAppendOutput::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MVStoreAppendOutput_mvstore_2eproto.base);
  return *internal_default_instance();
}


void MVStoreAppendOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:MVStoreAppendOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  success_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MVStoreAppendOutput::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MVStoreAppendOutput*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required bool success = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_success(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MVStoreAppendOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MVStoreAppendOutput)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_success(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MVStoreAppendOutput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MVStoreAppendOutput)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MVStoreAppendOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MVStoreAppendOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MVStoreAppendOutput)
}

::google::protobuf::uint8* MVStoreAppendOutput::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MVStoreAppendOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MVStoreAppendOutput)
  return target;
}

size_t MVStoreAppendOutput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MVStoreAppendOutput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bool success = 1;
  if (has_success()) {
    total_size += 1 + 1;
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MVStoreAppendOutput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MVStoreAppendOutput)
  GOOGLE_DCHECK_NE(&from, this);
  const MVStoreAppendOutput* source =
      ::google::protobuf::DynamicCastToGenerated<MVStoreAppendOutput>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MVStoreAppendOutput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MVStoreAppendOutput)
    MergeFrom(*source);
  }
}

void MVStoreAppendOutput::MergeFrom(const MVStoreAppendOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MVStoreAppendOutput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_success()) {
    set_success(from.success());
  }
}

void MVStoreAppendOutput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MVStoreAppendOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MVStoreAppendOutput::CopyFrom(const MVStoreAppendOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MVStoreAppendOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MVStoreAppendOutput::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void MVStoreAppendOutput::Swap(MVStoreAppendOutput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MVStoreAppendOutput::InternalSwap(MVStoreAppendOutput* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(success_, other->success_);
}

::google::protobuf::Metadata MVStoreAppendOutput::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_mvstore_2eproto);
  return ::file_level_metadata_mvstore_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MVStoreIncrementInput::InitAsDefaultInstance() {
}
class MVStoreIncrementInput::HasBitSetters {
 public:
  static void set_has_key(MVStoreIncrementInput* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MVStoreIncrementInput::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MVStoreIncrementInput::MVStoreIncrementInput()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MVStoreIncrementInput)
}
MVStoreIncrementInput::MVStoreIncrementInput(const MVStoreIncrementInput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  // @@protoc_insertion_point(copy_constructor:MVStoreIncrementInput)
}

void MVStoreIncrementInput::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MVStoreIncrementInput_mvstore_2eproto.base);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MVStoreIncrementInput::~MVStoreIncrementInput() {
  // @@protoc_insertion_point(destructor:MVStoreIncrementInput)
  SharedDtor();
}

void MVStoreIncrementInput::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MVStoreIncrementInput::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MVStoreIncrementInput& MVStoreIncrementInput::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MVStoreIncrementInput_mvstore_2eproto.base);
  return *internal_default_instance();
}


void MVStoreIncrementInput::Clear() {
// @@protoc_insertion_point(message_clear_start:MVStoreIncrementInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    key_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MVStoreIncrementInput::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MVStoreIncrementInput*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required bytes key = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MVStoreIncrementInput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MVStoreIncrementInput)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MVStoreIncrementInput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MVStoreIncrementInput)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MVStoreIncrementInput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MVStoreIncrementInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MVStoreIncrementInput)
}

::google::protobuf::uint8* MVStoreIncrementInput::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MVStoreIncrementInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes key = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MVStoreIncrementInput)
  return target;
}

size_t MVStoreIncrementInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MVStoreIncrementInput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bytes key = 1;
  if (has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MVStoreIncrementInput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MVStoreIncrementInput)
  GOOGLE_DCHECK_NE(&from, this);
  const MVStoreIncrementInput* source =
      ::google::protobuf::DynamicCastToGenerated<MVStoreIncrementInput>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MVStoreIncrementInput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MVStoreIncrementInput)
    MergeFrom(*source);
  }
}

void MVStoreIncrementInput::MergeFrom(const MVStoreIncrementInput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MVStoreIncrementInput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_key()) {
    _has_bits_[0] |= 0x00000001u;
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
}

void MVStoreIncrementInput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MVStoreIncrementInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MVStoreIncrementInput::CopyFrom(const MVStoreIncrementInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MVStoreIncrementInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MVStoreIncrementInput::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void MVStoreIncrementInput::Swap(MVStoreIncrementInput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MVStoreIncrementInput::InternalSwap(MVStoreIncrementInput* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata MVStoreIncrementInput::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_mvstore_2eproto);
  return ::file_level_metadata_mvstore_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MVStoreIncrementOutput::InitAsDefaultInstance() {
}
class MVStoreIncrementOutput::HasBitSetters {
 public:
  static void set_has_success(MVStoreIncrementOutput* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MVStoreIncrementOutput::kSuccessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MVStoreIncrementOutput::MVStoreIncrementOutput()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MVStoreIncrementOutput)
}
MVStoreIncrementOutput::MVStoreIncrementOutput(const MVStoreIncrementOutput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:MVStoreIncrementOutput)
}

void MVStoreIncrementOutput::SharedCtor() {
  success_ = false;
}

MVStoreIncrementOutput::~MVStoreIncrementOutput() {
  // @@protoc_insertion_point(destructor:MVStoreIncrementOutput)
  SharedDtor();
}

void MVStoreIncrementOutput::SharedDtor() {
}

void MVStoreIncrementOutput::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MVStoreIncrementOutput& MVStoreIncrementOutput::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MVStoreIncrementOutput_mvstore_2eproto.base);
  return *internal_default_instance();
}


void MVStoreIncrementOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:MVStoreIncrementOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  success_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MVStoreIncrementOutput::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MVStoreIncrementOutput*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required bool success = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_success(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MVStoreIncrementOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MVStoreIncrementOutput)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_success(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MVStoreIncrementOutput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MVStoreIncrementOutput)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MVStoreIncrementOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MVStoreIncrementOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MVStoreIncrementOutput)
}

::google::protobuf::uint8* MVStoreIncrementOutput::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MVStoreIncrementOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MVStoreIncrementOutput)
  return target;
}

size_t MVStoreIncrementOutput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MVStoreIncrementOutput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bool success = 1;
  if (has_success()) {
    total_size += 1 + 1;
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MVStoreIncrementOutput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MVStoreIncrementOutput)
  GOOGLE_DCHECK_NE(&from, this);
  const MVStoreIncrementOutput* source =
      ::google::protobuf::DynamicCastToGenerated<MVStoreIncrementOutput>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MVStoreIncrementOutput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MVStoreIncrementOutput)
    MergeFrom(*source);
  }
}

void MVStoreIncrementOutput::MergeFrom(const MVStoreIncrementOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MVStoreIncrementOutput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_success()) {
    set_success(from.success());
  }
}

void MVStoreIncrementOutput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MVStoreIncrementOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MVStoreIncrementOutput::CopyFrom(const MVStoreIncrementOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MVStoreIncrementOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MVStoreIncrementOutput::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void MVStoreIncrementOutput::Swap(MVStoreIncrementOutput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MVStoreIncrementOutput::InternalSwap(MVStoreIncrementOutput* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(success_, other->success_);
}

::google::protobuf::Metadata MVStoreIncrementOutput::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_mvstore_2eproto);
  return ::file_level_metadata_mvstore_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MVStoreMicroInput::InitAsDefaultInstance() {
}
class MVStoreMicroInput::HasBitSetters {
 public:
  static void set_has_writes(MVStoreMicroInput* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MVStoreMicroInput::kKeysFieldNumber;
const int MVStoreMicroInput::kWritesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MVStoreMicroInput::MVStoreMicroInput()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MVStoreMicroInput)
}
MVStoreMicroInput::MVStoreMicroInput(const MVStoreMicroInput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      keys_(from.keys_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  writes_ = from.writes_;
  // @@protoc_insertion_point(copy_constructor:MVStoreMicroInput)
}

void MVStoreMicroInput::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MVStoreMicroInput_mvstore_2eproto.base);
  writes_ = 10;
}

MVStoreMicroInput::~MVStoreMicroInput() {
  // @@protoc_insertion_point(destructor:MVStoreMicroInput)
  SharedDtor();
}

void MVStoreMicroInput::SharedDtor() {
}

void MVStoreMicroInput::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MVStoreMicroInput& MVStoreMicroInput::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MVStoreMicroInput_mvstore_2eproto.base);
  return *internal_default_instance();
}


void MVStoreMicroInput::Clear() {
// @@protoc_insertion_point(message_clear_start:MVStoreMicroInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keys_.Clear();
  writes_ = 10;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MVStoreMicroInput::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MVStoreMicroInput*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated bytes keys = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          object = msg->add_keys();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParser;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // optional int32 writes = 2 [default = 10];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_writes(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MVStoreMicroInput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MVStoreMicroInput)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes keys = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_keys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 writes = 2 [default = 10];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_writes(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &writes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MVStoreMicroInput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MVStoreMicroInput)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MVStoreMicroInput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MVStoreMicroInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes keys = 1;
  for (int i = 0, n = this->keys_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->keys(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 writes = 2 [default = 10];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->writes(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MVStoreMicroInput)
}

::google::protobuf::uint8* MVStoreMicroInput::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MVStoreMicroInput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes keys = 1;
  for (int i = 0, n = this->keys_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->keys(i), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 writes = 2 [default = 10];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->writes(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MVStoreMicroInput)
  return target;
}

size_t MVStoreMicroInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MVStoreMicroInput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes keys = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->keys_size());
  for (int i = 0, n = this->keys_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->keys(i));
  }

  // optional int32 writes = 2 [default = 10];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->writes());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MVStoreMicroInput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MVStoreMicroInput)
  GOOGLE_DCHECK_NE(&from, this);
  const MVStoreMicroInput* source =
      ::google::protobuf::DynamicCastToGenerated<MVStoreMicroInput>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MVStoreMicroInput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MVStoreMicroInput)
    MergeFrom(*source);
  }
}

void MVStoreMicroInput::MergeFrom(const MVStoreMicroInput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MVStoreMicroInput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keys_.MergeFrom(from.keys_);
  if (from.has_writes()) {
    set_writes(from.writes());
  }
}

void MVStoreMicroInput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MVStoreMicroInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MVStoreMicroInput::CopyFrom(const MVStoreMicroInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MVStoreMicroInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MVStoreMicroInput::IsInitialized() const {
  return true;
}

void MVStoreMicroInput::Swap(MVStoreMicroInput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MVStoreMicroInput::InternalSwap(MVStoreMicroInput* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  keys_.InternalSwap(CastToBase(&other->keys_));
  swap(writes_, other->writes_);
}

::google::protobuf::Metadata MVStoreMicroInput::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_mvstore_2eproto);
  return ::file_level_metadata_mvstore_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MVStoreMicroOutput::InitAsDefaultInstance() {
}
class MVStoreMicroOutput::HasBitSetters {
 public:
  static void set_has_success(MVStoreMicroOutput* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MVStoreMicroOutput::kSuccessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MVStoreMicroOutput::MVStoreMicroOutput()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MVStoreMicroOutput)
}
MVStoreMicroOutput::MVStoreMicroOutput(const MVStoreMicroOutput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:MVStoreMicroOutput)
}

void MVStoreMicroOutput::SharedCtor() {
  success_ = false;
}

MVStoreMicroOutput::~MVStoreMicroOutput() {
  // @@protoc_insertion_point(destructor:MVStoreMicroOutput)
  SharedDtor();
}

void MVStoreMicroOutput::SharedDtor() {
}

void MVStoreMicroOutput::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MVStoreMicroOutput& MVStoreMicroOutput::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MVStoreMicroOutput_mvstore_2eproto.base);
  return *internal_default_instance();
}


void MVStoreMicroOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:MVStoreMicroOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  success_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MVStoreMicroOutput::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MVStoreMicroOutput*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required bool success = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_success(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MVStoreMicroOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MVStoreMicroOutput)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_success(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MVStoreMicroOutput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MVStoreMicroOutput)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MVStoreMicroOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MVStoreMicroOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MVStoreMicroOutput)
}

::google::protobuf::uint8* MVStoreMicroOutput::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MVStoreMicroOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool success = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MVStoreMicroOutput)
  return target;
}

size_t MVStoreMicroOutput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MVStoreMicroOutput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bool success = 1;
  if (has_success()) {
    total_size += 1 + 1;
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MVStoreMicroOutput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MVStoreMicroOutput)
  GOOGLE_DCHECK_NE(&from, this);
  const MVStoreMicroOutput* source =
      ::google::protobuf::DynamicCastToGenerated<MVStoreMicroOutput>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MVStoreMicroOutput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MVStoreMicroOutput)
    MergeFrom(*source);
  }
}

void MVStoreMicroOutput::MergeFrom(const MVStoreMicroOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MVStoreMicroOutput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_success()) {
    set_success(from.success());
  }
}

void MVStoreMicroOutput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MVStoreMicroOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MVStoreMicroOutput::CopyFrom(const MVStoreMicroOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MVStoreMicroOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MVStoreMicroOutput::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void MVStoreMicroOutput::Swap(MVStoreMicroOutput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MVStoreMicroOutput::InternalSwap(MVStoreMicroOutput* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(success_, other->success_);
}

::google::protobuf::Metadata MVStoreMicroOutput::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_mvstore_2eproto);
  return ::file_level_metadata_mvstore_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::MVStoreWriteInput* Arena::CreateMaybeMessage< ::MVStoreWriteInput >(Arena* arena) {
  return Arena::CreateInternal< ::MVStoreWriteInput >(arena);
}
template<> PROTOBUF_NOINLINE ::MVStoreReadInput* Arena::CreateMaybeMessage< ::MVStoreReadInput >(Arena* arena) {
  return Arena::CreateInternal< ::MVStoreReadInput >(arena);
}
template<> PROTOBUF_NOINLINE ::MVStoreReadOutput* Arena::CreateMaybeMessage< ::MVStoreReadOutput >(Arena* arena) {
  return Arena::CreateInternal< ::MVStoreReadOutput >(arena);
}
template<> PROTOBUF_NOINLINE ::MVStoreAppendInput* Arena::CreateMaybeMessage< ::MVStoreAppendInput >(Arena* arena) {
  return Arena::CreateInternal< ::MVStoreAppendInput >(arena);
}
template<> PROTOBUF_NOINLINE ::MVStoreAppendOutput* Arena::CreateMaybeMessage< ::MVStoreAppendOutput >(Arena* arena) {
  return Arena::CreateInternal< ::MVStoreAppendOutput >(arena);
}
template<> PROTOBUF_NOINLINE ::MVStoreIncrementInput* Arena::CreateMaybeMessage< ::MVStoreIncrementInput >(Arena* arena) {
  return Arena::CreateInternal< ::MVStoreIncrementInput >(arena);
}
template<> PROTOBUF_NOINLINE ::MVStoreIncrementOutput* Arena::CreateMaybeMessage< ::MVStoreIncrementOutput >(Arena* arena) {
  return Arena::CreateInternal< ::MVStoreIncrementOutput >(arena);
}
template<> PROTOBUF_NOINLINE ::MVStoreMicroInput* Arena::CreateMaybeMessage< ::MVStoreMicroInput >(Arena* arena) {
  return Arena::CreateInternal< ::MVStoreMicroInput >(arena);
}
template<> PROTOBUF_NOINLINE ::MVStoreMicroOutput* Arena::CreateMaybeMessage< ::MVStoreMicroOutput >(Arena* arena) {
  return Arena::CreateInternal< ::MVStoreMicroOutput >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
